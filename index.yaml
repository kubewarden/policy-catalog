apiVersion: v1
entries:
  allow-privilege-escalation-psp:
  - annotations:
      artifacthub.io/repository: allow-privilege-escalation-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allow Privilege Escalation PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allow-privilege-escalation-psp
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.7
    apiVersion: v1
    appVersion: 0.2.7
    created: "2025-03-18T13:56:56.763541667Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowance of privilege escalation in containers and init containers of a
      pod
    digest: e76086714e812116676307db3e1e9de754d1593fa325ee9753ff0197eaad506f
    home: https://github.com/kubewarden/allow-privilege-escalation-psp-policy
    keywords:
    - PSP
    - privilege escalation
    name: allow-privilege-escalation-psp
    sources:
    - ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v0.2.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allow-privilege-escalation-psp-0.2.7/allow-privilege-escalation-psp-0.2.7.tgz
    version: 0.2.7
  allowed-fsgroups-psp:
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.10
    apiVersion: v1
    appVersion: 0.1.10
    created: "2025-03-18T13:56:56.967768245Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: 1da012b59d9846b368b687c0848aee3e0784875bd9bbb079dee37cd82b46c3ce
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v0.1.10
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-fsgroups-psp-0.1.10/allowed-fsgroups-psp-0.1.10.tgz
    version: 0.1.10
  allowed-proc-mount-types-psp:
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-03-18T13:56:57.137917698Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: a6eb6f508c58856b01fd05dd3b5fd61b0e2b16dce5e2a74d94986cb341b1d5a5
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v0.1.11
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-proc-mount-types-psp-0.1.11/allowed-proc-mount-types-psp-0.1.11.tgz
    version: 0.1.11
  capabilities-psp:
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v0.1.16
    apiVersion: v1
    appVersion: 0.1.16
    created: "2025-03-18T13:56:57.302083086Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: 2df7964441d3186b552e12c006abe865d49ae68df0961f4445fc1a7694c98e09
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v0.1.16
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/capabilities-psp-0.1.16/capabilities-psp-0.1.16.tgz
    version: 0.1.16
  cel-policy:
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.2.2
    apiVersion: v1
    appVersion: 1.2.2
    created: "2025-03-18T13:56:57.522946012Z"
    description: A policy that evaluates CEL expressions
    digest: af87b637a79ae5ec47357b82de9986bc54ed63b00851e5fbb89fbd4b15da5f68
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.2.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/cel-policy-1.2.2/cel-policy-1.2.2.tgz
    version: 1.2.2
  container-resources:
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.0
    apiVersion: v1
    appVersion: 0.3.0
    created: "2025-03-18T13:56:57.733462642Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: 0deaa4b149a48acaa03dcd390067b3ce429ba3f960c9ede62452378550542c2c
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v0.3.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-resources-0.3.0/container-resources-0.3.0.tgz
    version: 0.3.0
  container-running-as-user:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As User
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-user
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:22.76259003Z"
    description: 'Containers has a feature in which you specify the ID of the user
      which all processes in the container will run with. This Policy enforces that
      the `securityContext.runAsUser` attribute is set to a uid greater than root
      uid. Running as root user gives the container full access to all resources in
      the VM it is running on. Containers should not run with such access rights unless
      required by design.  '
    digest: 3dcf2defd92e9e5a30ce0c5fd773473ca4f167d9660e78c1b3874e9276b9bb72
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-user
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-user:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-user-1.0.0/container-running-as-user-1.0.0.tgz
    version: 1.0.0
  containers-should-not-run-in-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Should Not Run In Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-should-not-run-in-namespace
      kubewarden/resources: Pod, Deployment, Job, ReplicationController, ReplicaSet,
        DaemonSet, StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:00.688871781Z"
    description: 'This Policy ensure workloads are not running in a specified namespace.  '
    digest: 78aee949e0e87ec86e4bab864c183c29e6fbf482fcb32d6a243c30a9677b86e7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - cis-benchmark
    - soc2-type1
    name: containers-should-not-run-in-namespace
    sources:
    - ghcr.io/kubewarden/policies/containers-should-not-run-in-namespace:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-should-not-run-in-namespace-1.0.0/containers-should-not-run-in-namespace-1.0.0.tgz
    version: 1.0.0
  deprecated-api-versions:
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v0.1.15-k8sv1.32.0
    apiVersion: v1
    appVersion: 0.1.15-k8sv1.32.0
    created: "2025-03-18T13:56:57.991170421Z"
    description: Find deprecated and removed Kubernetes resources
    digest: 8872abfeadfa4e60aee34bb81058e8d633712677be667e2f6dcbbb6691157ed2
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v0.1.15-k8sv1.32.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/deprecated-api-versions-0.1.15-k8sv1.32.0/deprecated-api-versions-0.1.15-k8sv1.32.0.tgz
    version: 0.1.15-k8sv1.32.0
  disallow-service-loadbalancer:
  - annotations:
      artifacthub.io/repository: disallow-service-loadbalancer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Loadbalancer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-loadbalancer
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.8
    apiVersion: v1
    appVersion: 0.1.8
    created: "2025-03-18T13:56:58.266846201Z"
    description: A policy that prevents the creation of Service resources of type
      `LoadBalancer`
    digest: 6aa257f2f2f9d0f07d36e5df6f2be6f0367d3a236317973fd21dfa6a3f927814
    home: https://github.com/kubewarden/disallow-service-loadbalancer-policy
    keywords:
    - service
    name: disallow-service-loadbalancer
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-loadbalancer:v0.1.8
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/disallow-service-loadbalancer-0.1.8/disallow-service-loadbalancer-0.1.8.tgz
    version: 0.1.8
  disallow-service-nodeport:
  - annotations:
      artifacthub.io/repository: disallow-service-nodeport
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Nodeport
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-nodeport
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:56:58.540990573Z"
    description: A policy that prevents the creation of Service resources of type
      `NodePort`
    digest: ff18e9eafa4e933ef0ff42b704a32bb173c34d43eb005c74fd51a640ec4a7b69
    home: https://github.com/kubewarden/disallow-service-nodeport-policy
    keywords:
    - service
    name: disallow-service-nodeport
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-nodeport:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/disallow-service-nodeport-0.1.7/disallow-service-nodeport-0.1.7.tgz
    version: 0.1.7
  echo:
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-03-18T13:56:58.71645094Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: e450319aef336346fab2404ec3c4cd2de742bec40c33708a1b5394fa9e538d2c
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/echo-0.1.5/echo-0.1.5.tgz
    version: 0.1.5
  env-variable-secrets-scanner:
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.8
    apiVersion: v1
    appVersion: 0.1.8
    created: "2025-03-18T13:56:58.921173173Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: b34eb891cf047b9624cb45633a810e0fa828ce40c78c247fa3b6b703fa0d1bf9
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v0.1.8
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/env-variable-secrets-scanner-0.1.8/env-variable-secrets-scanner-0.1.8.tgz
    version: 0.1.8
  environment-variable-policy:
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:56:59.149658695Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: 15485ebfe7784c4b2f462da33b3f6703a1546b5318433250cb20b8f9e31cfb3d
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-0.1.7/environment-variable-policy-0.1.7.tgz
    version: 0.1.7
  flexvolume-drivers-psp:
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:56:59.358946429Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: 0a8ee06c77812f27dacf1c2b63dee3c4adb189741bf2a70b67f26403c0dd7db1
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/flexvolume-drivers-psp-0.1.7/flexvolume-drivers-psp-0.1.7.tgz
    version: 0.1.7
  helm-chart-cosign-verification:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-cosign-verification
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:15:39.548268123Z"
    description: HelmChart objects must provide cosign verification and reference
      a secret containing the Cosign public keys of trusted authors
    digest: f308ef3d88b072d537a48249cb3b218de121eb81d47c1afd75ad3d3d8f3cda03
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-cosign-verification:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-cosign-verification-1.0.0/helm-chart-cosign-verification-1.0.0.tgz
    version: 1.0.0
  helm-release-storage-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Storage Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-storage-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:57.587093826Z"
    description: HelmRelease storageNamespace must contain a value from storage_namespaces.
    digest: aa56e3d087ae445eff0747475cd277cdb6a97c7919877e2c034b644412f37388
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-storage-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-storage-namespace:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-storage-namespace-1.0.0/helm-release-storage-namespace-1.0.0.tgz
    version: 1.0.0
  host-namespaces-psp:
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:56:59.547731929Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 293dd977de540dcb50800adafe5bd1948bb3f8acc5615517a6ffd66ec275c16e
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/host-namespaces-psp-0.1.7/host-namespaces-psp-0.1.7.tgz
    version: 0.1.7
  hostpaths-psp:
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-03-18T13:56:59.751640516Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: deea79a812f303ed8032f41c4049b1a668d9f39d1c3437e0c29e1c367652d470
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v0.1.11
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/hostpaths-psp-0.1.11/hostpaths-psp-0.1.11.tgz
    version: 0.1.11
  ingress-policy:
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.16
    apiVersion: v1
    appVersion: 0.1.16
    created: "2025-03-18T13:56:59.924069719Z"
    description: Enforce requirements on Ingress resources
    digest: 45e248c88cabd4033fa2dbdf74f4ee3c8aee0303f817b95ca6b070aa2a707c1c
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v0.1.16
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-policy-0.1.16/ingress-policy-0.1.16.tgz
    version: 0.1.16
  ingress-unique-host:
  - annotations:
      artifacthub.io/repository: unique-ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Unique Ingress host
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-ingress-policy
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-03-18T13:57:00.110099874Z"
    description: Requires all Ingress rule hosts to be unique
    digest: 56f83337127965427a36a03ccb593b7415aee3faf9aff61215d73d579c9160d7
    home: https://github.com/kubewarden/unique-ingress-policy
    keywords:
    - ingress
    - kubewarden
    name: ingress-unique-host
    sources:
    - ghcr.io/kubewarden/policies/unique-ingress-policy:v0.1.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-unique-host-0.1.5/ingress-unique-host-0.1.5.tgz
    version: 0.1.5
  istio-gateway-approved-hosts:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Gateway Approved Hosts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-gateway-approved-hosts
      kubewarden/resources: Gateway
      kubewarden/rules: |
        - apiGroups:
          - networking.istio.io
          apiVersions:
          - v1
          resources:
          - gateways
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.265597125Z"
    description: '### Istio Gateway Approved Hosts This ensures you are only serving
      traffic for approved hostnames.  '
    digest: fc18d3a5f5638b33e30d60c5e9f737e833c7c302a1ae852ad95ca96aab2a6d7f
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-gateway-approved-hosts
    sources:
    - ghcr.io/kubewarden/policies/istio-gateway-approved-hosts:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-gateway-approved-hosts-1.0.0/istio-gateway-approved-hosts-1.0.0.tgz
    version: 1.0.0
  istio-injected-namespaces:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Injected Namespaces
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-injected-namespaces
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:00.877583006Z"
    description: '# Istio-Injected Namespaces Specify namespaces you would like to
      be labeld with `istio-injected: enabled`. Namespaces with this label with automatically
      deploy a Istio sidecar with each pod.  '
    digest: 437152a55f71dbe6fe9922d256f2701c7e98644aa7370b54d0578231dfae37c6
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-injected-namespaces
    sources:
    - ghcr.io/kubewarden/policies/istio-injected-namespaces:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-injected-namespaces-1.0.0/istio-injected-namespaces-1.0.0.tgz
    version: 1.0.0
  kustomization-patches-requirement:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Patches
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-patches-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:57.689054626Z"
    description: Kustomization patches should be enabled or disabled based on input.
    digest: 5549279fea0f523fc3ae7431191230b054768d9acf8af1abe9547da2b7c62972
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-patches-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-patches-requirement:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-patches-requirement-1.0.0/kustomization-patches-requirement-1.0.0.tgz
    version: 1.0.0
  kustomization-prune:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Prune
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-prune
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:57.852400262Z"
    description: The 'spec.prune' field in the Kustomization object must be set according
      to the input parameter 'prune'.
    digest: fbf36297c14ff6aef211703f92ab3fb550a69fd49c319b26798d9b604bf3c7fd
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-prune
    sources:
    - ghcr.io/kubewarden/policies/kustomization-prune:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-prune-1.0.0/kustomization-prune-1.0.0.tgz
    version: 1.0.0
  kustomization-var-substitution:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Var Substitution
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-var-substitution
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:57.977421724Z"
    description: The property 'spec.postBuild.substitute.var_substitution_enabled'
      must be disabled.
    digest: 9d1707c2c846be7f0b07cae55ff13a50720544120889ca9c7365abc4f2dc15ea
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-var-substitution
    sources:
    - ghcr.io/kubewarden/policies/kustomization-var-substitution:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-var-substitution-1.0.0/kustomization-var-substitution-1.0.0.tgz
    version: 1.0.0
  namespace-label-propagator-policy:
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-03-18T13:57:00.276691799Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: 3d69efb7f078847b6c2d4ec1054344bd5473cf01d3ebd83366af3f70de6e77fa
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v0.1.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-label-propagator-policy-0.1.5/namespace-label-propagator-policy-0.1.5.tgz
    version: 0.1.5
  namespace-pod-quota:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Pod Quota
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-pod-quota
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:22.891500311Z"
    description: 'When using a pod quota ensure setting the proper value for the quantity
      of pods you wish to have in your namespace.  '
    digest: d6ea51ded9ac94a0d5a55786cf6d435434895a789cb4150c266cfbdd407c59eb
    home: https://github.com/kubewarden/rego-policies-library
    name: namespace-pod-quota
    sources:
    - ghcr.io/kubewarden/policies/namespace-pod-quota:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-pod-quota-1.0.0/namespace-pod-quota-1.0.0.tgz
    version: 1.0.0
  namespace-resources-limitrange:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Resources Limitrange
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-resources-limitrange
      kubewarden/resources: LimitRange
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - limitranges
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.393920427Z"
    description: 'When setting up default CPU and Memory values for your namespace,
      this policy will check if both requests and limits are set. This policy checks
      for the following:  | Resource Setting | Resource Type  | |---|---| |  default
      | cpu  | |  default  | memory  | |  defaultRequest |  cpu | |  defaultRequest
      | memory  | |  min | memory  | |  min | cpu  | |  max | cpu | |  max | memory  | '
    digest: dd5f1ca934724fc82e7770a9cd37753f5edf1f4af59700bc56dee4fdfd0cadce
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: namespace-resources-limitrange
    sources:
    - ghcr.io/kubewarden/policies/namespace-resources-limitrange:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-resources-limitrange-1.0.0/namespace-resources-limitrange-1.0.0.tgz
    version: 1.0.0
  network-allow-egress-traffic-from-namespace-to-another:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Egress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.006925474Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Egress traffic from one namespace to another.  By default,
      if no policies exist in a namespace, then all ingress and egress traffic is
      allowed to and from pods in that namespace.  '
    digest: 7ccffca782a72e659cd4d2cb474fcc6a29f0024d1a49206b39a889152fa8e7be
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-egress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-egress-traffic-from-namespace-to-another-1.0.0/network-allow-egress-traffic-from-namespace-to-another-1.0.0.tgz
    version: 1.0.0
  network-allow-ingress-traffic-from-namespace-to-another:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Ingress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.149494194Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Ingress traffic from one namespace to another.  By
      default, if no policies exist in a namespace, then all ingress and egress traffic
      is allowed to and from pods in that namespace.  '
    digest: 54125dd42950407733cd6a13ccaa19aa02b697fa4be262414c61541b6d533e7b
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-ingress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-ingress-traffic-from-namespace-to-another-1.0.0/network-allow-ingress-traffic-from-namespace-to-another-1.0.0.tgz
    version: 1.0.0
  network-block-all-ingress-traffic-to-namespace-from-cidr-block:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Block All Ingress Traffic To Namespace From
        CIDR Block
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.276293024Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to block all Egress traffic from a specified namespace to a
      CIDR block of IP addresses.   By default, if no policies exist in a namespace,
      then all ingress and egress traffic is allowed to and from pods in that namespace.  '
    digest: 45f3da9e0aa72e7b59093b3cdc9c770809ba0328aff176dd1f935cb6b0173010
    home: https://github.com/kubewarden/rego-policies-library
    name: network-block-all-ingress-traffic-to-namespace-from-cidr-block
    sources:
    - ghcr.io/kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.0/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.0.tgz
    version: 1.0.0
  ocirepository-cosign-verification:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-cosign-verification
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:58.086767948Z"
    description: OCIRepository resources must provide Cosign verification and reference
      a specific key.
    digest: 3bf927f3b28673063518e83442dfb33e2fa6b42f763308e54a3ab9607b2cfe6d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-cosign-verification:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-cosign-verification-1.0.0/ocirepository-cosign-verification-1.0.0.tgz
    version: 1.0.0
  ocirepository-ignore-suffixes:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-ignore-suffixes
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.503615297Z"
    description: OCIRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit..
    digest: ea8766377aeafbb810001a8ddbb38266e79d1c8cdb8ef7ca0af7d0ffc2c5f739
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    - oci
    - suffixes
    name: ocirepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-ignore-suffixes:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-ignore-suffixes-1.0.0/ocirepository-ignore-suffixes-1.0.0.tgz
    version: 1.0.0
  ocirepository-layer-selector:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Layer Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-layer-selector
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:58.205674204Z"
    description: OCIRepository layer selector must only reference predefined media/operation
      type.
    digest: 7615ba4cc6741feca5ad070864c2b61eace6f648cb5a79f842fec08ccf4ba5de
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-layer-selector
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-layer-selector:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-layer-selector-1.0.0/ocirepository-layer-selector-1.0.0.tgz
    version: 1.0.0
  ocirepository-not-latest:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Not Latest Tag
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-not-latest
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.636275532Z"
    description: OCIRepository resources must not use 'latest' as a tag reference.
    digest: 1540a063276c0d041209c49ed52a17066d13911672d03ecfda09e29ceefb46b4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-not-latest
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-not-latest:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-not-latest-1.0.0/ocirepository-not-latest-1.0.0.tgz
    version: 1.0.0
  ocirepository-organization-domains:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-organization-domains
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:58.328279721Z"
    description: OCIRepository resources must only be from allowed organization domains.
    digest: 074be5f11763162f8c56035ad543e2506f107713c5231d993866cc9d0c129d92
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-organization-domains:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-organization-domains-1.0.0/ocirepository-organization-domains-1.0.0.tgz
    version: 1.0.0
  ocirepository-patch-annotation:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Patch Annotation
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-patch-annotation
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.741158922Z"
    description: OCIRepository resources must have a patch annotation that matches
      the provider.
    digest: d67119fc340f8fceb01ec4b392b4d72aa6d64b756b2b86f3c06aa65b553c15ea
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-patch-annotation
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-patch-annotation:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-patch-annotation-1.0.0/ocirepository-patch-annotation-1.0.0.tgz
    version: 1.0.0
  persistent-volume-access-modes:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Access Modes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-access-modes
      kubewarden/resources: PersistentVolume
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumes
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.395024719Z"
    description: 'A PersistentVolume can be mounted on a host in any way supported
      by the resource provider. As shown in the table below, providers will have different
      capabilities and each PV''s access modes are set to the specific modes supported
      by that particular volume. For example, NFS can support multiple read/write
      clients, but a specific NFS PV might be exported on the server as read-only.
      Each PV gets its own set of access modes describing that specific PV''s capabilities.  The
      access modes are:  * ReadWriteOnce * ReadOnlyMany * ReadWriteMany * ReadWriteOncePod '
    digest: cb5e4e3d33f5dc180af13f4391c030b2db027ff4ba0f10e4e990cf5037163061
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-access-modes
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-access-modes-1.0.0/persistent-volume-access-modes-1.0.0.tgz
    version: 1.0.0
  persistent-volume-claim-snapshot:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Claim Snapshot
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-claim-snapshot
      kubewarden/resources: VolumeSnapshot
      kubewarden/rules: |
        - apiGroups:
          - snapshot.storage.k8s.io
          apiVersions:
          - v1
          resources:
          - volumesnapshots
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:01.057229017Z"
    description: 'This Policy checks for a PVC Snapshot.  '
    digest: 61392bf065a405a25c5cc0dd18c2b78d10788ba8acceb3d73c62b5f13faa362b
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-claim-snapshot
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-claim-snapshot:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-claim-snapshot-1.0.0/persistent-volume-claim-snapshot-1.0.0.tgz
    version: 1.0.0
  persistentvolumeclaim-storageclass-policy:
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-03-18T13:57:00.465078126Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: d8cc6a279d3b39b7879a0ded5df21c914a3146def99a08dcb454f2733ee7be42
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v0.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-0.1.1/persistentvolumeclaim-storageclass-policy-0.1.1.tgz
    version: 0.1.1
  pod-ndots:
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-03-18T13:57:00.659523723Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: e0751242966ef4f3ffa4838393a6d30e68edae7dc72c27050ac38253709110fd
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v0.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-ndots-0.1.1/pod-ndots-0.1.1.tgz
    version: 0.1.1
  pod-privileged-policy:
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.3
    apiVersion: v1
    appVersion: 0.3.3
    created: "2025-03-18T13:57:00.82723218Z"
    description: Limit the ability to create privileged containers
    digest: 28c4961b6973f21deec099a0cc1ed333a743f0009cadd89a3edb326e7aa3cab9
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v0.3.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-privileged-policy-0.3.3/pod-privileged-policy-0.3.3.tgz
    version: 0.3.3
  pod-runtime:
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.2
    apiVersion: v1
    appVersion: 0.2.2
    created: "2025-03-18T13:57:01.034468925Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: b0fda1a3b9715f46e63a7b8a422532f6504a6f2c652cdd5515bb5afeb31ed1bd
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v0.2.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-runtime-0.2.2/pod-runtime-0.2.2.tgz
    version: 0.2.2
  psa-label-enforcer:
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.3
    apiVersion: v1
    appVersion: 0.1.3
    created: "2025-03-18T13:57:01.304254367Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: b98ae80d3f3612792720f1fc68765c01d081b838dd8391c4ad4fa89946e5cef9
    home: https://github.com/kubewarden/psa-label-enforcer
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v0.1.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psa-label-enforcer-0.1.3/psa-label-enforcer-0.1.3.tgz
    version: 0.1.3
  psp-apparmor:
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.13
    apiVersion: v1
    appVersion: 0.1.13
    created: "2025-03-18T13:57:01.47445663Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: 5e2603d62e4f7b0f9a11e003140cf1c39a70a1e52a93f60c2a0bdbbde069b9ee
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v0.1.13
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psp-apparmor-0.1.13/psp-apparmor-0.1.13.tgz
    version: 0.1.13
  rbac-prohibit-list-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit List On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-list-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:01.273156873Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''list'' verb on ''secrets'' resource. '
    digest: 39328e78742325064c4a5eec0b67e8d230cb580ff474e6def7ffcbcc3d3edf2f
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-list-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-list-secrets:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-list-secrets-1.0.0/rbac-prohibit-list-secrets-1.0.0.tgz
    version: 1.0.0
  rbac-prohibit-watch-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Watch On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-watch-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.510107703Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''watch'' verb on ''secrets'' resource. '
    digest: 8bdb02231c4849741bf256fbc9e23d1588dcd27c534b87267fd3c297c2f8ec03
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-watch-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-watch-secrets:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-watch-secrets-1.0.0/rbac-prohibit-watch-secrets-1.0.0.tgz
    version: 1.0.0
  rbac-prohibit-wildcard-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcard On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcard-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:01.470242743Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''wildcard'' verb on ''secrets'' resource. '
    digest: 076f1cb161cba7aa4ae4cefb23f6bb9be3bbe6f11ad64d4016fce397d1f94d80
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcard-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcard-secrets:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcard-secrets-1.0.0/rbac-prohibit-wildcard-secrets-1.0.0.tgz
    version: 1.0.0
  rbac-prohibit-wildcards-policyrule-resources:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Resources
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.60860209Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: 0dddff03145febd665baf2701f8f19c7f6b243bb3e77a66bf4d8de1801dcc833
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-resources
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-resources-1.0.0/rbac-prohibit-wildcards-policyrule-resources-1.0.0.tgz
    version: 1.0.0
  rbac-prohibit-wildcards-policyrule-verbs:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Verbs
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.730674322Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: 24eac4b1205ee46ba26bf44f8285d266413ab59fffd2d30c3afa385ecfc05e80
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-verbs
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-verbs-1.0.0/rbac-prohibit-wildcards-policyrule-verbs-1.0.0.tgz
    version: 1.0.0
  readonly-root-filesystem-psp:
  - annotations:
      artifacthub.io/repository: readonly-root-filesystem-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Readonly Root Filesystem PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/readonly-root-filesystem-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.6
    apiVersion: v1
    appVersion: 0.1.6
    created: "2025-03-18T13:57:01.652548868Z"
    description: A Kubewarden policy that enforces root filesystem to be readonly
    digest: 7faa4dae9c0578c18f19edf7206a83fde402fb57e89182d42c47b056477b59df
    home: https://github.com/kubewarden/readonly-root-filesystem-psp-policy
    keywords:
    - psp
    - container
    - filesystem
    - volume
    name: readonly-root-filesystem-psp
    sources:
    - ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v0.1.6
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/readonly-root-filesystem-psp-0.1.6/readonly-root-filesystem-psp-0.1.6.tgz
    version: 0.1.6
  resource-quota-setting-is-missing:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Quota Setting Is Missing
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-quota-setting-is-missing
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:01.663429461Z"
    description: 'When creating resource quotas per namespace, ensure CPU and Memory
      requests and limits are set. '
    digest: c29b1a14b7b8523193fe278f99f641df3c59624dc82db5dfd6c906d3265fef7c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: resource-quota-setting-is-missing
    sources:
    - ghcr.io/kubewarden/policies/resource-quota-setting-is-missing:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-quota-setting-is-missing-1.0.0/resource-quota-setting-is-missing-1.0.0.tgz
    version: 1.0.0
  resource-reconcile-interval:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.842232624Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: e720554c57277258ec70fa0246fe70a5211e9fb0f7ddecf952d5663f84c8053b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-reconcile-interval-1.0.0/resource-reconcile-interval-1.0.0.tgz
    version: 1.0.0
  resource-suspend-waiver:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Suspend Waiver
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-suspend-waiver
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.974672552Z"
    description: Resource cannot be suspended unless it's on the waiver list.
    digest: 22fbaa3c161c9b46c6e991b93ee64fcf4e9bfd1654b0bd0df0ccfb370ab4f939
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-suspend-waiver
    sources:
    - ghcr.io/kubewarden/policies/resource-suspend-waiver:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-suspend-waiver-1.0.0/resource-suspend-waiver-1.0.0.tgz
    version: 1.0.0
  safe-annotations:
  - annotations:
      artifacthub.io/repository: safe-annotations
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Annotations
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-annotations
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.10
    apiVersion: v1
    appVersion: 0.2.10
    created: "2025-03-18T13:57:01.892197423Z"
    description: A policy that validates Kubernetes' resource annotations
    digest: 7f5f4843c85c724599f2b5c773629f5f07624d55492f6818ca58a6587ac09993
    home: https://github.com/kubewarden/safe-annotations-policy
    keywords:
    - annotations
    name: safe-annotations
    sources:
    - ghcr.io/kubewarden/policies/safe-annotations:v0.2.10
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-annotations-0.2.10/safe-annotations-0.2.10.tgz
    version: 0.2.10
  safe-labels:
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.14
    apiVersion: v1
    appVersion: 0.1.14
    created: "2025-03-18T13:57:02.107692228Z"
    description: A policy that validates Kubernetes' resource labels
    digest: f3e69ca4633939413b2e29f0d62e56792ab9847fe124cd7812e1bf64bd61c7b1
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v0.1.14
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-labels-0.1.14/safe-labels-0.1.14.tgz
    version: 0.1.14
  seccomp-psp:
  - annotations:
      artifacthub.io/repository: seccomp-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Seccomp PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/seccomp-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.4
    apiVersion: v1
    appVersion: 0.1.4
    created: "2025-03-18T13:57:02.305847901Z"
    description: Pod Security Policy that controls usage of Seccomp profile
    digest: ea78f4c4aded7bbdb71fb530c791d1a2088fb972a099e5b62f3f739eccf8605b
    home: https://github.com/kubewarden/seccomp-psp-policy
    keywords:
    - psp
    - seccomp
    name: seccomp-psp
    sources:
    - ghcr.io/kubewarden/policies/seccomp-psp:v0.1.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/seccomp-psp-0.1.4/seccomp-psp-0.1.4.tgz
    version: 0.1.4
  selinux-psp:
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.12
    apiVersion: v1
    appVersion: 0.1.12
    created: "2025-03-18T13:57:02.480067502Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: 4bce965e8a637fb2b8b1fe6d7a6198aebb23d76fe1ea7c88fd776039dd134d97
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v0.1.12
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/selinux-psp-0.1.12/selinux-psp-0.1.12.tgz
    version: 0.1.12
  share-pid-namespace-policy:
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-03-18T13:57:02.723220172Z"
    description: Policy validates pods sharing processes PID namespace
    digest: f81d40f8bd580963078e0af195c8e744627888eef4a8978a15f3a9e43dc9f8f7
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v0.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/share-pid-namespace-policy-0.1.1/share-pid-namespace-policy-0.1.1.tgz
    version: 0.1.1
  sysctl-psp:
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.12
    apiVersion: v1
    appVersion: 0.1.12
    created: "2025-03-18T13:57:02.90490754Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: 500c1e5eb79fe73f406e626871b6db95a9ff00062e4175fbe4645269c79f278d
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v0.1.12
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/sysctl-psp-0.1.12/sysctl-psp-0.1.12.tgz
    version: 0.1.12
  trusted-repos:
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.0
    apiVersion: v1
    appVersion: 0.2.0
    created: "2025-03-18T13:57:03.093596136Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: 735f2cd6fa3f81b2dc3a8adc307c90ba9a556abeb52e1023ca531302286c97b3
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v0.2.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/trusted-repos-0.2.0/trusted-repos-0.2.0.tgz
    version: 0.2.0
  unique-service-selector-policy:
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.0
    apiVersion: v1
    appVersion: 0.1.0
    created: "2025-03-18T13:57:03.379088371Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: 04f647ba33753cfd6771aa7297f1e8c18f2674fb0a0b30a253ed58b80be32739
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v0.1.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/unique-service-selector-policy-0.1.0/unique-service-selector-policy-0.1.0.tgz
    version: 0.1.0
  user-group-psp:
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.6.3
    apiVersion: v1
    appVersion: 0.6.3
    created: "2025-03-18T13:57:03.555856157Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: 3d1c6b8120d9af9d82c1652b212cde74b8915d80aeec0015de74d27ad618619b
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v0.6.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/user-group-psp-0.6.3/user-group-psp-0.6.3.tgz
    version: 0.6.3
  verify-image-signatures:
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.0
    apiVersion: v1
    appVersion: 0.3.0
    created: "2025-03-18T13:57:03.733667758Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: dab42863ab480de32343f8fbee02bf0923a221b0fa2bbb548d15c3f2eae10bc6
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v0.3.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/verify-image-signatures-0.3.0/verify-image-signatures-0.3.0.tgz
    version: 0.3.0
  volumemounts:
  - annotations:
      artifacthub.io/repository: volumemounts-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: volumeMounts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumemounts
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:57:03.894802894Z"
    description: Policy that inspects containers, init containers, and ephemeral containers,
      and restricts their usage of volumes by  checking the `volume` name being used
      in `volumeMounts[*].name`
    digest: 50cb34a891b2603f2fb30c333672d4499f0131618c62a248909d79da74665fa9
    home: https://github.com/kubewarden/volumemounts-policy
    keywords:
    - container
    - volumeMounts
    - volume
    - pod
    - workload resources
    name: volumemounts
    sources:
    - ghcr.io/kubewarden/policies/volumemounts:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumemounts-0.1.7/volumemounts-0.1.7.tgz
    version: 0.1.7
  volumes-psp:
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-03-18T13:57:04.064062593Z"
    description: Pod Security Policy that controls usage of volumes
    digest: 707747f39a83e2f39ab12fcb257d4b039b5089dface4a7e4773ab3896f195dc0
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v0.1.11
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumes-psp-0.1.11/volumes-psp-0.1.11.tgz
    version: 0.1.11
generated: "2025-03-19T07:16:58.328299848Z"
