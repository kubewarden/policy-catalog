apiVersion: v1
entries:
  affinity-node-selector:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Affinity Node Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/affinity-node-selector
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:44.930431894Z"
    description: 'This Policy allows setting a key and value for `nodeSelector` when
      assigning pods to nodes.   `nodeSelector` is a field of PodSpec. It specifies
      a map of key-value pairs. For the pod to be eligible to scheduled on a node,
      the node must have each of the indicated key-value pairs as labels (it can have
      additional labels as well).  '
    digest: b3e555c7309776e57c52add7f149233f123c8a536cdb02e2a9151279cba9e476
    home: https://github.com/kubewarden/rego-policies-library
    name: affinity-node-selector
    sources:
    - ghcr.io/kubewarden/policies/affinity-node-selector:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/affinity-node-selector-1.0.3/affinity-node-selector-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Affinity Node Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/affinity-node-selector
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:24:24.912488603Z"
    description: 'This Policy allows setting a key and value for `nodeSelector` when
      assigning pods to nodes.   `nodeSelector` is a field of PodSpec. It specifies
      a map of key-value pairs. For the pod to be eligible to scheduled on a node,
      the node must have each of the indicated key-value pairs as labels (it can have
      additional labels as well).  '
    digest: 9c657e6bc5c3216eb1260e754aa5eadc93d40ceb9e678ed8f738fee6809b11a9
    home: https://github.com/kubewarden/rego-policies-library
    name: affinity-node-selector
    sources:
    - ghcr.io/kubewarden/policies/affinity-node-selector:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/affinity-node-selector-1.0.2/affinity-node-selector-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Affinity Node Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/affinity-node-selector
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:57:43.224601031Z"
    description: 'This Policy allows setting a key and value for `nodeSelector` when
      assigning pods to nodes.   `nodeSelector` is a field of PodSpec. It specifies
      a map of key-value pairs. For the pod to be eligible to scheduled on a node,
      the node must have each of the indicated key-value pairs as labels (it can have
      additional labels as well).  '
    digest: a7e1e0be61a11e2a97950f46ee91d6983d02b57c44786b0fa01573d6314bd871
    home: https://github.com/kubewarden/rego-policies-library
    name: affinity-node-selector
    sources:
    - ghcr.io/kubewarden/policies/affinity-node-selector:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/affinity-node-selector-1.0.1/affinity-node-selector-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Affinity Node Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/affinity-node-selector
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:53.297975157Z"
    description: 'This Policy allows setting a key and value for `nodeSelector` when
      assigning pods to nodes.   `nodeSelector` is a field of PodSpec. It specifies
      a map of key-value pairs. For the pod to be eligible to scheduled on a node,
      the node must have each of the indicated key-value pairs as labels (it can have
      additional labels as well).  '
    digest: c82f4bb09106730b0bf6ef9d9bac825113f0dc262661e706b1a9583e8a095fc9
    home: https://github.com/kubewarden/rego-policies-library
    name: affinity-node-selector
    sources:
    - ghcr.io/kubewarden/policies/affinity-node-selector:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/affinity-node-selector-1.0.0/affinity-node-selector-1.0.0.tgz
    version: 1.0.0
  allow-privilege-escalation-psp:
  - annotations:
      artifacthub.io/repository: allow-privilege-escalation-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allow Privilege Escalation PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allow-privilege-escalation-psp
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:47.39970787Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowance of privilege escalation in containers and init containers of a
      pod
    digest: aca016e67d70a5aec2f1e2a031addeba5869df438a548928dcd8ce65ff9f8ea2
    home: https://github.com/kubewarden/allow-privilege-escalation-psp-policy
    keywords:
    - PSP
    - privilege escalation
    name: allow-privilege-escalation-psp
    sources:
    - ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allow-privilege-escalation-psp-1.0.0/allow-privilege-escalation-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: allow-privilege-escalation-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allow Privilege Escalation PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allow-privilege-escalation-psp
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.7
    apiVersion: v1
    appVersion: 0.2.7
    created: "2025-03-18T13:56:56.763541667Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowance of privilege escalation in containers and init containers of a
      pod
    digest: e76086714e812116676307db3e1e9de754d1593fa325ee9753ff0197eaad506f
    home: https://github.com/kubewarden/allow-privilege-escalation-psp-policy
    keywords:
    - PSP
    - privilege escalation
    name: allow-privilege-escalation-psp
    sources:
    - ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v0.2.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allow-privilege-escalation-psp-0.2.7/allow-privilege-escalation-psp-0.2.7.tgz
    version: 0.2.7
  allowed-fsgroups-psp:
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:26:59.29053733Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: 50c41f6094dc3ee56c43ed54e30b9ff13f39bcd3db01e225e14db1563545497b
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-fsgroups-psp-1.0.4/allowed-fsgroups-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:15:22.306690073Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: 6c1ab681345a01d7aaf14c69fd4977c8aee620c009c281ceb43596a2331aaf5b
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-fsgroups-psp-1.0.3/allowed-fsgroups-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:29:57.612450757Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: 90f19c54a6c28b683fda289ae0346df0c6d8b031f1ab2861e456b81c046159ac
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-fsgroups-psp-1.0.2/allowed-fsgroups-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:47.496027488Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: 6870dc9b510330ef0693201a865c34e1679b429fc12d7f79fa789ae4c8a0302b
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-fsgroups-psp-1.0.0/allowed-fsgroups-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.10
    apiVersion: v1
    appVersion: 0.1.10
    created: "2025-03-18T13:56:56.967768245Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: 1da012b59d9846b368b687c0848aee3e0784875bd9bbb079dee37cd82b46c3ce
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v0.1.10
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-fsgroups-psp-0.1.10/allowed-fsgroups-psp-0.1.10.tgz
    version: 0.1.10
  allowed-proc-mount-types-psp:
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T13:57:59.177863716Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: abe53b4fa4c5e4740f43b7cac1b41efc6c572ed07434e7918958b88ed7c37492
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-proc-mount-types-psp-1.0.4/allowed-proc-mount-types-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:09:44.383730897Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: 5af74a7c8e4e5e120b692fbea6078b7b3977c37005cdd16170b71cb3fb95e330
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-proc-mount-types-psp-1.0.3/allowed-proc-mount-types-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:22:38.058348401Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: a53d44b7b9ebd58df7f58b587e5d9d2d3b39d9461c82031dd4e49e635a08d84f
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-proc-mount-types-psp-1.0.2/allowed-proc-mount-types-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:32.646584742Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: 0f261e47c9a1afbffc87533085b23c242aff23798576d31c360d09242fb442fe
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-proc-mount-types-psp-1.0.0/allowed-proc-mount-types-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-03-18T13:56:57.137917698Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: a6eb6f508c58856b01fd05dd3b5fd61b0e2b16dce5e2a74d94986cb341b1d5a5
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v0.1.11
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/allowed-proc-mount-types-psp-0.1.11/allowed-proc-mount-types-psp-0.1.11.tgz
    version: 0.1.11
  block-workloads-created-without-specifying-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Block Workloads Created Without Specifying Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/block-workloads-created-without-specifying-namespace
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:36.379213198Z"
    description: 'Using this Policy, you can prohibit workloads from being created
      in a default namespace due to the lack of a namespace label.  '
    digest: 34d4e5704a4bfa2a08654299b45e7428fa11a61e373c9fd19b9a5b758cba137c
    home: https://github.com/kubewarden/rego-policies-library
    name: block-workloads-created-without-specifying-namespace
    sources:
    - ghcr.io/kubewarden/policies/block-workloads-created-without-specifying-namespace:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/block-workloads-created-without-specifying-namespace-1.0.3/block-workloads-created-without-specifying-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Block Workloads Created Without Specifying Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/block-workloads-created-without-specifying-namespace
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:00:42.954247111Z"
    description: 'Using this Policy, you can prohibit workloads from being created
      in a default namespace due to the lack of a namespace label.  '
    digest: 2c2e8a570bbf830079d4ffe50fd30a40c4195aa7d51cec1f136b1596b7fd5742
    home: https://github.com/kubewarden/rego-policies-library
    name: block-workloads-created-without-specifying-namespace
    sources:
    - ghcr.io/kubewarden/policies/block-workloads-created-without-specifying-namespace:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/block-workloads-created-without-specifying-namespace-1.0.2/block-workloads-created-without-specifying-namespace-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Block Workloads Created Without Specifying Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/block-workloads-created-without-specifying-namespace
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:49.483901826Z"
    description: 'Using this Policy, you can prohibit workloads from being created
      in a default namespace due to the lack of a namespace label.  '
    digest: 2ab9259787e9f99286b47ba93d1f205026386b5e308b56918a491cf94be94fb8
    home: https://github.com/kubewarden/rego-policies-library
    name: block-workloads-created-without-specifying-namespace
    sources:
    - ghcr.io/kubewarden/policies/block-workloads-created-without-specifying-namespace:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/block-workloads-created-without-specifying-namespace-1.0.1/block-workloads-created-without-specifying-namespace-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Block Workloads Created Without Specifying Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/block-workloads-created-without-specifying-namespace
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:14.091415268Z"
    description: 'Using this Policy, you can prohibit workloads from being created
      in a default namespace due to the lack of a namespace label.  '
    digest: db85499e90b65effec622ab5ce4e292cf64c1324cbfcc3e840f3492c9ea46502
    home: https://github.com/kubewarden/rego-policies-library
    name: block-workloads-created-without-specifying-namespace
    sources:
    - ghcr.io/kubewarden/policies/block-workloads-created-without-specifying-namespace:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/block-workloads-created-without-specifying-namespace-1.0.0/block-workloads-created-without-specifying-namespace-1.0.0.tgz
    version: 1.0.0
  bucket-approved-region:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Approved Region
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-approved-region
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:10.164076096Z"
    description: Bucket region must be one of the approved regions.
    digest: 0973fd440b20792945054f32f93cd808c8e5fef7365d86b7b06f20a77dc8357c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-approved-region
    sources:
    - ghcr.io/kubewarden/policies/bucket-approved-region:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-approved-region-1.0.3/bucket-approved-region-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Approved Region
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-approved-region
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:56:27.4661811Z"
    description: Bucket region must be one of the approved regions.
    digest: 1cc566c8245b4ee910ea9af98445453be9afc06c63081b4248ddf0504f45d132
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-approved-region
    sources:
    - ghcr.io/kubewarden/policies/bucket-approved-region:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-approved-region-1.0.2/bucket-approved-region-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Approved Region
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-approved-region
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:26.373324411Z"
    description: Bucket region must be one of the approved regions.
    digest: 67821965af3e45f18038b397a1f0d9295543358957afcd441b4de4862b3b2545
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-approved-region
    sources:
    - ghcr.io/kubewarden/policies/bucket-approved-region:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-approved-region-1.0.1/bucket-approved-region-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Approved Region
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-approved-region
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:14.262822543Z"
    description: Bucket region must be one of the approved regions.
    digest: e434f12cdb6f14e34b1ca20e869edcd4418bab88aa1de36924e61213a0fbcc8f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-approved-region
    sources:
    - ghcr.io/kubewarden/policies/bucket-approved-region:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-approved-region-1.0.0/bucket-approved-region-1.0.0.tgz
    version: 1.0.0
  bucket-endpoint-domain:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Endpoint Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-endpoint-domain
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:23.632199391Z"
    description: Bucket endpoint domain must be one of the trusted domains.
    digest: 2a7c2a8eb0840f4bfb9beb22de5be610a778da3ec62de07e6864d10146b6eb67
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-endpoint-domain
    sources:
    - ghcr.io/kubewarden/policies/bucket-endpoint-domain:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-endpoint-domain-1.0.3/bucket-endpoint-domain-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Endpoint Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-endpoint-domain
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:55:22.700377253Z"
    description: Bucket endpoint domain must be one of the trusted domains.
    digest: df8f0e682d1c3fb8178c190f5665f73ce2644e9a815134789d47b8871598d246
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-endpoint-domain
    sources:
    - ghcr.io/kubewarden/policies/bucket-endpoint-domain:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-endpoint-domain-1.0.2/bucket-endpoint-domain-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Endpoint Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-endpoint-domain
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:44.277512559Z"
    description: Bucket endpoint domain must be one of the trusted domains.
    digest: 95fc299c997cf4c861572940aa99b452106f1ad21c8d7c2584b4fb14147cbaf5
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-endpoint-domain
    sources:
    - ghcr.io/kubewarden/policies/bucket-endpoint-domain:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-endpoint-domain-1.0.1/bucket-endpoint-domain-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Endpoint Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-endpoint-domain
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:14.447362398Z"
    description: Bucket endpoint domain must be one of the trusted domains.
    digest: 030c34b3364a7a1e63dfae9813731abccd176c3eecea1a04224c1fc00a009098
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-endpoint-domain
    sources:
    - ghcr.io/kubewarden/policies/bucket-endpoint-domain:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-endpoint-domain-1.0.0/bucket-endpoint-domain-1.0.0.tgz
    version: 1.0.0
  bucket-insecure-connections:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Insecure Connections
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-insecure-connections
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:10.318083359Z"
    description: Ensure that Bucket objects do not use insecure connections
    digest: 1ff099fba7fd153f942d711ebe63900541af5d1b17b11f938eeaf8a3703da489
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-insecure-connections
    sources:
    - ghcr.io/kubewarden/policies/bucket-insecure-connections:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-insecure-connections-1.0.3/bucket-insecure-connections-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Insecure Connections
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-insecure-connections
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:54:16.976442982Z"
    description: Ensure that Bucket objects do not use insecure connections
    digest: b1d0a5ae23cb19090715523cadb90a7ccf6e700fda0af07a5f7d5e83035d5359
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-insecure-connections
    sources:
    - ghcr.io/kubewarden/policies/bucket-insecure-connections:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-insecure-connections-1.0.2/bucket-insecure-connections-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Insecure Connections
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-insecure-connections
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:26.488686157Z"
    description: Ensure that Bucket objects do not use insecure connections
    digest: f46aa99935e62658094f893f565110a12a85fc6fafc6bf48b7cc586ea2769c9f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-insecure-connections
    sources:
    - ghcr.io/kubewarden/policies/bucket-insecure-connections:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-insecure-connections-1.0.1/bucket-insecure-connections-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Insecure Connections
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-insecure-connections
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:51.821766705Z"
    description: Ensure that Bucket objects do not use insecure connections
    digest: 96f39ccfe0b059b1b9ab5fa9ab39fc0ff4565089e3a14de2bfdafc59861c3f9e
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-insecure-connections
    sources:
    - ghcr.io/kubewarden/policies/bucket-insecure-connections:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/bucket-insecure-connections-1.0.0/bucket-insecure-connections-1.0.0.tgz
    version: 1.0.0
  capabilities-psp:
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:29:08.648924572Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: ffeb5a3d1ec871842e2f96a4d938ff24db4e346fddc1e89cdc6f3ef17e18cc95
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/capabilities-psp-1.0.4/capabilities-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:34:19.548832031Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: bee70c16e21d427cf6e78aefc8bc2b69cb78fa44741f3124e7f10b5828c11598
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/capabilities-psp-1.0.3/capabilities-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:22:01.325102939Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: 523cf375f7344946dc0068e5a3064d6f3b18395a71a46604a663b0d3f18252c4
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/capabilities-psp-1.0.2/capabilities-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:32.863717105Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: 426be9a6312b563c1b7283989cb532e9ce994312790b4bbbe4bd9ad86bcfee5f
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/capabilities-psp-1.0.0/capabilities-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v0.1.16
    apiVersion: v1
    appVersion: 0.1.16
    created: "2025-03-18T13:56:57.302083086Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: 2df7964441d3186b552e12c006abe865d49ae68df0961f4445fc1a7694c98e09
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v0.1.16
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/capabilities-psp-0.1.16/capabilities-psp-0.1.16.tgz
    version: 0.1.16
  cel-policy:
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.3.4
    apiVersion: v1
    appVersion: 1.3.4
    created: "2025-07-14T17:30:28.520119947Z"
    description: A policy that evaluates CEL expressions
    digest: 71faca3f6d3baf45cab700917a6728848e8d9dd5ac014481d39008dc057d4d26
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.3.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/cel-policy-1.3.4/cel-policy-1.3.4.tgz
    version: 1.3.4
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.3.3
    apiVersion: v1
    appVersion: 1.3.3
    created: "2025-06-13T18:46:50.269183855Z"
    description: A policy that evaluates CEL expressions
    digest: 225d97349448294dc8cbfb82ac0b085d4c0af9a8ad425129cd9990bfd9ba4ca2
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.3.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/cel-policy-1.3.3/cel-policy-1.3.3.tgz
    version: 1.3.3
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.3.1
    apiVersion: v1
    appVersion: 1.3.1
    created: "2025-04-16T10:30:16.526656415Z"
    description: A policy that evaluates CEL expressions
    digest: 1901ec1b73f084416e64acb41342e3f987853e5258fb236a3312c939dfaf6380
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.3.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/cel-policy-1.3.1/cel-policy-1.3.1.tgz
    version: 1.3.1
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.3.0
    apiVersion: v1
    appVersion: 1.3.0
    created: "2025-04-09T13:37:01.833146314Z"
    description: A policy that evaluates CEL expressions
    digest: 6675126eb599153513957b812de6c43a7640450dcf1b8b6978fea07d0a84895b
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.3.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/cel-policy-1.3.0/cel-policy-1.3.0.tgz
    version: 1.3.0
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.2.2
    apiVersion: v1
    appVersion: 1.2.2
    created: "2025-03-18T13:56:57.522946012Z"
    description: A policy that evaluates CEL expressions
    digest: af87b637a79ae5ec47357b82de9986bc54ed63b00851e5fbb89fbd4b15da5f68
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.2.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/cel-policy-1.2.2/cel-policy-1.2.2.tgz
    version: 1.2.2
  container-block-sysctl:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:31.754609879Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: c9c56d2caec2cc0cf0dd573f3ad1ec2aff433a60ce350b0cbca70b5be83c674b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-block-sysctl-1.0.3/container-block-sysctl-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-16T10:31:03.617842279Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: be36230b7c2c4dac07eeeb3161460e90e2f27d3508750316e6577555cda35d14
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-block-sysctl-1.0.2/container-block-sysctl-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:08.919491678Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: 371c22c86dd41bc4a8d9d83d138a691bcd48cb2e99d55123f40b3204e50bfe09
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-block-sysctl-1.0.1/container-block-sysctl-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:53.439420045Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: 0f7faab224dff39d57ce7cfb561983deaa1cfd5df1c33c47b2bb9b4b95f70cbc
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-block-sysctl-1.0.0/container-block-sysctl-1.0.0.tgz
    version: 1.0.0
  container-block-sysctl.cve-2022-0811:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls CVE-2022-0811
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl.cve-2022-0811
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:31.907923883Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: dddeb43c40832757ae0602dce0b403cc0af19a7ec1885c19bbfa7a2e0290c047
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl.cve-2022-0811
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl.cve-2022-0811:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-block-sysctl.cve-2022-0811-1.0.3/container-block-sysctl.cve-2022-0811-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls CVE-2022-0811
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl.cve-2022-0811
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-16T10:31:03.778756448Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: 869ef3ec087d2772e1215d707ae2477eed2434d30e1e843bfad6ce773886139e
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl.cve-2022-0811
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl.cve-2022-0811:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-block-sysctl.cve-2022-0811-1.0.2/container-block-sysctl.cve-2022-0811-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls CVE-2022-0811
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl.cve-2022-0811
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:57:27.045564482Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: 9268ec056c6caaa9dea0094fcdde6534c4173117d3d39466583dbf59c842a2ee
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl.cve-2022-0811
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl.cve-2022-0811:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-block-sysctl.cve-2022-0811-1.0.1/container-block-sysctl.cve-2022-0811-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls CVE-2022-0811
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl.cve-2022-0811
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:53.567491946Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: eef844e947a01bd1cfe4282a94b0df801880c9d9890f02d6de33b50fb89bd4fb
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl.cve-2022-0811
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl.cve-2022-0811:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-block-sysctl.cve-2022-0811-1.0.0/container-block-sysctl.cve-2022-0811-1.0.0.tgz
    version: 1.0.0
  container-resources:
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:24:22.074719158Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: aafd8a4f8ca4ebf5d80c849448e4e8db96ebf9ab4462e5d23f6dc22927f114bf
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-resources-1.0.4/container-resources-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:21:33.180327198Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: 2a19554efc5effe72ffaaeb4ec0d51f645aaa46187098aa0d67ba8d86d3f0a17
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-resources-1.0.3/container-resources-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:08:56.125854801Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: 262c1040120abf968d08a30d7ff546bf00a4abe61664a92ae24720759aa76406
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-resources-1.0.2/container-resources-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:33.082988641Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: 16c64b330cee2a864c3596834b523e5adbccd31bd5831923bb660d9b8a010a33
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-resources-1.0.0/container-resources-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.0
    apiVersion: v1
    appVersion: 0.3.0
    created: "2025-03-18T13:56:57.733462642Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: 0deaa4b149a48acaa03dcd390067b3ce429ba3f960c9ede62452378550542c2c
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v0.3.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-resources-0.3.0/container-resources-0.3.0.tgz
    version: 0.3.0
  container-running-as-root:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As Root
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-root
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:32.054024241Z"
    description: 'Running as root gives the container full access to all resources
      in the VM it is running on. Containers should not run with such access rights
      unless required by design. This Policy enforces that the `securityContext.runAsNonRoot`
      attribute is set to `true`.  '
    digest: 0b268c1c66b98d8dacd403c043fcbf85da0488f9df27f5931d183755a4236189
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-root
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-root:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-root-1.0.3/container-running-as-root-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As Root
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-root
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-16T10:31:03.933793361Z"
    description: 'Running as root gives the container full access to all resources
      in the VM it is running on. Containers should not run with such access rights
      unless required by design. This Policy enforces that the `securityContext.runAsNonRoot`
      attribute is set to `true`.  '
    digest: cb1473a939771f81f57f19ef1a7ff70f56815e7fd75405e146032e2da873f8ed
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-root
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-root:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-root-1.0.2/container-running-as-root-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As Root
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-root
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:58.778677561Z"
    description: 'Running as root gives the container full access to all resources
      in the VM it is running on. Containers should not run with such access rights
      unless required by design. This Policy enforces that the `securityContext.runAsNonRoot`
      attribute is set to `true`.  '
    digest: 35d0b121b99a11b6f7c84b8fb2db70fd6c10682a8e7234b20bc619fa093976ff
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-root
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-root:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-root-1.0.1/container-running-as-root-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As Root
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-root
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:53.690052154Z"
    description: 'Running as root gives the container full access to all resources
      in the VM it is running on. Containers should not run with such access rights
      unless required by design. This Policy enforces that the `securityContext.runAsNonRoot`
      attribute is set to `true`.  '
    digest: 9e2f87ab60f47f8ecfebde197a98e413c9975ca47416f08e6be397f3c010c478
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-root
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-root:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-root-1.0.0/container-running-as-root-1.0.0.tgz
    version: 1.0.0
  container-running-as-user:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As User
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-user
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-03T10:34:35.398844584Z"
    description: 'Containers has a feature in which you specify the ID of the user
      which all processes in the container will run with. This Policy enforces that
      the `securityContext.runAsUser` attribute is set to a uid greater than root
      uid. Running as root user gives the container full access to all resources in
      the VM it is running on. Containers should not run with such access rights unless
      required by design.  '
    digest: a2818cc733d86985aefc4c1c0df15d6275db037a8497e5d5a860db395f05f54e
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-user
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-user:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-user-1.0.4/container-running-as-user-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As User
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-user
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:32.28039525Z"
    description: 'Containers has a feature in which you specify the ID of the user
      which all processes in the container will run with. This Policy enforces that
      the `securityContext.runAsUser` attribute is set to a uid greater than root
      uid. Running as root user gives the container full access to all resources in
      the VM it is running on. Containers should not run with such access rights unless
      required by design.  '
    digest: c3d2eb0fa56d503833742fcd518d44aad791d77a3ea91df400248ea7cc51fccf
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-user
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-user:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-user-1.0.3/container-running-as-user-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As User
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-user
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-16T10:31:04.116153602Z"
    description: 'Containers has a feature in which you specify the ID of the user
      which all processes in the container will run with. This Policy enforces that
      the `securityContext.runAsUser` attribute is set to a uid greater than root
      uid. Running as root user gives the container full access to all resources in
      the VM it is running on. Containers should not run with such access rights unless
      required by design.  '
    digest: 792f150259bf9d66466e7b3e4adc8eb6c9b07db3fa178016ee3aff60280272e3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-user
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-user:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-user-1.0.2/container-running-as-user-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As User
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-user
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:57:27.183413678Z"
    description: 'Containers has a feature in which you specify the ID of the user
      which all processes in the container will run with. This Policy enforces that
      the `securityContext.runAsUser` attribute is set to a uid greater than root
      uid. Running as root user gives the container full access to all resources in
      the VM it is running on. Containers should not run with such access rights unless
      required by design.  '
    digest: f119cb3a89ecd7a2cfb16e23e4b69fa276f7e0407b291056b894420644006f9c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-user
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-user:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-user-1.0.1/container-running-as-user-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As User
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-user
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:22.76259003Z"
    description: 'Containers has a feature in which you specify the ID of the user
      which all processes in the container will run with. This Policy enforces that
      the `securityContext.runAsUser` attribute is set to a uid greater than root
      uid. Running as root user gives the container full access to all resources in
      the VM it is running on. Containers should not run with such access rights unless
      required by design.  '
    digest: 3dcf2defd92e9e5a30ce0c5fd773473ca4f167d9660e78c1b3874e9276b9bb72
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-user
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-user:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/container-running-as-user-1.0.0/container-running-as-user-1.0.0.tgz
    version: 1.0.0
  containers-block-specific-image-names:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Specific Image Names
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-specific-image-names
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:16.41482103Z"
    description: 'This Policy prohibits images with certain image names from being
      deployed by specifying a list of unapproved names.  '
    digest: d70d39e190c4c77369f61e2e90bb3b5a454b3b85a009e0da6e6777745306e4b0
    home: https://github.com/kubewarden/rego-policies-library
    name: containers-block-specific-image-names
    sources:
    - ghcr.io/kubewarden/policies/containers-block-specific-image-names:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-specific-image-names-1.0.3/containers-block-specific-image-names-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Specific Image Names
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-specific-image-names
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:10:22.131648249Z"
    description: 'This Policy prohibits images with certain image names from being
      deployed by specifying a list of unapproved names.  '
    digest: 12c498c4d6e9507201c18aeb3f2da68c0608ede126ce7abab4e910d431ee1421
    home: https://github.com/kubewarden/rego-policies-library
    name: containers-block-specific-image-names
    sources:
    - ghcr.io/kubewarden/policies/containers-block-specific-image-names:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-specific-image-names-1.0.2/containers-block-specific-image-names-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Specific Image Names
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-specific-image-names
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:09.091346093Z"
    description: 'This Policy prohibits images with certain image names from being
      deployed by specifying a list of unapproved names.  '
    digest: 21e4678b6d0b3b4549fb9650afecdecd0277fe297bc0dc2e1eafb990cd8626ff
    home: https://github.com/kubewarden/rego-policies-library
    name: containers-block-specific-image-names
    sources:
    - ghcr.io/kubewarden/policies/containers-block-specific-image-names:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-specific-image-names-1.0.1/containers-block-specific-image-names-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Specific Image Names
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-specific-image-names
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:35.641358383Z"
    description: 'This Policy prohibits images with certain image names from being
      deployed by specifying a list of unapproved names.  '
    digest: c09038ed835f688edd90e215ee66335ded612e29b43b276968a63b26ee4047b9
    home: https://github.com/kubewarden/rego-policies-library
    name: containers-block-specific-image-names
    sources:
    - ghcr.io/kubewarden/policies/containers-block-specific-image-names:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-specific-image-names-1.0.0/containers-block-specific-image-names-1.0.0.tgz
    version: 1.0.0
  containers-block-ssh-port:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Ssh Port
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-ssh-port
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-03T10:08:55.153535945Z"
    description: 'This Policy checks if the container is exposing ssh port. '
    digest: 6c7d58727888fb9d2724cd2f04be7d72e5afdc5d70fe668e9d7e983934de1344
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    name: containers-block-ssh-port
    sources:
    - ghcr.io/kubewarden/policies/containers-block-ssh-port:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-ssh-port-1.0.4/containers-block-ssh-port-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Ssh Port
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-ssh-port
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:45.092450589Z"
    description: 'This Policy checks if the container is exposing ssh port. '
    digest: 359740de0fa7a53a4712c214f8bce6d245a10e99dccf9650b48d4023e3004639
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    name: containers-block-ssh-port
    sources:
    - ghcr.io/kubewarden/policies/containers-block-ssh-port:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-ssh-port-1.0.3/containers-block-ssh-port-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Ssh Port
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-ssh-port
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-16T10:31:17.270444126Z"
    description: 'This Policy checks if the container is exposing ssh port. '
    digest: 659a0209127b7e32c886c0b29e5b9e9221995ac64301b90c337085e95bf1a0b8
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    name: containers-block-ssh-port
    sources:
    - ghcr.io/kubewarden/policies/containers-block-ssh-port:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-ssh-port-1.0.2/containers-block-ssh-port-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Ssh Port
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-ssh-port
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:57:43.419762554Z"
    description: 'This Policy checks if the container is exposing ssh port. '
    digest: c8ee5c177776fb4ec4be4b07d1c799b57e9b0b5c561ac2ce9665596a6b114983
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    name: containers-block-ssh-port
    sources:
    - ghcr.io/kubewarden/policies/containers-block-ssh-port:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-ssh-port-1.0.1/containers-block-ssh-port-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Ssh Port
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-ssh-port
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:53.801594858Z"
    description: 'This Policy checks if the container is exposing ssh port. '
    digest: 2944f63933054f6986544910f4861fa77e5995c4c4e125486dc8869d149bb508
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    name: containers-block-ssh-port
    sources:
    - ghcr.io/kubewarden/policies/containers-block-ssh-port:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-block-ssh-port-1.0.0/containers-block-ssh-port-1.0.0.tgz
    version: 1.0.0
  containers-missing-security-context:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Missing Security Context
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-missing-security-context
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:23.756287822Z"
    description: 'This Policy checks if the container is missing securityContext while
      there is no securityContext defined on the Pod level as well. The security settings
      that are specified on the Pod level apply to all containers in the Pod. '
    digest: 64225c5db05153d4bc8ca3400c4c5e4db573de0cbf0fa23223f86270e353da04
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: containers-missing-security-context
    sources:
    - ghcr.io/kubewarden/policies/containers-missing-security-context:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-missing-security-context-1.0.3/containers-missing-security-context-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Missing Security Context
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-missing-security-context
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:58:35.536702426Z"
    description: 'This Policy checks if the container is missing securityContext while
      there is no securityContext defined on the Pod level as well. The security settings
      that are specified on the Pod level apply to all containers in the Pod. '
    digest: 1da151d262114c6370c6e8a6b4b2829e5918958ef763376ff05a21ad5d359ff7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: containers-missing-security-context
    sources:
    - ghcr.io/kubewarden/policies/containers-missing-security-context:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-missing-security-context-1.0.2/containers-missing-security-context-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Missing Security Context
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-missing-security-context
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:58.910169061Z"
    description: 'This Policy checks if the container is missing securityContext while
      there is no securityContext defined on the Pod level as well. The security settings
      that are specified on the Pod level apply to all containers in the Pod. '
    digest: a8c086be918daf49a96fd751e6917fd1078776c6bcd5bec25eb6ed859cdd203b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: containers-missing-security-context
    sources:
    - ghcr.io/kubewarden/policies/containers-missing-security-context:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-missing-security-context-1.0.1/containers-missing-security-context-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Missing Security Context
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-missing-security-context
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:14.610547773Z"
    description: 'This Policy checks if the container is missing securityContext while
      there is no securityContext defined on the Pod level as well. The security settings
      that are specified on the Pod level apply to all containers in the Pod. '
    digest: 9d4a6fd9ca1319e1598ca13bb7d493360ac764a676fc292a00dbe2eb0673e0c6
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: containers-missing-security-context
    sources:
    - ghcr.io/kubewarden/policies/containers-missing-security-context:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-missing-security-context-1.0.0/containers-missing-security-context-1.0.0.tgz
    version: 1.0.0
  containers-should-not-run-in-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Should Not Run In Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-should-not-run-in-namespace
      kubewarden/resources: Pod, Deployment, Job, ReplicationController, ReplicaSet,
        DaemonSet, StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:23.895295222Z"
    description: 'This Policy ensure workloads are not running in a specified namespace.  '
    digest: ab1681f9b78df5d52d6e22f0c1d0ec7099a3dae9207ab9e67eb0a9388c3c5a7f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - cis-benchmark
    - soc2-type1
    name: containers-should-not-run-in-namespace
    sources:
    - ghcr.io/kubewarden/policies/containers-should-not-run-in-namespace:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-should-not-run-in-namespace-1.0.3/containers-should-not-run-in-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Should Not Run In Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-should-not-run-in-namespace
      kubewarden/resources: Pod, Deployment, Job, ReplicationController, ReplicaSet,
        DaemonSet, StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:57:29.116752223Z"
    description: 'This Policy ensure workloads are not running in a specified namespace.  '
    digest: 588bb5dcf118047561bc531ee2b7ab974ced9af0f2b2f387773c01762abb3215
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - cis-benchmark
    - soc2-type1
    name: containers-should-not-run-in-namespace
    sources:
    - ghcr.io/kubewarden/policies/containers-should-not-run-in-namespace:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-should-not-run-in-namespace-1.0.2/containers-should-not-run-in-namespace-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Should Not Run In Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-should-not-run-in-namespace
      kubewarden/resources: Pod, Deployment, Job, ReplicationController, ReplicaSet,
        DaemonSet, StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:49.614442402Z"
    description: 'This Policy ensure workloads are not running in a specified namespace.  '
    digest: c25e78e0a6f3500437c6d90361e3e72a71cf974d98175072a098b01da4ad145d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - cis-benchmark
    - soc2-type1
    name: containers-should-not-run-in-namespace
    sources:
    - ghcr.io/kubewarden/policies/containers-should-not-run-in-namespace:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-should-not-run-in-namespace-1.0.1/containers-should-not-run-in-namespace-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Should Not Run In Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-should-not-run-in-namespace
      kubewarden/resources: Pod, Deployment, Job, ReplicationController, ReplicaSet,
        DaemonSet, StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:00.688871781Z"
    description: 'This Policy ensure workloads are not running in a specified namespace.  '
    digest: 78aee949e0e87ec86e4bab864c183c29e6fbf482fcb32d6a243c30a9677b86e7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - cis-benchmark
    - soc2-type1
    name: containers-should-not-run-in-namespace
    sources:
    - ghcr.io/kubewarden/policies/containers-should-not-run-in-namespace:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/containers-should-not-run-in-namespace-1.0.0/containers-should-not-run-in-namespace-1.0.0.tgz
    version: 1.0.0
  deprecated-api-versions:
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - audit.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          - v1beta3
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T10:39:11.140361709Z"
    description: Find deprecated and removed Kubernetes resources
    digest: 61ca29eb58c302481c60a693e8b95e9561a4ebfdbc57e47c89003dfc655214b2
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/deprecated-api-versions-1.0.3/deprecated-api-versions-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - audit.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          - v1beta3
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:21:02.513693554Z"
    description: Find deprecated and removed Kubernetes resources
    digest: 8e43f918bc0baf6d8031bdb5076f5c6bc5662921f23f8b2c3b5457edd7009db4
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/deprecated-api-versions-1.0.2/deprecated-api-versions-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - audit.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          - v1beta3
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:16.64812314Z"
    description: Find deprecated and removed Kubernetes resources
    digest: 5ecba27f0018b99fab8e455c269c60ccd1673f3e203208cedeb2f3ad8a6c83f5
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/deprecated-api-versions-1.0.0/deprecated-api-versions-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - audit.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          - v1beta3
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v0.2.0
    apiVersion: v1
    appVersion: 0.2.0
    created: "2025-03-19T13:05:33.87001955Z"
    description: Find deprecated and removed Kubernetes resources
    digest: 04b50e9d9e46803e07a1433944b57bc9c2f8ac029282bd8ce7987589c4e98011
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v0.2.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/deprecated-api-versions-0.2.0/deprecated-api-versions-0.2.0.tgz
    version: 0.2.0
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v0.1.15-k8sv1.32.0
    apiVersion: v1
    appVersion: 0.1.15-k8sv1.32.0
    created: "2025-03-18T13:56:57.991170421Z"
    description: Find deprecated and removed Kubernetes resources
    digest: 8872abfeadfa4e60aee34bb81058e8d633712677be667e2f6dcbbb6691157ed2
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v0.1.15-k8sv1.32.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/deprecated-api-versions-0.1.15-k8sv1.32.0/deprecated-api-versions-0.1.15-k8sv1.32.0.tgz
    version: 0.1.15-k8sv1.32.0
  disallow-service-loadbalancer:
  - annotations:
      artifacthub.io/repository: disallow-service-loadbalancer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Loadbalancer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-loadbalancer
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.6
    apiVersion: v1
    appVersion: 1.0.6
    created: "2025-08-13T14:21:10.185252145Z"
    description: A policy that prevents the creation of Service resources of type
      `LoadBalancer`
    digest: bac3d7c5c910a3cc800e32846a654bc2e4a9e144ff4b5b4fa3e720db3905b26d
    home: https://github.com/kubewarden/disallow-service-loadbalancer-policy
    keywords:
    - service
    name: disallow-service-loadbalancer
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-loadbalancer:v1.0.6
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/disallow-service-loadbalancer-1.0.6/disallow-service-loadbalancer-1.0.6.tgz
    version: 1.0.6
  - annotations:
      artifacthub.io/repository: disallow-service-loadbalancer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Loadbalancer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-loadbalancer
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.5
    apiVersion: v1
    appVersion: 1.0.5
    created: "2025-07-14T17:19:51.221742572Z"
    description: A policy that prevents the creation of Service resources of type
      `LoadBalancer`
    digest: 5f7b1c4253a3221fdb27dd1bc83b7ad11112569188be35cb14201dd38cc4ab26
    home: https://github.com/kubewarden/disallow-service-loadbalancer-policy
    keywords:
    - service
    name: disallow-service-loadbalancer
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-loadbalancer:v1.0.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/disallow-service-loadbalancer-1.0.5/disallow-service-loadbalancer-1.0.5.tgz
    version: 1.0.5
  - annotations:
      artifacthub.io/repository: disallow-service-loadbalancer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Loadbalancer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-loadbalancer
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-06-13T18:44:35.568575751Z"
    description: A policy that prevents the creation of Service resources of type
      `LoadBalancer`
    digest: 5a3cebb76cbd2719c4683b4361014f4211a72110a2e020837566e14277a74b09
    home: https://github.com/kubewarden/disallow-service-loadbalancer-policy
    keywords:
    - service
    name: disallow-service-loadbalancer
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-loadbalancer:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/disallow-service-loadbalancer-1.0.4/disallow-service-loadbalancer-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: disallow-service-loadbalancer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Loadbalancer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-loadbalancer
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-20T12:10:19.039310773Z"
    description: A policy that prevents the creation of Service resources of type
      `LoadBalancer`
    digest: 3cefe16406838d76ac23691cdcb780863a19317b7a41234ea9dc3234d3807f7c
    home: https://github.com/kubewarden/disallow-service-loadbalancer-policy
    keywords:
    - service
    name: disallow-service-loadbalancer
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-loadbalancer:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/disallow-service-loadbalancer-1.0.3/disallow-service-loadbalancer-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: disallow-service-loadbalancer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Loadbalancer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-loadbalancer
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.8
    apiVersion: v1
    appVersion: 0.1.8
    created: "2025-03-18T13:56:58.266846201Z"
    description: A policy that prevents the creation of Service resources of type
      `LoadBalancer`
    digest: 6aa257f2f2f9d0f07d36e5df6f2be6f0367d3a236317973fd21dfa6a3f927814
    home: https://github.com/kubewarden/disallow-service-loadbalancer-policy
    keywords:
    - service
    name: disallow-service-loadbalancer
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-loadbalancer:v0.1.8
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/disallow-service-loadbalancer-0.1.8/disallow-service-loadbalancer-0.1.8.tgz
    version: 0.1.8
  disallow-service-nodeport:
  - annotations:
      artifacthub.io/repository: disallow-service-nodeport
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Nodeport
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-nodeport
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:56:58.540990573Z"
    description: A policy that prevents the creation of Service resources of type
      `NodePort`
    digest: ff18e9eafa4e933ef0ff42b704a32bb173c34d43eb005c74fd51a640ec4a7b69
    home: https://github.com/kubewarden/disallow-service-nodeport-policy
    keywords:
    - service
    name: disallow-service-nodeport
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-nodeport:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/disallow-service-nodeport-0.1.7/disallow-service-nodeport-0.1.7.tgz
    version: 0.1.7
  do-not-expose-admission-controller-webhook-services:
  - annotations:
      artifacthub.io/repository: do-not-expose-admission-controller-webhook-services
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Do not expose admission controller webhook services
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/do-not-expose-admission-controller-webhook-services
      kubewarden/resources: ValidatingWebhookConfiguration, MutatingWebhookConfiguration
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1
          resources:
          - validatingwebhookconfigurations
          - mutatingwebhookconfigurations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.1.1
    apiVersion: v1
    appVersion: 1.1.1
    created: "2025-07-14T17:14:37.316519913Z"
    description: A policy that detects webhook services used by admission controllers
      that are accidentally exposed outside of the cluster
    digest: e4cbed7f58e0940276105888884f9d994058b20b107035fb21c5434f506fe34e
    home: https://github.com/yourorg/do-not-expose-admission-controller-webhook-services
    keywords:
    - webhooks
    name: do-not-expose-admission-controller-webhook-services
    sources:
    - ghcr.io/kubewarden/policies/do-not-expose-admission-controller-webhook-services:v1.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/do-not-expose-admission-controller-webhook-services-1.1.1/do-not-expose-admission-controller-webhook-services-1.1.1.tgz
    version: 1.1.1
  - annotations:
      artifacthub.io/repository: do-not-expose-admission-controller-webhook-services
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Do not expose admission controller webhook services
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/do-not-expose-admission-controller-webhook-services
      kubewarden/resources: ValidatingWebhookConfiguration, MutatingWebhookConfiguration
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1
          resources:
          - validatingwebhookconfigurations
          - mutatingwebhookconfigurations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.1.0
    apiVersion: v1
    appVersion: 1.1.0
    created: "2025-07-09T10:25:14.17133981Z"
    description: A policy that detects webhook services used by admission controllers
      that are accidentally exposed outside of the cluster
    digest: 5403b72e97f437bb0359c51a0abb3a6a50d89141a61f5f6c1450b40dc300559e
    home: https://github.com/yourorg/do-not-expose-admission-controller-webhook-services
    keywords:
    - webhooks
    name: do-not-expose-admission-controller-webhook-services
    sources:
    - ghcr.io/kubewarden/policies/do-not-expose-admission-controller-webhook-services:v1.1.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/do-not-expose-admission-controller-webhook-services-1.1.0/do-not-expose-admission-controller-webhook-services-1.1.0.tgz
    version: 1.1.0
  - annotations:
      artifacthub.io/repository: do-not-expose-admission-controller-webhook-services
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Do not expose admission controller webhook services
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/do-not-expose-admission-controller-webhook-services
      kubewarden/resources: ValidatingWebhookConfiguration, MutatingWebhookConfiguration
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1
          resources:
          - validatingwebhookconfigurations
          - mutatingwebhookconfigurations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:28:20.853843707Z"
    description: A policy that detects webhook services used by admission controllers
      that are accidentally exposed outside of the cluster
    digest: c23ccdc83995d488b64777d0fb679602f4ad99fb65fe7f61a08262ed151a6b0c
    home: https://github.com/yourorg/do-not-expose-admission-controller-webhook-services
    keywords:
    - webhooks
    name: do-not-expose-admission-controller-webhook-services
    sources:
    - ghcr.io/kubewarden/policies/do-not-expose-admission-controller-webhook-services:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/do-not-expose-admission-controller-webhook-services-1.0.0/do-not-expose-admission-controller-webhook-services-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: do-not-expose-admission-controller-webhook-services
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Do not expose admission controller webhook services
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/do-not-expose-admission-controller-webhook-services
      kubewarden/resources: ValidatingWebhookConfiguration, MutatingWebhookConfiguration
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1
          resources:
          - validatingwebhookconfigurations
          - mutatingwebhookconfigurations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.0
    apiVersion: v1
    appVersion: 0.1.0
    created: "2025-04-02T08:00:11.725623583Z"
    description: A policy that detects webhook services used by admission controllers
      that are accidentally exposed outside of the cluster
    digest: c0f3e112ff2eb21e0934138074d4ce73ba172fa6e28089d722723de3ec12fc57
    home: https://github.com/yourorg/do-not-expose-admission-controller-webhook-services
    keywords:
    - webhooks
    name: do-not-expose-admission-controller-webhook-services
    sources:
    - ghcr.io/kubewarden/policies/do-not-expose-admission-controller-webhook-services:v0.1.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/do-not-expose-admission-controller-webhook-services-0.1.0/do-not-expose-admission-controller-webhook-services-0.1.0.tgz
    version: 0.1.0
  echo:
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.10
    apiVersion: v1
    appVersion: 0.1.10
    created: "2025-08-13T14:27:21.108838122Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: c97eb63cee2c79cb3a99da7f2e1bb54d826b72204b87d67435b3986428395e31
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.10
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/echo-0.1.10/echo-0.1.10.tgz
    version: 0.1.10
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.9
    apiVersion: v1
    appVersion: 0.1.9
    created: "2025-07-14T17:34:59.931861847Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: 6f8859aae95e709dde6cbca25c17458bbc2cb334b6f781a0dc9c739def6c4fdb
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.9
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/echo-0.1.9/echo-0.1.9.tgz
    version: 0.1.9
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.8
    apiVersion: v1
    appVersion: 0.1.8
    created: "2025-06-13T18:36:57.320943073Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: 22e3687d6dfb600282e41ab4c52e0a3df693ac81d24c8a695365425488408ca9
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.8
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/echo-0.1.8/echo-0.1.8.tgz
    version: 0.1.8
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.6
    apiVersion: v1
    appVersion: 0.1.6
    created: "2025-04-16T10:29:51.769231134Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: 5df489784cd198348448bb181efcb9b0bf86c2e72485be14cbd1b68f97082d50
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.6
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/echo-0.1.6/echo-0.1.6.tgz
    version: 0.1.6
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-03-18T13:56:58.71645094Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: e450319aef336346fab2404ec3c4cd2de742bec40c33708a1b5394fa9e538d2c
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/echo-0.1.5/echo-0.1.5.tgz
    version: 0.1.5
  env-variable-secrets-scanner:
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-14T17:26:05.451398572Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: a2b605530275188699a6512031e4b9ccd19328b691d27ac5b5b1a13499c06022
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/env-variable-secrets-scanner-1.0.4/env-variable-secrets-scanner-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-06-13T18:56:20.585394522Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: d4f5705c13da5debf4092c97e87a9e3acb11171443aa70fa3e351d453abba034
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/env-variable-secrets-scanner-1.0.3/env-variable-secrets-scanner-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-04T12:10:45.957331702Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: 5416bde4cb346f62f94bb5cf93037dc2f3bd55141fe10b39770b492829d420af
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/env-variable-secrets-scanner-1.0.2/env-variable-secrets-scanner-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:51.94681855Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: ea701873dd69816cdfec157de6229d6e98c18f23c34e031499fa044fc3bb2318
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/env-variable-secrets-scanner-1.0.0/env-variable-secrets-scanner-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.8
    apiVersion: v1
    appVersion: 0.1.8
    created: "2025-03-18T13:56:58.921173173Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: b34eb891cf047b9624cb45633a810e0fa828ce40c78c247fa3b6b703fa0d1bf9
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v0.1.8
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/env-variable-secrets-scanner-0.1.8/env-variable-secrets-scanner-0.1.8.tgz
    version: 0.1.8
  environment-variable-policy:
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v3.0.1
    apiVersion: v1
    appVersion: 3.0.1
    created: "2025-08-12T09:18:15.095983833Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: b5e7dd8f166734651f044e7f883e206af87933b22e3ac6e3fd586e338c0ac877
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v3.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-3.0.1/environment-variable-policy-3.0.1.tgz
    version: 3.0.1
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v3.0.0
    apiVersion: v1
    appVersion: 3.0.0
    created: "2025-08-11T17:14:06.142927504Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: f3bfe8e0221d3e0e92c12d1f2f26c8c1fc4c1023d67175d63867ccc6c650491b
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v3.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-3.0.0/environment-variable-policy-3.0.0.tgz
    version: 3.0.0
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v2.1.0
    apiVersion: v1
    appVersion: 2.1.0
    created: "2025-08-01T09:41:12.10017606Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: d64a2b80f82655b13c914ff95f538905bfbb79e11ef1cdfdfc445efb17b9d7db
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v2.1.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-2.1.0/environment-variable-policy-2.1.0.tgz
    version: 2.1.0
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v2.0.3
    apiVersion: v1
    appVersion: 2.0.3
    created: "2025-07-31T13:10:24.133046233Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: 6c7ad1c6257e8f823c7a4c036d2ec1d2a0a3e39f8d08f8011a2e09fda695d21b
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v2.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-2.0.3/environment-variable-policy-2.0.3.tgz
    version: 2.0.3
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v2.0.2
    apiVersion: v1
    appVersion: 2.0.2
    created: "2025-07-14T17:27:20.967750074Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: e1d51993b6e25e29738dabd8ee37ad46239afa914868be7ce9a3a28517780847
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v2.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-2.0.2/environment-variable-policy-2.0.2.tgz
    version: 2.0.2
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v2.0.1
    apiVersion: v1
    appVersion: 2.0.1
    created: "2025-06-24T11:28:37.7890688Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: f5b564b5ec8df97e55416b904c8e0e038c2dc1502f8b88aaa37fbf3754a17d2b
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v2.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-2.0.1/environment-variable-policy-2.0.1.tgz
    version: 2.0.1
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v2.0.0
    apiVersion: v1
    appVersion: 2.0.0
    created: "2025-06-23T12:47:24.747000449Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: dda76cee3f3f7c7f6f2026e9d6a0d500c57e545b8f94f89ff1c4305e5cd977c2
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v2.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-2.0.0/environment-variable-policy-2.0.0.tgz
    version: 2.0.0
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:33.641543191Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: 047aea2df7e54fd1d66d4626b775aec1232ed8de58be4753effde88b875df661
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-1.0.0/environment-variable-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:56:59.149658695Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: 15485ebfe7784c4b2f462da33b3f6703a1546b5318433250cb20b8f9e31cfb3d
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/environment-variable-policy-0.1.7/environment-variable-policy-0.1.7.tgz
    version: 0.1.7
  flexvolume-drivers-psp:
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T13:57:59.332165399Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: d0bc1d9c25af051d0f9062804df8d8f23caf53f05bdbfb3ec457fcd1adc9c551
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/flexvolume-drivers-psp-1.0.4/flexvolume-drivers-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:29:59.791913458Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: 49eb717c5d1271fc463fc8581bbed9290ec1fbb2335139e5acaeaf2dee3ccc1b
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/flexvolume-drivers-psp-1.0.3/flexvolume-drivers-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:21:48.060673005Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: 0783d048536980f8d8b1ea602362a3da22c4fb02dcde601f846bfd3fcddb789d
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/flexvolume-drivers-psp-1.0.2/flexvolume-drivers-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:52.148026585Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: 80049dcd50852d1b1eabd69237b1b5815da1f50c06ac547b96e9b04e4a37f9d6
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/flexvolume-drivers-psp-1.0.0/flexvolume-drivers-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:56:59.358946429Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: 0a8ee06c77812f27dacf1c2b63dee3c4adb189741bf2a70b67f26403c0dd7db1
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/flexvolume-drivers-psp-0.1.7/flexvolume-drivers-psp-0.1.7.tgz
    version: 0.1.7
  gitrepository-ignore-suffixes:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-ignore-suffixes
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:10.448300971Z"
    description: GitRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit.
    digest: 7a6ef45ad972767792e7357b28f24325e127f1168b73f201066e4de548c78b18
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-ignore-suffixes:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-ignore-suffixes-1.0.3/gitrepository-ignore-suffixes-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-ignore-suffixes
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:53:16.601003143Z"
    description: GitRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit.
    digest: 47902faaf93a67cd8e5ddfb1ad614e1936177b4f108e14fd55ec901fec2063d7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-ignore-suffixes:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-ignore-suffixes-1.0.2/gitrepository-ignore-suffixes-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-ignore-suffixes
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:44.383273002Z"
    description: GitRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit.
    digest: e0716ed954aa2fa16bde614566089c3ac2d5407b47208db10e31e6fb686430f1
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-ignore-suffixes:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-ignore-suffixes-1.0.1/gitrepository-ignore-suffixes-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-ignore-suffixes
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:51.963110996Z"
    description: GitRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit.
    digest: 2eb267bff67388a8781e4d5ef6487f93a99bfdbe5e7ea636beb1797c3a312e2d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-ignore-suffixes:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-ignore-suffixes-1.0.0/gitrepository-ignore-suffixes-1.0.0.tgz
    version: 1.0.0
  gitrepository-organization-domains:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-organization-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:10.621867613Z"
    description: GitRepository resources must only be from allowed organization domains.
    digest: 6cf7de97670074576925c9543608b4680522e127bb6e25243c5cbf78bc9e158d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-organization-domains:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-organization-domains-1.0.3/gitrepository-organization-domains-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-organization-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:52:11.774919089Z"
    description: GitRepository resources must only be from allowed organization domains.
    digest: ec68eb8d5dc617ede207dcbce0b6175b5f8518b709e1ff5c6400792bc454d9ba
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-organization-domains:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-organization-domains-1.0.2/gitrepository-organization-domains-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-organization-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:44.501182371Z"
    description: GitRepository resources must only be from allowed organization domains.
    digest: 1e5555657765ba0149c1d0cf3c11ed8ea48ff311512397c068f52e4a192ea681
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-organization-domains:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-organization-domains-1.0.1/gitrepository-organization-domains-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-organization-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:52.067747431Z"
    description: GitRepository resources must only be from allowed organization domains.
    digest: e36d8fe26a2489b25cec991bc3d512b7b9dfd7071d09b0fec3da7bc9c89c6d3a
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-organization-domains:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-organization-domains-1.0.0/gitrepository-organization-domains-1.0.0.tgz
    version: 1.0.0
  gitrepository-specific-branch:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Specific Branch
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-specific-branch
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:54.407940675Z"
    description: GitRepository resources must reference a specific branch, e.g. 'main'.
    digest: d64bfc7e6249fdbb0647dc816b6d50db07ba36434beffcf874bdda77980526b2
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-specific-branch
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-specific-branch:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-specific-branch-1.0.3/gitrepository-specific-branch-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Specific Branch
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-specific-branch
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:51:08.453338032Z"
    description: GitRepository resources must reference a specific branch, e.g. 'main'.
    digest: 0f41d4bd79b81d2b93f3c6b1dfd6ba5118f6bbd1dcabe7de950c92cfc5228dba
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-specific-branch
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-specific-branch:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-specific-branch-1.0.2/gitrepository-specific-branch-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Specific Branch
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-specific-branch
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:49.751300979Z"
    description: GitRepository resources must reference a specific branch, e.g. 'main'.
    digest: 7519ea77b6ef27bc79c6198b2bc631d3aff057abc5e9e4aae9a51ef1b5f6ee30
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-specific-branch
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-specific-branch:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-specific-branch-1.0.1/gitrepository-specific-branch-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Specific Branch
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-specific-branch
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:52.198555025Z"
    description: GitRepository resources must reference a specific branch, e.g. 'main'.
    digest: d633ee8e5399d9f5fadb8eaa893d902ee9f95c8982e11b9b29f59a0c44dbc871
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-specific-branch
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-specific-branch:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-specific-branch-1.0.0/gitrepository-specific-branch-1.0.0.tgz
    version: 1.0.0
  gitrepository-untrusted-domains:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Untrusted Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-untrusted-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:54.658817123Z"
    description: GitRepository resources must not use targets from untrusted domains.
    digest: 96adcae7ce8b0e5c06a174aa690f7e8aded3c9fec1326139f8b0fd86406f0cd4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-untrusted-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-untrusted-domains:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-untrusted-domains-1.0.3/gitrepository-untrusted-domains-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Untrusted Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-untrusted-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:50:02.413164455Z"
    description: GitRepository resources must not use targets from untrusted domains.
    digest: f62fc790d498a602b9f73badc401d12f9fc3689de6d5878be564ff46686cfc49
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-untrusted-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-untrusted-domains:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-untrusted-domains-1.0.2/gitrepository-untrusted-domains-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Untrusted Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-untrusted-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:49.885490932Z"
    description: GitRepository resources must not use targets from untrusted domains.
    digest: 24184c4bde6c02e41ed0510fb56bd1abedf6c0c089c2b74b5588b4b300e96297
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-untrusted-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-untrusted-domains:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-untrusted-domains-1.0.1/gitrepository-untrusted-domains-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Untrusted Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-untrusted-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:52.331992238Z"
    description: GitRepository resources must not use targets from untrusted domains.
    digest: 8f1019b7d3b20a7e1edef66e51cf9ba89f00fefb0874fff6740cc277b9b172c7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-untrusted-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-untrusted-domains:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/gitrepository-untrusted-domains-1.0.0/gitrepository-untrusted-domains-1.0.0.tgz
    version: 1.0.0
  helm-chart-cosign-verification:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-cosign-verification
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:54.855061372Z"
    description: HelmChart objects must provide cosign verification and reference
      a secret containing the Cosign public keys of trusted authors
    digest: c85a37be77b34fbfaa86b795a741187c5a635b8ce422c4def344a3622dc6133d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-cosign-verification:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-cosign-verification-1.0.3/helm-chart-cosign-verification-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-cosign-verification
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:48:57.326319012Z"
    description: HelmChart objects must provide cosign verification and reference
      a secret containing the Cosign public keys of trusted authors
    digest: 517762e776008ddb4582db82a6da8e1135ba02dd75aa078722712ccd7ca00840
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-cosign-verification:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-cosign-verification-1.0.2/helm-chart-cosign-verification-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-cosign-verification
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:26.592750035Z"
    description: HelmChart objects must provide cosign verification and reference
      a secret containing the Cosign public keys of trusted authors
    digest: 0071688f188ff2c3c37e338d397a847ca831c1b55343f301a8b2507a04a3c852
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-cosign-verification:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-cosign-verification-1.0.1/helm-chart-cosign-verification-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-cosign-verification
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:15:39.548268123Z"
    description: HelmChart objects must provide cosign verification and reference
      a secret containing the Cosign public keys of trusted authors
    digest: f308ef3d88b072d537a48249cb3b218de121eb81d47c1afd75ad3d3d8f3cda03
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-cosign-verification:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-cosign-verification-1.0.0/helm-chart-cosign-verification-1.0.0.tgz
    version: 1.0.0
  helm-chart-values-files-format:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Values File Format
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-values-files-format
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:37.236187023Z"
    description: 'HelmChart must reference values files in the following format: ''xxx=values.yaml''.'
    digest: fda1554cb2dbdb7e6d28114fd1ee8c8d26356310537810a24448b63c277fbb56
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-values-files-format
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-values-files-format:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-values-files-format-1.0.3/helm-chart-values-files-format-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Values File Format
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-values-files-format
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:47:53.798351086Z"
    description: 'HelmChart must reference values files in the following format: ''xxx=values.yaml''.'
    digest: 29127337696deaa28857796e28fdb4173e9ef772d5a85b498a9f3dfd8175d3b0
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-values-files-format
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-values-files-format:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-values-files-format-1.0.2/helm-chart-values-files-format-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Values File Format
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-values-files-format
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:44.607395183Z"
    description: 'HelmChart must reference values files in the following format: ''xxx=values.yaml''.'
    digest: 3ba5a5efb1d5c44ac44a990d3faecd38e382ccbf76dcf1e01df34770a3e5f16f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-values-files-format
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-values-files-format:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-values-files-format-1.0.1/helm-chart-values-files-format-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Values File Format
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-values-files-format
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:52.466064808Z"
    description: 'HelmChart must reference values files in the following format: ''xxx=values.yaml''.'
    digest: ac5662aece44c575442fedb7c3bb56de2425a6f4fc715995c9ac86151cfbb9bb
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-values-files-format
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-values-files-format:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-chart-values-files-format-1.0.0/helm-chart-values-files-format-1.0.0.tgz
    version: 1.0.0
  helm-release-max-history:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Max History
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-max-history
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-03T13:38:31.577866897Z"
    description: HelmRelease maxHistory cannot exceed the specified value.
    digest: 4d005321dca81b48acb1cdc3f9bcca8681519fc25bd9560faf3789fcdc03eaa6
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-max-history
    sources:
    - ghcr.io/kubewarden/policies/helm-release-max-history:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-max-history-1.0.4/helm-release-max-history-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Max History
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-max-history
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:37.388057666Z"
    description: HelmRelease maxHistory cannot exceed the specified value.
    digest: b5591cd8b1dde53a358723202183f664242e2c3409f83c3617bbac6e272351e1
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-max-history
    sources:
    - ghcr.io/kubewarden/policies/helm-release-max-history:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-max-history-1.0.3/helm-release-max-history-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Max History
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-max-history
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:46:50.880777544Z"
    description: HelmRelease maxHistory cannot exceed the specified value.
    digest: 847eb45b275d54a39de59b9e1a810de4e4a69541bdb617d7dabfc137e3638c12
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-max-history
    sources:
    - ghcr.io/kubewarden/policies/helm-release-max-history:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-max-history-1.0.2/helm-release-max-history-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Max History
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-max-history
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:26.689010407Z"
    description: HelmRelease maxHistory cannot exceed the specified value.
    digest: 38c34a896d655504791496698e67935363707e84d9667d7061190d1eaf8bdd89
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-max-history
    sources:
    - ghcr.io/kubewarden/policies/helm-release-max-history:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-max-history-1.0.1/helm-release-max-history-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Max History
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-max-history
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:29.76651441Z"
    description: HelmRelease maxHistory cannot exceed the specified value.
    digest: 49d4b207de652daeddc9f6ac4a2301aea0d833802683b0661585647a28922fad
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-max-history
    sources:
    - ghcr.io/kubewarden/policies/helm-release-max-history:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-max-history-1.0.0/helm-release-max-history-1.0.0.tgz
    version: 1.0.0
  helm-release-namespace-match:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Namespace Match
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-namespace-match
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:37.492089964Z"
    description: HelmRelease storageNamespace and targetNamespace must match.
    digest: 0123c6f9b56ad60dc58e78c3ae670ca96ee284facc8f0b71781d45a525762d45
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-namespace-match
    sources:
    - ghcr.io/kubewarden/policies/helm-release-namespace-match:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-namespace-match-1.0.3/helm-release-namespace-match-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Namespace Match
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-namespace-match
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:45:46.074453459Z"
    description: HelmRelease storageNamespace and targetNamespace must match.
    digest: 20c9790bccbc50af5e028e34e990d61eb78e989d917d39b0ce6c7ae562e118ef
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-namespace-match
    sources:
    - ghcr.io/kubewarden/policies/helm-release-namespace-match:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-namespace-match-1.0.2/helm-release-namespace-match-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Namespace Match
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-namespace-match
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:49.987918251Z"
    description: HelmRelease storageNamespace and targetNamespace must match.
    digest: bfe2d8bb8a9744d8077faaef39907e90fb0e2a23cca6b91b400f0f5855f985fb
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-namespace-match
    sources:
    - ghcr.io/kubewarden/policies/helm-release-namespace-match:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-namespace-match-1.0.1/helm-release-namespace-match-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Namespace Match
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-namespace-match
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:52.589991727Z"
    description: HelmRelease storageNamespace and targetNamespace must match.
    digest: 99d89f0708c6a9a9041fa1acb6848bdfed12964c09139666f1b62957c56fea84
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-namespace-match
    sources:
    - ghcr.io/kubewarden/policies/helm-release-namespace-match:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-namespace-match-1.0.0/helm-release-namespace-match-1.0.0.tgz
    version: 1.0.0
  helm-release-post-renderer:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Post Renderer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-post-renderer
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:37.618093107Z"
    description: HelmRelease must not have post-renderers enabled.
    digest: ade27eaf273a0acc5be5ddcc338a94d3430a27c17f537b3d01055a21342d1dd5
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-post-renderer
    sources:
    - ghcr.io/kubewarden/policies/helm-release-post-renderer:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-post-renderer-1.0.3/helm-release-post-renderer-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Post Renderer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-post-renderer
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:44:41.051703863Z"
    description: HelmRelease must not have post-renderers enabled.
    digest: e3fd637f7687093f3954298e01633da9a7c956e3b25faa39986fc49644a51918
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-post-renderer
    sources:
    - ghcr.io/kubewarden/policies/helm-release-post-renderer:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-post-renderer-1.0.2/helm-release-post-renderer-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Post Renderer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-post-renderer
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:07.478053999Z"
    description: HelmRelease must not have post-renderers enabled.
    digest: 82679b11f20db61318ddcfc97cda925c28118359c618d59e52e6c7b899cbf2eb
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-post-renderer
    sources:
    - ghcr.io/kubewarden/policies/helm-release-post-renderer:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-post-renderer-1.0.1/helm-release-post-renderer-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Post Renderer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-post-renderer
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:52.722550637Z"
    description: HelmRelease must not have post-renderers enabled.
    digest: 98283adf0eb4185422ff48f648ee8a06ddfe3451fd9dd37793b0b04ddfbcffbd
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-post-renderer
    sources:
    - ghcr.io/kubewarden/policies/helm-release-post-renderer:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-post-renderer-1.0.0/helm-release-post-renderer-1.0.0.tgz
    version: 1.0.0
  helm-release-remediation-retries:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Remediation Retries
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-remediation-retries
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-03T13:38:21.158989769Z"
    description: HelmRelease remediation retries must be within the specified lower
      and upper bounds.
    digest: 61f7c4b798cedcca89611cbd430329c4eeb88424cec6fe44ef7b839cb6be07fb
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-remediation-retries
    sources:
    - ghcr.io/kubewarden/policies/helm-release-remediation-retries:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-remediation-retries-1.0.4/helm-release-remediation-retries-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Remediation Retries
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-remediation-retries
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:37.74256507Z"
    description: HelmRelease remediation retries must be within the specified lower
      and upper bounds.
    digest: 6bbc1ff3bad8815684151efef1a8411d0eccde4a32a4c198284203f00d5de55b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-remediation-retries
    sources:
    - ghcr.io/kubewarden/policies/helm-release-remediation-retries:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-remediation-retries-1.0.3/helm-release-remediation-retries-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Remediation Retries
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-remediation-retries
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:43:36.637331932Z"
    description: HelmRelease remediation retries must be within the specified lower
      and upper bounds.
    digest: 37979462c69ebda50a8634ddbcaa6f2c589a1d9e68cd6660856b9fd8fba4a71d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-remediation-retries
    sources:
    - ghcr.io/kubewarden/policies/helm-release-remediation-retries:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-remediation-retries-1.0.2/helm-release-remediation-retries-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Remediation Retries
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-remediation-retries
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:28.078682029Z"
    description: HelmRelease remediation retries must be within the specified lower
      and upper bounds.
    digest: 0eea79a9172808d36abc5d8c6e436af4f83f12997ee14c5d638c3471fe641639
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-remediation-retries
    sources:
    - ghcr.io/kubewarden/policies/helm-release-remediation-retries:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-remediation-retries-1.0.1/helm-release-remediation-retries-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Remediation Retries
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-remediation-retries
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:52.885044731Z"
    description: HelmRelease remediation retries must be within the specified lower
      and upper bounds.
    digest: 534280917d6a65bd930cb7f08966667af5b9baaeee0a247dc456ab27ac0d0d42
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-remediation-retries
    sources:
    - ghcr.io/kubewarden/policies/helm-release-remediation-retries:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-remediation-retries-1.0.0/helm-release-remediation-retries-1.0.0.tgz
    version: 1.0.0
  helm-release-rollback:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Rollback Should Be Disabled
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-rollback
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:21.540291976Z"
    description: The rollback feature of a HelmRelease should be disabled.
    digest: f49d8f06f2120d7ab89340091508b7734aedade8bcc34ef4feb2bd6b28e2e292
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-rollback
    sources:
    - ghcr.io/kubewarden/policies/helm-release-rollback:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-rollback-1.0.3/helm-release-rollback-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Rollback Should Be Disabled
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-rollback
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:42:31.07935024Z"
    description: The rollback feature of a HelmRelease should be disabled.
    digest: 0a7b0d43eb87a443e9a62084eb25a26012ea00e6110e149a9dc563339361b3f6
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-rollback
    sources:
    - ghcr.io/kubewarden/policies/helm-release-rollback:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-rollback-1.0.2/helm-release-rollback-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Rollback Should Be Disabled
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-rollback
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:07.592049488Z"
    description: The rollback feature of a HelmRelease should be disabled.
    digest: 318c364d3f55f43a75adb9d8c451b9697d12788976ed6db51c1d708fce7ff305
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-rollback
    sources:
    - ghcr.io/kubewarden/policies/helm-release-rollback:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-rollback-1.0.1/helm-release-rollback-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Rollback Should Be Disabled
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-rollback
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:07.786171002Z"
    description: The rollback feature of a HelmRelease should be disabled.
    digest: 6d62aaf0f5d28213a8ca7d48fb23711602622a531cbd4745840d77d190e6d3f2
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-rollback
    sources:
    - ghcr.io/kubewarden/policies/helm-release-rollback:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-rollback-1.0.0/helm-release-rollback-1.0.0.tgz
    version: 1.0.0
  helm-release-service-account-name:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Service Account Name
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-service-account-name
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:21.736082656Z"
    description: HelmRelease serviceAccountName must contain a value from parameters.service_account_names
    digest: 1369fa280f88aabb7e509399a35f68310fa57494299a592b9cd9739b4b2d8e1d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-service-account-name
    sources:
    - ghcr.io/kubewarden/policies/helm-release-service-account-name:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-service-account-name-1.0.3/helm-release-service-account-name-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Service Account Name
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-service-account-name
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:41:30.840617082Z"
    description: HelmRelease serviceAccountName must contain a value from parameters.service_account_names
    digest: a93fe487a617da74ebd837c273372eaf93d630b60971b3640282dccad23542a9
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-service-account-name
    sources:
    - ghcr.io/kubewarden/policies/helm-release-service-account-name:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-service-account-name-1.0.2/helm-release-service-account-name-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Service Account Name
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-service-account-name
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:49.257057666Z"
    description: HelmRelease serviceAccountName must contain a value from parameters.service_account_names
    digest: 4f98c4cf4122116c9d692cbfc94711e81bb403918398d639a831f2771e2084bc
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-service-account-name
    sources:
    - ghcr.io/kubewarden/policies/helm-release-service-account-name:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-service-account-name-1.0.1/helm-release-service-account-name-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Service Account Name
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-service-account-name
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:29.971811763Z"
    description: HelmRelease serviceAccountName must contain a value from parameters.service_account_names
    digest: b267e17e68fcd57a0005da70037624361801fcea6ed513d7004f816d1b05221a
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-service-account-name
    sources:
    - ghcr.io/kubewarden/policies/helm-release-service-account-name:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-service-account-name-1.0.0/helm-release-service-account-name-1.0.0.tgz
    version: 1.0.0
  helm-release-storage-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Storage Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-storage-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:21.934342968Z"
    description: HelmRelease storageNamespace must contain a value from storage_namespaces.
    digest: ad4678db88f590215a76f9c60a08e78be77023a11b4c5c42821426eebf2c7318
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-storage-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-storage-namespace:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-storage-namespace-1.0.3/helm-release-storage-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Storage Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-storage-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:40:23.885671521Z"
    description: HelmRelease storageNamespace must contain a value from storage_namespaces.
    digest: 81ac4022dbd24b3c6ec751f3f5cfacce5f989533c5c8d04bf18e987849ba64b6
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-storage-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-storage-namespace:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-storage-namespace-1.0.2/helm-release-storage-namespace-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Storage Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-storage-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:26.801334764Z"
    description: HelmRelease storageNamespace must contain a value from storage_namespaces.
    digest: a777d412765f8ac493fdb1ddb766b57bbeb0dc3c86eb59dd311a8f4bf62fce65
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-storage-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-storage-namespace:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-storage-namespace-1.0.1/helm-release-storage-namespace-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Storage Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-storage-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:57.587093826Z"
    description: HelmRelease storageNamespace must contain a value from storage_namespaces.
    digest: aa56e3d087ae445eff0747475cd277cdb6a97c7919877e2c034b644412f37388
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-storage-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-storage-namespace:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-storage-namespace-1.0.0/helm-release-storage-namespace-1.0.0.tgz
    version: 1.0.0
  helm-release-target-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-target-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:22.148713602Z"
    description: HelmRelease targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 6c597ca4387e645e7357dc03bde0b525389a3c86f8bab073b7dd5a751dd7f174
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-target-namespace:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-target-namespace-1.0.3/helm-release-target-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-target-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:39:20.153873787Z"
    description: HelmRelease targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 5e37e8b4d99203aca30e4a147e42d615f5e4278ebb233de1f3f8b21787448330
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-target-namespace:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-target-namespace-1.0.2/helm-release-target-namespace-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-target-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:07.708455328Z"
    description: HelmRelease targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 8c914b6d6811c15e850e602c5b0bc7e645bc1234d5cb1b86b60b31a3b055624b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-target-namespace:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-target-namespace-1.0.1/helm-release-target-namespace-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-target-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:30.153451148Z"
    description: HelmRelease targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 4c5fd3adfc42e7478d18674863436e41ed3cef586b3237cd3851b223a828f6dd
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-target-namespace:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-target-namespace-1.0.0/helm-release-target-namespace-1.0.0.tgz
    version: 1.0.0
  helm-release-values-from-configmaps:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Values From
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-values-from-configmaps
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:04.003662195Z"
    description: HelmRelease valuesFrom must use correctly configured ConfigMaps.
    digest: 5dac4ca31a997255fda84b96fc7f5b39a1c11aa6b34ffead59171c25f67c1b86
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-values-from-configmaps
    sources:
    - ghcr.io/kubewarden/policies/helm-release-values-from-configmaps:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-values-from-configmaps-1.0.3/helm-release-values-from-configmaps-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Values From
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-values-from-configmaps
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:17:59.97469985Z"
    description: HelmRelease valuesFrom must use correctly configured ConfigMaps.
    digest: 1ed84c4f084bfdec5cd09689c12d4c42d7453d0fed3a6d2d93f7744756a3878b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-values-from-configmaps
    sources:
    - ghcr.io/kubewarden/policies/helm-release-values-from-configmaps:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-values-from-configmaps-1.0.2/helm-release-values-from-configmaps-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Values From
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-values-from-configmaps
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:26.939044645Z"
    description: HelmRelease valuesFrom must use correctly configured ConfigMaps.
    digest: ff0da75cf56d7e5336680ed58728718aed8d858707a34d5e40f2c51733a92a73
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-values-from-configmaps
    sources:
    - ghcr.io/kubewarden/policies/helm-release-values-from-configmaps:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-values-from-configmaps-1.0.1/helm-release-values-from-configmaps-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Values From
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-values-from-configmaps
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:30.426450248Z"
    description: HelmRelease valuesFrom must use correctly configured ConfigMaps.
    digest: 84ef75336b54fe73d1bf9fad174dbc434ff53c4e3a9fb3f38bc3a90c43012b52
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-values-from-configmaps
    sources:
    - ghcr.io/kubewarden/policies/helm-release-values-from-configmaps:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-release-values-from-configmaps-1.0.0/helm-release-values-from-configmaps-1.0.0.tgz
    version: 1.0.0
  helm-repo-type:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo Type Should Be OCI
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-type
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:04.235621544Z"
    description: The type of a Helm repository should be OCI.
    digest: a2afa0456d7db709d1ce4b5f535c4a67e11ef77a8f0ec6e201976762e220f3a8
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-type
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-type:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-repo-type-1.0.3/helm-repo-type-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo Type Should Be OCI
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-type
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:29:53.626949311Z"
    description: The type of a Helm repository should be OCI.
    digest: a99bb7a33c85c3dbc43daf290b4501d45a96e579610991679e177da7bea39775
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-type
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-type:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-repo-type-1.0.2/helm-repo-type-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo Type Should Be OCI
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-type
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:29.29347071Z"
    description: The type of a Helm repository should be OCI.
    digest: 30befe968b5dbac889045b9d5b4e8461bd3c63a7112319d45bbe400802bf50e3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-type
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-type:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-repo-type-1.0.1/helm-repo-type-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo Type Should Be OCI
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-type
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:07.944121082Z"
    description: The type of a Helm repository should be OCI.
    digest: c913f2cdb36126bfc0d0f487743cd7c31f42ea2b4cf28c93be1adf62ffdf5432
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-type
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-type:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-repo-type-1.0.0/helm-repo-type-1.0.0.tgz
    version: 1.0.0
  helm-repo-url:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo URL Should Be in Organisation Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-url
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:31:04.44318518Z"
    description: The URL of a Helm repository should only be from the specified organisation
      domain.
    digest: 3c32c022bbbd3f511a0a7a57de51020b8b87f61551b877b1c4745c1da7b7de06
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-url
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-url:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-repo-url-1.0.3/helm-repo-url-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo URL Should Be in Organisation Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-url
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:16:59.91826618Z"
    description: The URL of a Helm repository should only be from the specified organisation
      domain.
    digest: 5204445c8b389bd52605e400f111e1fbbf75aa6cfa0be7ffafdb9e203372746d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-url
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-url:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-repo-url-1.0.2/helm-repo-url-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo URL Should Be in Organisation Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-url
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:09.230408763Z"
    description: The URL of a Helm repository should only be from the specified organisation
      domain.
    digest: b5d4a1e4c8b482f8f04a980e2f73bc47a7a9b759bbcb8dba9cd1d62947f2bca0
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-url
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-url:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-repo-url-1.0.1/helm-repo-url-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo URL Should Be in Organisation Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-url
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:08.082817311Z"
    description: The URL of a Helm repository should only be from the specified organisation
      domain.
    digest: 0015d7884bb28356fe8fbcbeea2f6235ffd9ccda5aedf60e4d2b85b5ac9cca59
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-url
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-url:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/helm-repo-url-1.0.0/helm-repo-url-1.0.0.tgz
    version: 1.0.0
  high-risk-service-account:
  - annotations:
      artifacthub.io/repository: high-risk-service-account
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: High Risk Service Account
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/high-risk-service-account
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.2
    apiVersion: v1
    appVersion: 0.1.2
    created: "2025-07-28T09:49:32.163268012Z"
    description: Policy to prevent the usage of serviceaccount with too many permissions
    digest: f629dd3e8bd082d5cb8a5cff7109019d394d19c76ab4ea4fb17c3ee0a3e8e3c3
    home: https://github.com/kubewarden/high-risk-service-account-policy
    keywords:
    - pod
    - security
    - serviceaccount
    name: high-risk-service-account
    sources:
    - ghcr.io/kubewarden/policies/high-risk-service-account:v0.1.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/high-risk-service-account-0.1.2/high-risk-service-account-0.1.2.tgz
    version: 0.1.2
  - annotations:
      artifacthub.io/repository: high-risk-service-account
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: High Risk Service Account
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/high-risk-service-account
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-07-24T09:21:08.786831445Z"
    description: Policy to prevent the usage of serviceaccount with too many permissions
    digest: 982c69f0f5df2b07ddea28acb972a3ba3095142455e91b84f26bdd2cc79e6712
    home: https://github.com/kubewarden/high-risk-service-account-policy
    keywords:
    - pod
    - security
    - serviceaccount
    name: high-risk-service-account
    sources:
    - ghcr.io/kubewarden/policies/high-risk-service-account:v0.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/high-risk-service-account-0.1.1/high-risk-service-account-0.1.1.tgz
    version: 0.1.1
  host-namespaces-psp:
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.1.1
    apiVersion: v1
    appVersion: 1.1.1
    created: "2025-08-13T13:59:06.157873286Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 4ee516b9099e82ca693a5739e1a1361e35050b302023a383e7ad1641636ee99e
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v1.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/host-namespaces-psp-1.1.1/host-namespaces-psp-1.1.1.tgz
    version: 1.1.1
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.1.0
    apiVersion: v1
    appVersion: 1.1.0
    created: "2025-08-05T07:27:13.188314595Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 51e1c02e2c38f8aefca2a84c3afc7acade08a255f818106bed235295c2f2a94b
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v1.1.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/host-namespaces-psp-1.1.0/host-namespaces-psp-1.1.0.tgz
    version: 1.1.0
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T09:44:38.280003155Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 896a074e9ec5594efb40cd76ad711c8c923a1229e0dcf8560d9041e468a1bb1f
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/host-namespaces-psp-1.0.3/host-namespaces-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:21:32.790248947Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 397514a3616a34cab12bf3ced299c3c0338808a0502ccc9eee848a9989c40a97
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/host-namespaces-psp-1.0.2/host-namespaces-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:16.761576615Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 7c4fe5ae4f2df6111aceb3b6684f0b02fa519a266e85cf24eed321850e3abdb8
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/host-namespaces-psp-1.0.0/host-namespaces-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:56:59.547731929Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 293dd977de540dcb50800adafe5bd1948bb3f8acc5615517a6ffd66ec275c16e
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/host-namespaces-psp-0.1.7/host-namespaces-psp-0.1.7.tgz
    version: 0.1.7
  hostpaths-psp:
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:26:25.389271119Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: e198e2e7b7c5e753331e41312158fed734775dd64c3157d49461ee6ead563314
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/hostpaths-psp-1.0.4/hostpaths-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:17:12.749150335Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: 329cbceb6281df92d04f5f5d27a63db0c1eab7df8eb4c83f40879eabfd92bda7
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/hostpaths-psp-1.0.3/hostpaths-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:31:22.794976824Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: b03b7dd3a4a3bb36c4ae8d180d24eea9bc80d76826f1b89e21706abe51cb1c32
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/hostpaths-psp-1.0.2/hostpaths-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:16.866881774Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: fd4c902e1f350f543ce9626412c7f0e5b491c3735d00b6f246f29ad76be16d42
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/hostpaths-psp-1.0.0/hostpaths-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-03-18T13:56:59.751640516Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: deea79a812f303ed8032f41c4049b1a668d9f39d1c3437e0c29e1c367652d470
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v0.1.11
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/hostpaths-psp-0.1.11/hostpaths-psp-0.1.11.tgz
    version: 0.1.11
  ingress-policy:
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:25:36.389618601Z"
    description: Enforce requirements on Ingress resources
    digest: d4b5e3816a44dd34e3f42801f88dbb08bb48e7bc5d23cf5ecd6b3b652dfce414
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-policy-1.0.4/ingress-policy-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:26:33.654692287Z"
    description: Enforce requirements on Ingress resources
    digest: 5860e7ce19c41f6ba2dea674901704e4d3becad69da3506818f60149298ac630
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-policy-1.0.3/ingress-policy-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:20:20.21537255Z"
    description: Enforce requirements on Ingress resources
    digest: 3772fac505e86ba971763bb33fa36e660c28605b9a54fce5a2ca0ddb4e1e00d9
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-policy-1.0.2/ingress-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:16.971427213Z"
    description: Enforce requirements on Ingress resources
    digest: c94261f0711c885fce39fc7e5718df7afbbf58477ba30ed0a7afb48a71ca028c
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-policy-1.0.0/ingress-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.17
    apiVersion: v1
    appVersion: 0.1.17
    created: "2025-04-09T15:59:59.85291309Z"
    description: Enforce requirements on Ingress resources
    digest: bacdd6ea915cbec5e3b643d85b8c1ed0f426217cb901bc9f8fc5a169e49a1e99
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v0.1.17
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-policy-0.1.17/ingress-policy-0.1.17.tgz
    version: 0.1.17
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.16
    apiVersion: v1
    appVersion: 0.1.16
    created: "2025-03-18T13:56:59.924069719Z"
    description: Enforce requirements on Ingress resources
    digest: 45e248c88cabd4033fa2dbdf74f4ee3c8aee0303f817b95ca6b070aa2a707c1c
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v0.1.16
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-policy-0.1.16/ingress-policy-0.1.16.tgz
    version: 0.1.16
  ingress-unique-host:
  - annotations:
      artifacthub.io/repository: unique-ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Unique Ingress host
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-ingress-policy
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.5
    apiVersion: v1
    appVersion: 1.0.5
    created: "2025-08-13T14:22:00.852736433Z"
    description: Requires all Ingress rule hosts to be unique
    digest: 506024ca05b52dc1afbed94713c39c20e10153478c97f62b5442f03dcf48e028
    home: https://github.com/kubewarden/unique-ingress-policy
    keywords:
    - ingress
    - kubewarden
    name: ingress-unique-host
    sources:
    - ghcr.io/kubewarden/policies/unique-ingress-policy:v1.0.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-unique-host-1.0.5/ingress-unique-host-1.0.5.tgz
    version: 1.0.5
  - annotations:
      artifacthub.io/repository: unique-ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Unique Ingress host
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-ingress-policy
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-14T17:28:15.537850857Z"
    description: Requires all Ingress rule hosts to be unique
    digest: 9eb1c443d6f119d9ba32e0ca35155aa6c228089024c14d25f14983d1fb690ffd
    home: https://github.com/kubewarden/unique-ingress-policy
    keywords:
    - ingress
    - kubewarden
    name: ingress-unique-host
    sources:
    - ghcr.io/kubewarden/policies/unique-ingress-policy:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-unique-host-1.0.4/ingress-unique-host-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: unique-ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Unique Ingress host
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-ingress-policy
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-06-13T18:26:12.197844978Z"
    description: Requires all Ingress rule hosts to be unique
    digest: 304910699f41b367b4d3a669f555b3e97fa64d3eca0c4d989b3731470e72894a
    home: https://github.com/kubewarden/unique-ingress-policy
    keywords:
    - ingress
    - kubewarden
    name: ingress-unique-host
    sources:
    - ghcr.io/kubewarden/policies/unique-ingress-policy:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-unique-host-1.0.3/ingress-unique-host-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: unique-ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Unique Ingress host
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-ingress-policy
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-05-20T12:10:04.89142522Z"
    description: Requires all Ingress rule hosts to be unique
    digest: 0bb9da9feade82eb8f3897be24d43509a1071bf7d7fba1dc922fec2f2c3b6a76
    home: https://github.com/kubewarden/unique-ingress-policy
    keywords:
    - ingress
    - kubewarden
    name: ingress-unique-host
    sources:
    - ghcr.io/kubewarden/policies/unique-ingress-policy:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-unique-host-1.0.2/ingress-unique-host-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: unique-ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Unique Ingress host
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-ingress-policy
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-03-18T13:57:00.110099874Z"
    description: Requires all Ingress rule hosts to be unique
    digest: 56f83337127965427a36a03ccb593b7415aee3faf9aff61215d73d579c9160d7
    home: https://github.com/kubewarden/unique-ingress-policy
    keywords:
    - ingress
    - kubewarden
    name: ingress-unique-host
    sources:
    - ghcr.io/kubewarden/policies/unique-ingress-policy:v0.1.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ingress-unique-host-0.1.5/ingress-unique-host-0.1.5.tgz
    version: 0.1.5
  istio-gateway-approved-hosts:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Gateway Approved Hosts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-gateway-approved-hosts
      kubewarden/resources: Gateway
      kubewarden/rules: |
        - apiGroups:
          - networking.istio.io
          apiVersions:
          - v1
          resources:
          - gateways
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:40.006143855Z"
    description: '### Istio Gateway Approved Hosts This ensures you are only serving
      traffic for approved hostnames.  '
    digest: 3b30baa75763a4537eb17298c1fbdea899cf7d0ca05954b95271fba00735b829
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-gateway-approved-hosts
    sources:
    - ghcr.io/kubewarden/policies/istio-gateway-approved-hosts:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-gateway-approved-hosts-1.0.3/istio-gateway-approved-hosts-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Gateway Approved Hosts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-gateway-approved-hosts
      kubewarden/resources: Gateway
      kubewarden/rules: |
        - apiGroups:
          - networking.istio.io
          apiVersions:
          - v1
          resources:
          - gateways
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:58:42.393870602Z"
    description: '### Istio Gateway Approved Hosts This ensures you are only serving
      traffic for approved hostnames.  '
    digest: 6a5e8bd4b6660cf048589ed7c0b085b4b45fb719dce2aaae01052df0271f3302
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-gateway-approved-hosts
    sources:
    - ghcr.io/kubewarden/policies/istio-gateway-approved-hosts:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-gateway-approved-hosts-1.0.2/istio-gateway-approved-hosts-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Gateway Approved Hosts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-gateway-approved-hosts
      kubewarden/resources: Gateway
      kubewarden/rules: |
        - apiGroups:
          - networking.istio.io
          apiVersions:
          - v1
          resources:
          - gateways
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:28.215702303Z"
    description: '### Istio Gateway Approved Hosts This ensures you are only serving
      traffic for approved hostnames.  '
    digest: a15c44d5fc793079b1c11632e2605dc22a9c434933e674b3c635f80c0ec81a7a
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-gateway-approved-hosts
    sources:
    - ghcr.io/kubewarden/policies/istio-gateway-approved-hosts:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-gateway-approved-hosts-1.0.1/istio-gateway-approved-hosts-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Gateway Approved Hosts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-gateway-approved-hosts
      kubewarden/resources: Gateway
      kubewarden/rules: |
        - apiGroups:
          - networking.istio.io
          apiVersions:
          - v1
          resources:
          - gateways
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.265597125Z"
    description: '### Istio Gateway Approved Hosts This ensures you are only serving
      traffic for approved hostnames.  '
    digest: fc18d3a5f5638b33e30d60c5e9f737e833c7c302a1ae852ad95ca96aab2a6d7f
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-gateway-approved-hosts
    sources:
    - ghcr.io/kubewarden/policies/istio-gateway-approved-hosts:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-gateway-approved-hosts-1.0.0/istio-gateway-approved-hosts-1.0.0.tgz
    version: 1.0.0
  istio-injected-namespaces:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Injected Namespaces
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-injected-namespaces
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:40.191552907Z"
    description: '# Istio-Injected Namespaces Specify namespaces you would like to
      be labeld with `istio-injected: enabled`. Namespaces with this label with automatically
      deploy a Istio sidecar with each pod.  '
    digest: 769d1233469efffa5c1eef84f72f09ba190683da9b7efd2e78525fb6935a397e
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-injected-namespaces
    sources:
    - ghcr.io/kubewarden/policies/istio-injected-namespaces:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-injected-namespaces-1.0.3/istio-injected-namespaces-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Injected Namespaces
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-injected-namespaces
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:57:40.547633835Z"
    description: '# Istio-Injected Namespaces Specify namespaces you would like to
      be labeld with `istio-injected: enabled`. Namespaces with this label with automatically
      deploy a Istio sidecar with each pod.  '
    digest: 1db120eca6b89ba3d7d36d12816ced1c294b520ab9c5e096836b2aac135d4358
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-injected-namespaces
    sources:
    - ghcr.io/kubewarden/policies/istio-injected-namespaces:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-injected-namespaces-1.0.2/istio-injected-namespaces-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Injected Namespaces
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-injected-namespaces
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:07.809625977Z"
    description: '# Istio-Injected Namespaces Specify namespaces you would like to
      be labeld with `istio-injected: enabled`. Namespaces with this label with automatically
      deploy a Istio sidecar with each pod.  '
    digest: 46979fe2fb018fc3719a88f42aa0ace5c1abe7272135757c9e4df19b5423b7b3
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-injected-namespaces
    sources:
    - ghcr.io/kubewarden/policies/istio-injected-namespaces:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-injected-namespaces-1.0.1/istio-injected-namespaces-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Injected Namespaces
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-injected-namespaces
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:00.877583006Z"
    description: '# Istio-Injected Namespaces Specify namespaces you would like to
      be labeld with `istio-injected: enabled`. Namespaces with this label with automatically
      deploy a Istio sidecar with each pod.  '
    digest: 437152a55f71dbe6fe9922d256f2701c7e98644aa7370b54d0578231dfae37c6
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-injected-namespaces
    sources:
    - ghcr.io/kubewarden/policies/istio-injected-namespaces:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/istio-injected-namespaces-1.0.0/istio-injected-namespaces-1.0.0.tgz
    version: 1.0.0
  kustomization-decryption-provider:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Decryption Provider
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-decryption-provider
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:30:47.194857344Z"
    description: Spec.decryption.provider must be set to one of decryption_providers.
    digest: 751e04d9671b35d783f19485e19120e7fd494fcdcf50e69f3e21b50d8d6487dd
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-decryption-provider
    sources:
    - ghcr.io/kubewarden/policies/kustomization-decryption-provider:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-decryption-provider-1.0.3/kustomization-decryption-provider-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Decryption Provider
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-decryption-provider
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:15:52.464222607Z"
    description: Spec.decryption.provider must be set to one of decryption_providers.
    digest: 8c894f2def2e90f6c75283e427d34ecbb738f9b1cdef83819655fc66c48636d7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-decryption-provider
    sources:
    - ghcr.io/kubewarden/policies/kustomization-decryption-provider:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-decryption-provider-1.0.2/kustomization-decryption-provider-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Decryption Provider
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-decryption-provider
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:29.420340009Z"
    description: Spec.decryption.provider must be set to one of decryption_providers.
    digest: 4294b2295ead94c5192e0c8e21a6e7ea55a53ffb3dc5357c125fa87a50bd973f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-decryption-provider
    sources:
    - ghcr.io/kubewarden/policies/kustomization-decryption-provider:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-decryption-provider-1.0.1/kustomization-decryption-provider-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Decryption Provider
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-decryption-provider
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:08.293686367Z"
    description: Spec.decryption.provider must be set to one of decryption_providers.
    digest: d23325df6f3a7c23009182d85d8b65afa5e0abc12c9d5275d6c7ff3dbe220a3b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-decryption-provider
    sources:
    - ghcr.io/kubewarden/policies/kustomization-decryption-provider:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-decryption-provider-1.0.0/kustomization-decryption-provider-1.0.0.tgz
    version: 1.0.0
  kustomization-excluded-paths:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Excluded Paths
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-excluded-paths
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:29:40.493554083Z"
    description: spec.path cannot be one of excludedPathsList[]
    digest: 3df97f9e1923e9e687004b064ee89e7b2757927b959d2bddd90f3f3a40f5d168
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-excluded-paths
    sources:
    - ghcr.io/kubewarden/policies/kustomization-excluded-paths:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-excluded-paths-1.0.3/kustomization-excluded-paths-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Excluded Paths
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-excluded-paths
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:13:43.096116559Z"
    description: spec.path cannot be one of excludedPathsList[]
    digest: aeb0143b6d57451659ca90841cae247a1787ee26cd8bed19c8af9c06288bdff9
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-excluded-paths
    sources:
    - ghcr.io/kubewarden/policies/kustomization-excluded-paths:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-excluded-paths-1.0.2/kustomization-excluded-paths-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Excluded Paths
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-excluded-paths
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:09.3736331Z"
    description: spec.path cannot be one of excludedPathsList[]
    digest: 855d070ff4e3b8cb3be94950b2efd49263fe83f5412bd93584858ae113bca68e
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-excluded-paths
    sources:
    - ghcr.io/kubewarden/policies/kustomization-excluded-paths:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-excluded-paths-1.0.1/kustomization-excluded-paths-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Excluded Paths
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-excluded-paths
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:30.634550172Z"
    description: spec.path cannot be one of excludedPathsList[]
    digest: 774f402561c26d6f13528135a4b509574c9712dc8b8b4cc4631172a54f6b00e3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-excluded-paths
    sources:
    - ghcr.io/kubewarden/policies/kustomization-excluded-paths:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-excluded-paths-1.0.0/kustomization-excluded-paths-1.0.0.tgz
    version: 1.0.0
  kustomization-image-tag-standards:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Image Tag Standards
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-image-tag-standards
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:29:40.635899039Z"
    description: spec.Images must comply with image tag/semver reference standards.
    digest: bd129e8afef0c89c450cb3dab530c34f70f8e1c8a59a0c07c175371ce5d42020
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-image-tag-standards
    sources:
    - ghcr.io/kubewarden/policies/kustomization-image-tag-standards:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-image-tag-standards-1.0.3/kustomization-image-tag-standards-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Image Tag Standards
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-image-tag-standards
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:14:55.105589184Z"
    description: spec.Images must comply with image tag/semver reference standards.
    digest: e860374f2bc3507e31557933c45035006433cac85c9198195be3017c8c5f2fcb
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-image-tag-standards
    sources:
    - ghcr.io/kubewarden/policies/kustomization-image-tag-standards:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-image-tag-standards-1.0.2/kustomization-image-tag-standards-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Image Tag Standards
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-image-tag-standards
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:29.568729009Z"
    description: spec.Images must comply with image tag/semver reference standards.
    digest: 8908094e6439457c70f6fe6b0e69ee2768eed0f91f0f127492f3695144249e25
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-image-tag-standards
    sources:
    - ghcr.io/kubewarden/policies/kustomization-image-tag-standards:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-image-tag-standards-1.0.1/kustomization-image-tag-standards-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Image Tag Standards
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-image-tag-standards
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:30.841387189Z"
    description: spec.Images must comply with image tag/semver reference standards.
    digest: f6e2e6985fe91e8935e9deed3742d08345dbd4294fe8adf6273aa486cc4552e1
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-image-tag-standards
    sources:
    - ghcr.io/kubewarden/policies/kustomization-image-tag-standards:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-image-tag-standards-1.0.0/kustomization-image-tag-standards-1.0.0.tgz
    version: 1.0.0
  kustomization-images-requirement:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Images Requirement
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-images-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:29:27.141082603Z"
    description: The 'spec.images' field in a Kustomization object must be enabled
      or disabled based on the policy input images_required.
    digest: d2afb6463c6b1a1517f701957d504bdb4321334ef435a169946fb40f0de7f0af
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-images-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-images-requirement:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-images-requirement-1.0.3/kustomization-images-requirement-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Images Requirement
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-images-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:10:32.569567022Z"
    description: The 'spec.images' field in a Kustomization object must be enabled
      or disabled based on the policy input images_required.
    digest: b2409740b7aa0170eb684e904e29edbe7c4e5a5a8aa5c0c01b778deb1075113c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-images-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-images-requirement:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-images-requirement-1.0.2/kustomization-images-requirement-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Images Requirement
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-images-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:28.376010083Z"
    description: The 'spec.images' field in a Kustomization object must be enabled
      or disabled based on the policy input images_required.
    digest: bf9ade3567f874d39615e5d5753f86c29ac70b36b5d58a3bb94b07136ebc48f7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-images-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-images-requirement:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-images-requirement-1.0.1/kustomization-images-requirement-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Images Requirement
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-images-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:19:52.510539805Z"
    description: The 'spec.images' field in a Kustomization object must be enabled
      or disabled based on the policy input images_required.
    digest: a0fb38744d812d09f0b3ee9262c9b963a44c1b7deb3a7f9d36e02ff4dda19342
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-images-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-images-requirement:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-images-requirement-1.0.0/kustomization-images-requirement-1.0.0.tgz
    version: 1.0.0
  kustomization-patches-requirement:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Patches
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-patches-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:29:11.926975864Z"
    description: Kustomization patches should be enabled or disabled based on input.
    digest: abdbd4bea7e7bc7a8e577660a0bc03c0a78a245ac800f28a74d03a72d4669d68
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-patches-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-patches-requirement:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-patches-requirement-1.0.3/kustomization-patches-requirement-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Patches
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-patches-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:09:49.105448262Z"
    description: Kustomization patches should be enabled or disabled based on input.
    digest: 60aa9c2a3cbbd23b0a07b6401583af1b41ff4c292f078c3e9dbff73f6e90d5e3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-patches-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-patches-requirement:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-patches-requirement-1.0.2/kustomization-patches-requirement-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Patches
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-patches-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:29.704269569Z"
    description: Kustomization patches should be enabled or disabled based on input.
    digest: 5c82ae78615a5e9c37b4da5168b6c88102d87f95515a6ca95f18722438de49cf
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-patches-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-patches-requirement:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-patches-requirement-1.0.1/kustomization-patches-requirement-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Patches
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-patches-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:57.689054626Z"
    description: Kustomization patches should be enabled or disabled based on input.
    digest: 5549279fea0f523fc3ae7431191230b054768d9acf8af1abe9547da2b7c62972
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-patches-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-patches-requirement:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-patches-requirement-1.0.0/kustomization-patches-requirement-1.0.0.tgz
    version: 1.0.0
  kustomization-prune:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Prune
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-prune
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:29:12.073225682Z"
    description: The 'spec.prune' field in the Kustomization object must be set according
      to the input parameter 'prune'.
    digest: d36bae692ecc0d81778cc3f5b4c2b3c4f012a8297bf3370cb581f90536c7fd9f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-prune
    sources:
    - ghcr.io/kubewarden/policies/kustomization-prune:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-prune-1.0.3/kustomization-prune-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Prune
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-prune
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:08:25.256834455Z"
    description: The 'spec.prune' field in the Kustomization object must be set according
      to the input parameter 'prune'.
    digest: ae961fa62947b549748d4022a79e007110f27da34852635fca990915e75d8eef
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-prune
    sources:
    - ghcr.io/kubewarden/policies/kustomization-prune:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-prune-1.0.2/kustomization-prune-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Prune
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-prune
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:49.353945434Z"
    description: The 'spec.prune' field in the Kustomization object must be set according
      to the input parameter 'prune'.
    digest: bda8b42368c4d0e2f98f801cada406fd01a18ba8d7027f7a1affc3319a6a1a1c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-prune
    sources:
    - ghcr.io/kubewarden/policies/kustomization-prune:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-prune-1.0.1/kustomization-prune-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Prune
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-prune
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:57.852400262Z"
    description: The 'spec.prune' field in the Kustomization object must be set according
      to the input parameter 'prune'.
    digest: fbf36297c14ff6aef211703f92ab3fb550a69fd49c319b26798d9b604bf3c7fd
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-prune
    sources:
    - ghcr.io/kubewarden/policies/kustomization-prune:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-prune-1.0.0/kustomization-prune-1.0.0.tgz
    version: 1.0.0
  kustomization-target-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-target-namespace
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-22T17:50:24.891833022Z"
    description: Kustomization targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 467b9c160bebcacd4788f092f76a45f52c8a30b2f874c882bdafaaacf4f9dd0d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/kustomization-target-namespace:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-target-namespace-1.0.4/kustomization-target-namespace-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-target-namespace
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:29:27.338758011Z"
    description: Kustomization targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 54e4d3dd840ec6130145da7c3ee9d90c1a36ad6762a645e8f5a06cd79be70ae8
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/kustomization-target-namespace:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-target-namespace-1.0.3/kustomization-target-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-target-namespace
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:12:40.561397017Z"
    description: Kustomization targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 12fdc5df45132c55eee268742025d64cb4fb59ffdb4a516bd1146ad605b596c3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/kustomization-target-namespace:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-target-namespace-1.0.2/kustomization-target-namespace-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-target-namespace
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:29.814744677Z"
    description: Kustomization targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 6c5928116182749bdb70415d405ab4f09c6963e265e292c23bcee748159378f0
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/kustomization-target-namespace:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-target-namespace-1.0.1/kustomization-target-namespace-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-target-namespace
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:20:08.425426841Z"
    description: Kustomization targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 984ebbef5b43bfa20f640f2a016ba0d3c04e8fbcc3c0c77213587b1483757640
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/kustomization-target-namespace:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-target-namespace-1.0.0/kustomization-target-namespace-1.0.0.tgz
    version: 1.0.0
  kustomization-var-substitution:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Var Substitution
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-var-substitution
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:29:27.576985696Z"
    description: The property 'spec.postBuild.substitute.var_substitution_enabled'
      must be disabled.
    digest: 73347197375b89363ac112cabd9040ddb3bb334d028323f91945510547088daa
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-var-substitution
    sources:
    - ghcr.io/kubewarden/policies/kustomization-var-substitution:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-var-substitution-1.0.3/kustomization-var-substitution-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Var Substitution
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-var-substitution
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:11:38.145239341Z"
    description: The property 'spec.postBuild.substitute.var_substitution_enabled'
      must be disabled.
    digest: 5707c33cabce16d38aa4867e129225e01079c54852f9c94d7c1efc2e62e1f4c0
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-var-substitution
    sources:
    - ghcr.io/kubewarden/policies/kustomization-var-substitution:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-var-substitution-1.0.2/kustomization-var-substitution-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Var Substitution
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-var-substitution
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:49.505096791Z"
    description: The property 'spec.postBuild.substitute.var_substitution_enabled'
      must be disabled.
    digest: 3cdb109863a4d4efdf6e9a554010acf20d34f42902e131ba4a83109c5816468a
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-var-substitution
    sources:
    - ghcr.io/kubewarden/policies/kustomization-var-substitution:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-var-substitution-1.0.1/kustomization-var-substitution-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Var Substitution
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-var-substitution
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:57.977421724Z"
    description: The property 'spec.postBuild.substitute.var_substitution_enabled'
      must be disabled.
    digest: 9d1707c2c846be7f0b07cae55ff13a50720544120889ca9c7365abc4f2dc15ea
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-var-substitution
    sources:
    - ghcr.io/kubewarden/policies/kustomization-var-substitution:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/kustomization-var-substitution-1.0.0/kustomization-var-substitution-1.0.0.tgz
    version: 1.0.0
  metadata-missing-label-and-value:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Metadata Missing Label And Value
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/metadata-missing-label-and-value
      kubewarden/resources: DaemonSet, Deployment, Job, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:36.505669724Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensures a key and value are set in the entity''s
      `metadata.labels` path. The Policy detects the presence of the following:   ###
      label A label key of your choosing.   ### value A label value of your choosing. '
    digest: cc3c41b92f25d3f4a0809caf6b6bdd0bb5d1bebe02811448882da619b6ee20b2
    home: https://github.com/kubewarden/rego-policies-library
    name: metadata-missing-label-and-value
    sources:
    - ghcr.io/kubewarden/policies/metadata-missing-label-and-value:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/metadata-missing-label-and-value-1.0.3/metadata-missing-label-and-value-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Metadata Missing Label And Value
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/metadata-missing-label-and-value
      kubewarden/resources: DaemonSet, Deployment, Job, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:01:49.315183754Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensures a key and value are set in the entity''s
      `metadata.labels` path. The Policy detects the presence of the following:   ###
      label A label key of your choosing.   ### value A label value of your choosing. '
    digest: 891aacda57b61643cccfba0c43deccf98078312c711963f154822ff1523d1773
    home: https://github.com/kubewarden/rego-policies-library
    name: metadata-missing-label-and-value
    sources:
    - ghcr.io/kubewarden/policies/metadata-missing-label-and-value:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/metadata-missing-label-and-value-1.0.2/metadata-missing-label-and-value-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Metadata Missing Label And Value
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/metadata-missing-label-and-value
      kubewarden/resources: DaemonSet, Deployment, Job, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:44.72002441Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensures a key and value are set in the entity''s
      `metadata.labels` path. The Policy detects the presence of the following:   ###
      label A label key of your choosing.   ### value A label value of your choosing. '
    digest: de9b6c340db8bfcfb6372023fa669182a3d4e9efb23d3e2a547b34dc7b509e11
    home: https://github.com/kubewarden/rego-policies-library
    name: metadata-missing-label-and-value
    sources:
    - ghcr.io/kubewarden/policies/metadata-missing-label-and-value:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/metadata-missing-label-and-value-1.0.1/metadata-missing-label-and-value-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Metadata Missing Label And Value
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/metadata-missing-label-and-value
      kubewarden/resources: DaemonSet, Deployment, Job, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:14.771303122Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensures a key and value are set in the entity''s
      `metadata.labels` path. The Policy detects the presence of the following:   ###
      label A label key of your choosing.   ### value A label value of your choosing. '
    digest: 383c22189dcaf77c8fdd6a31a7e56d28c6a27791e01a197ac2bb6d53762ca035
    home: https://github.com/kubewarden/rego-policies-library
    name: metadata-missing-label-and-value
    sources:
    - ghcr.io/kubewarden/policies/metadata-missing-label-and-value:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/metadata-missing-label-and-value-1.0.0/metadata-missing-label-and-value-1.0.0.tgz
    version: 1.0.0
  missing-kubernetes-app-component-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Component Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-component-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:16.534429297Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: c0293a015c4ceb02ac5f560af6bf71385a9a5a35e340fed3ccf3878ce9540db7
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-component-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-component-label:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-component-label-1.0.3/missing-kubernetes-app-component-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Component Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-component-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:09:21.744772691Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 39263de905fe7a0d48966e61ea0c89572e3f675664a29e74b836140a3d7fc7bd
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-component-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-component-label:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-component-label-1.0.2/missing-kubernetes-app-component-label-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Component Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-component-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:57:27.299663452Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 2d44936cbfae50865ed7f0d8f9273df613e75ca72a045d5aaedcfa94e97167ae
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-component-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-component-label:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-component-label-1.0.1/missing-kubernetes-app-component-label-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Component Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-component-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:35.753890611Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: ef62c07c6f2e4f6a383c5a77c9ac0fb1acfea79f3a754b4fd43becc0e91e8dc5
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-component-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-component-label:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-component-label-1.0.0/missing-kubernetes-app-component-label-1.0.0.tgz
    version: 1.0.0
  missing-kubernetes-app-created-by-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Created By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-created-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:16.720924713Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 8119b8dd2147c2f9245b87f479887cbd48fdb9b9e72390faf76e678a5cd80911
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-created-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-created-by-label:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-created-by-label-1.0.3/missing-kubernetes-app-created-by-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Created By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-created-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:08:12.529213458Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: d930491ad17462f908a8c7c9c51f76c77cfa17b695dd1349a2c30d3fa398e10c
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-created-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-created-by-label:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-created-by-label-1.0.2/missing-kubernetes-app-created-by-label-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Created By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-created-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:09.479366436Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 32170e96e2066b1b5e4348d512a6059c130288567e4a6d0c7594b1c43f602315
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-created-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-created-by-label:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-created-by-label-1.0.1/missing-kubernetes-app-created-by-label-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Created By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-created-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:14.920744353Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 7b9612a792748c476e92e8f02e56bed4436b4691d2879913589f3e2e4ec619d5
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-created-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-created-by-label:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-created-by-label-1.0.0/missing-kubernetes-app-created-by-label-1.0.0.tgz
    version: 1.0.0
  missing-kubernetes-app-instance-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Instance Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-instance-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:03.081378546Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 80980df6bd4968819ebe7aff80ea3ce04c7992be018d341d226942390969f088
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-instance-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-instance-label:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-instance-label-1.0.3/missing-kubernetes-app-instance-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Instance Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-instance-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:07:08.314080917Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 0a1d58fcd5d2c516481af504b3a520e582831f0554521392e0f7efe93859c895
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-instance-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-instance-label:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-instance-label-1.0.2/missing-kubernetes-app-instance-label-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Instance Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-instance-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:09.602879932Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 3daecd9e70599a6306b63a742f0bda288f067cd5f62b1fc9a46cb2644a11ead3
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-instance-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-instance-label:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-instance-label-1.0.1/missing-kubernetes-app-instance-label-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Instance Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-instance-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:35.877885267Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 812a0a9867b3cfacb84735c156f02761e353a3f47746ca56edecdb4d6cce1249
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-instance-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-instance-label:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-instance-label-1.0.0/missing-kubernetes-app-instance-label-1.0.0.tgz
    version: 1.0.0
  missing-kubernetes-app-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:33:03.236457521Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 4ee4f8722ae9b8f0b208ee01bac16aad0d8217773439a38f1d59fad0579d8266
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-label:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-label-1.0.3/missing-kubernetes-app-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:06:04.527317432Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 8ac274d148bfc38dcb97cdc0ad691e9984b71adda23992f3a846486bba77136f
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-label:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-label-1.0.2/missing-kubernetes-app-label-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:59.024499328Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 904d34a955f82a0767a62bb1d1e7c39851cca61877de847062cae552c92e8aa3
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-label:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-label-1.0.1/missing-kubernetes-app-label-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:36.001835324Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 37a60402fa5228073b961bafed436e18fad99a798174a54c6f87c1d64fbca5ae
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-label:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-label-1.0.0/missing-kubernetes-app-label-1.0.0.tgz
    version: 1.0.0
  missing-kubernetes-app-managed-by-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Managed By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-managed-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:50.858767259Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: e5c71e8659294fa5311d351e97acf3d2afc31c2855e7ea799c34960f2f220f9a
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-managed-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-managed-by-label:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-managed-by-label-1.0.3/missing-kubernetes-app-managed-by-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Managed By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-managed-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:05:02.30567873Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 3cec946fca8d01c024e3e7d1d2d51a90194bb112ed583ffcd0e3eb7c50609a41
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-managed-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-managed-by-label:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-managed-by-label-1.0.2/missing-kubernetes-app-managed-by-label-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Managed By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-managed-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:50.097232832Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: ceaa542f049288738b1f1660dec2c4d81b925bee90ecf6c58d0ca88d64a9c68f
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-managed-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-managed-by-label:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-managed-by-label-1.0.1/missing-kubernetes-app-managed-by-label-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Managed By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-managed-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:36.111941469Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 84353ef9f8c99ae9af8aba947af2552354ae5b636e43c1b20d358769c95cbaa4
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-managed-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-managed-by-label:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-managed-by-label-1.0.0/missing-kubernetes-app-managed-by-label-1.0.0.tgz
    version: 1.0.0
  missing-kubernetes-app-part-of-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Part Of Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-part-of-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:50.994291145Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: a94ef2570d9bbbbf703bec09984d1ce01cf1364ccb801b4d76a22277ecfd5273
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-part-of-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-part-of-label:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-part-of-label-1.0.3/missing-kubernetes-app-part-of-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Part Of Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-part-of-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:03:56.646951542Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 58f2b134b0ff66d1f7ae9915a4588e739f4d7c5af99d74e686d9fdecdfa23820
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-part-of-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-part-of-label:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-part-of-label-1.0.2/missing-kubernetes-app-part-of-label-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Part Of Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-part-of-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:44.835971329Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: fedb08667b989addf4b7f5c637218f131a4cda7fe5f387fefa7ef776fc225f63
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-part-of-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-part-of-label:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-part-of-label-1.0.1/missing-kubernetes-app-part-of-label-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Part Of Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-part-of-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:36.300424967Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 726deca2e4cd9b09f9e15e5ca2469fbc644f7fa078c5f857924172fe0867e291
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-part-of-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-part-of-label:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-part-of-label-1.0.0/missing-kubernetes-app-part-of-label-1.0.0.tgz
    version: 1.0.0
  missing-kubernetes-app-version-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Version Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-version-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:51.117096905Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 4d4fb9fc1a10da38955df61c22ad9e629c3cee5c029fe39de3b70936643f9584
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-version-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-version-label:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-version-label-1.0.3/missing-kubernetes-app-version-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Version Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-version-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T11:02:52.389183568Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 9ab1afdd8fd45dbfec11d83bd3bd28eefd2733da50eb181b374e8ca45885ee1f
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-version-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-version-label:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-version-label-1.0.2/missing-kubernetes-app-version-label-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Version Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-version-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:44.950272364Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 5e2d3bb511b381cc1a51d0728738eb290ce712a117cff1793e7d6a0866cb1538
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-version-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-version-label:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-version-label-1.0.1/missing-kubernetes-app-version-label-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Version Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-version-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:36.433178427Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 3fd0d4c2d814a49a3087d411f87df97832e3d0d448c48af3a24ca99b2579a448
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-version-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-version-label:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-kubernetes-app-version-label-1.0.0/missing-kubernetes-app-version-label-1.0.0.tgz
    version: 1.0.0
  missing-owner-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Owner Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-owner-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:32:36.631563767Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 699e73ed557b544531ccd45dd62496fcd07bd92c425d74e40a0e045498b81f3d
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-owner-label
    sources:
    - ghcr.io/kubewarden/policies/missing-owner-label:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-owner-label-1.0.3/missing-owner-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Owner Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-owner-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T10:59:40.286849272Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 0ebbf8022892a937dcde984b41c4b8f6fbdb18b7cb48e5e859cd5f9644594803
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-owner-label
    sources:
    - ghcr.io/kubewarden/policies/missing-owner-label:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-owner-label-1.0.2/missing-owner-label-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Owner Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-owner-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:07.926325233Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: ae61e78ca0df3311362a572a99f68a41105646f7a806bd7db4370000abac8dcf
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-owner-label
    sources:
    - ghcr.io/kubewarden/policies/missing-owner-label:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-owner-label-1.0.1/missing-owner-label-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Owner Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-owner-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:21:15.173236728Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 0f2ac67cbac307711fac6b8941c5ce1150ad41509149adeeffcc89d64c1e3390
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-owner-label
    sources:
    - ghcr.io/kubewarden/policies/missing-owner-label:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/missing-owner-label-1.0.0/missing-owner-label-1.0.0.tgz
    version: 1.0.0
  namespace-label-propagator-policy:
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:28:20.029374436Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: 61638621508ed2e70fa06bf006e7739a8c4ba857b41c22f0624a828f22c2e2e9
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-label-propagator-policy-1.0.4/namespace-label-propagator-policy-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:15:50.152607356Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: 9a1e6124bebb8933bdc5d5309d693561b3bfaf6503b1e7e514499b14d9fdbc6c
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-label-propagator-policy-1.0.3/namespace-label-propagator-policy-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:32:20.826907462Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: 5fed0b75bb0c1e644320f5a0fc86c20afc53538ad7fcd7d892bea5e6e4c27b7b
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-label-propagator-policy-1.0.2/namespace-label-propagator-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:52.347973297Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: a54b95dbcd9602b0a7131d1cd9544e9eb66f941040ce3a1dce68feec9d88f488
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-label-propagator-policy-1.0.0/namespace-label-propagator-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-03-18T13:57:00.276691799Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: 3d69efb7f078847b6c2d4ec1054344bd5473cf01d3ebd83366af3f70de6e77fa
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v0.1.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-label-propagator-policy-0.1.5/namespace-label-propagator-policy-0.1.5.tgz
    version: 0.1.5
  namespace-pod-quota:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Pod Quota
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-pod-quota
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-03T13:37:51.900807203Z"
    description: 'When using a pod quota ensure setting the proper value for the quantity
      of pods you wish to have in your namespace.  '
    digest: 6b2261cf7f445e8df75f38ab83cc05f1279de1855fc2beaf0cd0909fccede780
    home: https://github.com/kubewarden/rego-policies-library
    name: namespace-pod-quota
    sources:
    - ghcr.io/kubewarden/policies/namespace-pod-quota:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-pod-quota-1.0.4/namespace-pod-quota-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Pod Quota
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-pod-quota
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:18.37219324Z"
    description: 'When using a pod quota ensure setting the proper value for the quantity
      of pods you wish to have in your namespace.  '
    digest: f6785343f1530536adce0c51a18fb7656fa50b9f9b596de30053d65858440f59
    home: https://github.com/kubewarden/rego-policies-library
    name: namespace-pod-quota
    sources:
    - ghcr.io/kubewarden/policies/namespace-pod-quota:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-pod-quota-1.0.3/namespace-pod-quota-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Pod Quota
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-pod-quota
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:55:30.935221276Z"
    description: 'When using a pod quota ensure setting the proper value for the quantity
      of pods you wish to have in your namespace.  '
    digest: 687f0789c66825d3b3269829e72dee55e1838089cfd59532e30d7ab72a052c98
    home: https://github.com/kubewarden/rego-policies-library
    name: namespace-pod-quota
    sources:
    - ghcr.io/kubewarden/policies/namespace-pod-quota:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-pod-quota-1.0.2/namespace-pod-quota-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Pod Quota
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-pod-quota
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:09.546688732Z"
    description: 'When using a pod quota ensure setting the proper value for the quantity
      of pods you wish to have in your namespace.  '
    digest: 1752586c3d138a61e3bbcb9e0d3033b9421c830e18508c91c6957d5b24c36953
    home: https://github.com/kubewarden/rego-policies-library
    name: namespace-pod-quota
    sources:
    - ghcr.io/kubewarden/policies/namespace-pod-quota:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-pod-quota-1.0.1/namespace-pod-quota-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Pod Quota
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-pod-quota
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:22.891500311Z"
    description: 'When using a pod quota ensure setting the proper value for the quantity
      of pods you wish to have in your namespace.  '
    digest: d6ea51ded9ac94a0d5a55786cf6d435434895a789cb4150c266cfbdd407c59eb
    home: https://github.com/kubewarden/rego-policies-library
    name: namespace-pod-quota
    sources:
    - ghcr.io/kubewarden/policies/namespace-pod-quota:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-pod-quota-1.0.0/namespace-pod-quota-1.0.0.tgz
    version: 1.0.0
  namespace-resources-limitrange:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Resources Limitrange
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-resources-limitrange
      kubewarden/resources: LimitRange
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - limitranges
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:40.397948777Z"
    description: 'When setting up default CPU and Memory values for your namespace,
      this policy will check if both requests and limits are set. This policy checks
      for the following:  | Resource Setting | Resource Type  | |---|---| |  default
      | cpu  | |  default  | memory  | |  defaultRequest |  cpu | |  defaultRequest
      | memory  | |  min | memory  | |  min | cpu  | |  max | cpu | |  max | memory  | '
    digest: a069ce156c425b23cccbcc87c7cf653c8756d21a9cbaa937127c80a3b99d848b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: namespace-resources-limitrange
    sources:
    - ghcr.io/kubewarden/policies/namespace-resources-limitrange:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-resources-limitrange-1.0.3/namespace-resources-limitrange-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Resources Limitrange
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-resources-limitrange
      kubewarden/resources: LimitRange
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - limitranges
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:56:33.577624474Z"
    description: 'When setting up default CPU and Memory values for your namespace,
      this policy will check if both requests and limits are set. This policy checks
      for the following:  | Resource Setting | Resource Type  | |---|---| |  default
      | cpu  | |  default  | memory  | |  defaultRequest |  cpu | |  defaultRequest
      | memory  | |  min | memory  | |  min | cpu  | |  max | cpu | |  max | memory  | '
    digest: d86d6d67b0b8f03d9e5d6ad999d05fcb9ce5db736a74da2deb3ee57957916afe
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: namespace-resources-limitrange
    sources:
    - ghcr.io/kubewarden/policies/namespace-resources-limitrange:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-resources-limitrange-1.0.2/namespace-resources-limitrange-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Resources Limitrange
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-resources-limitrange
      kubewarden/resources: LimitRange
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - limitranges
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:29.931125387Z"
    description: 'When setting up default CPU and Memory values for your namespace,
      this policy will check if both requests and limits are set. This policy checks
      for the following:  | Resource Setting | Resource Type  | |---|---| |  default
      | cpu  | |  default  | memory  | |  defaultRequest |  cpu | |  defaultRequest
      | memory  | |  min | memory  | |  min | cpu  | |  max | cpu | |  max | memory  | '
    digest: 8cd8593a2b65179f4386d901f9603482bc57c249f17a305fb5a24c0db17686dd
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: namespace-resources-limitrange
    sources:
    - ghcr.io/kubewarden/policies/namespace-resources-limitrange:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-resources-limitrange-1.0.1/namespace-resources-limitrange-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Resources Limitrange
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-resources-limitrange
      kubewarden/resources: LimitRange
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - limitranges
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.393920427Z"
    description: 'When setting up default CPU and Memory values for your namespace,
      this policy will check if both requests and limits are set. This policy checks
      for the following:  | Resource Setting | Resource Type  | |---|---| |  default
      | cpu  | |  default  | memory  | |  defaultRequest |  cpu | |  defaultRequest
      | memory  | |  min | memory  | |  min | cpu  | |  max | cpu | |  max | memory  | '
    digest: dd5f1ca934724fc82e7770a9cd37753f5edf1f4af59700bc56dee4fdfd0cadce
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: namespace-resources-limitrange
    sources:
    - ghcr.io/kubewarden/policies/namespace-resources-limitrange:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/namespace-resources-limitrange-1.0.0/namespace-resources-limitrange-1.0.0.tgz
    version: 1.0.0
  network-allow-egress-traffic-from-namespace-to-another:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Egress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:27:23.746875147Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Egress traffic from one namespace to another.  By default,
      if no policies exist in a namespace, then all ingress and egress traffic is
      allowed to and from pods in that namespace.  '
    digest: 04aece29e878f0ebd806540c2dcb4cc2887380ed15c952f3be6057baae137c4b
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-egress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-egress-traffic-from-namespace-to-another-1.0.3/network-allow-egress-traffic-from-namespace-to-another-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Egress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:53:24.308078522Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Egress traffic from one namespace to another.  By default,
      if no policies exist in a namespace, then all ingress and egress traffic is
      allowed to and from pods in that namespace.  '
    digest: 9dc2ab436356dfaea63d3ccf3f339381029604981b2f113c640c5472fc7650b3
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-egress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-egress-traffic-from-namespace-to-another-1.0.2/network-allow-egress-traffic-from-namespace-to-another-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Egress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:57:27.430643283Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Egress traffic from one namespace to another.  By default,
      if no policies exist in a namespace, then all ingress and egress traffic is
      allowed to and from pods in that namespace.  '
    digest: 45bbee1a01494e263347f3d5f19a447c4571fbf57ed9ddff0d5343c3e34f1b2a
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-egress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-egress-traffic-from-namespace-to-another-1.0.1/network-allow-egress-traffic-from-namespace-to-another-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Egress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.006925474Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Egress traffic from one namespace to another.  By default,
      if no policies exist in a namespace, then all ingress and egress traffic is
      allowed to and from pods in that namespace.  '
    digest: 7ccffca782a72e659cd4d2cb474fcc6a29f0024d1a49206b39a889152fa8e7be
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-egress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-egress-traffic-from-namespace-to-another-1.0.0/network-allow-egress-traffic-from-namespace-to-another-1.0.0.tgz
    version: 1.0.0
  network-allow-ingress-traffic-from-namespace-to-another:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Ingress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:18.545342364Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Ingress traffic from one namespace to another.  By
      default, if no policies exist in a namespace, then all ingress and egress traffic
      is allowed to and from pods in that namespace.  '
    digest: 091d81dcd6e1d4a4ac63d256cfe6e75a63c22f02e915a2b0fa08b605ffe80e3c
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-ingress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-ingress-traffic-from-namespace-to-another-1.0.3/network-allow-ingress-traffic-from-namespace-to-another-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Ingress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:52:17.108797932Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Ingress traffic from one namespace to another.  By
      default, if no policies exist in a namespace, then all ingress and egress traffic
      is allowed to and from pods in that namespace.  '
    digest: 24658955f8cfb119f2d671df9175372f26efe298792ec7db9e612e73d3e815e5
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-ingress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-ingress-traffic-from-namespace-to-another-1.0.2/network-allow-ingress-traffic-from-namespace-to-another-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Ingress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:57:11.175792569Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Ingress traffic from one namespace to another.  By
      default, if no policies exist in a namespace, then all ingress and egress traffic
      is allowed to and from pods in that namespace.  '
    digest: f42933b9f6cac35b99475e57d25d34c0f9927717d02c2f4355568c09f32a2e3d
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-ingress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-ingress-traffic-from-namespace-to-another-1.0.1/network-allow-ingress-traffic-from-namespace-to-another-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Ingress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.149494194Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Ingress traffic from one namespace to another.  By
      default, if no policies exist in a namespace, then all ingress and egress traffic
      is allowed to and from pods in that namespace.  '
    digest: 54125dd42950407733cd6a13ccaa19aa02b697fa4be262414c61541b6d533e7b
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-ingress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-allow-ingress-traffic-from-namespace-to-another-1.0.0/network-allow-ingress-traffic-from-namespace-to-another-1.0.0.tgz
    version: 1.0.0
  network-block-all-ingress-traffic-to-namespace-from-cidr-block:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Block All Ingress Traffic To Namespace From
        CIDR Block
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:18.702545774Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to block all Egress traffic from a specified namespace to a
      CIDR block of IP addresses.   By default, if no policies exist in a namespace,
      then all ingress and egress traffic is allowed to and from pods in that namespace.  '
    digest: 8bfc46b484b1000083f2383a313601e32156cfeb234f697c8b5f0e9aa6143b4c
    home: https://github.com/kubewarden/rego-policies-library
    name: network-block-all-ingress-traffic-to-namespace-from-cidr-block
    sources:
    - ghcr.io/kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.3/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Block All Ingress Traffic To Namespace From
        CIDR Block
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:51:15.288982341Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to block all Egress traffic from a specified namespace to a
      CIDR block of IP addresses.   By default, if no policies exist in a namespace,
      then all ingress and egress traffic is allowed to and from pods in that namespace.  '
    digest: 994ae1c56177b0ac04c215047b3b549d97caa43bbe992656d657e9c6dfd40038
    home: https://github.com/kubewarden/rego-policies-library
    name: network-block-all-ingress-traffic-to-namespace-from-cidr-block
    sources:
    - ghcr.io/kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.2/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Block All Ingress Traffic To Namespace From
        CIDR Block
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:58:36.16503224Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to block all Egress traffic from a specified namespace to a
      CIDR block of IP addresses.   By default, if no policies exist in a namespace,
      then all ingress and egress traffic is allowed to and from pods in that namespace.  '
    digest: 522c044992374bb6b7a06f9520cacc196bca751ccd8dbacfffbb3f14d118c97b
    home: https://github.com/kubewarden/rego-policies-library
    name: network-block-all-ingress-traffic-to-namespace-from-cidr-block
    sources:
    - ghcr.io/kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.1/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Block All Ingress Traffic To Namespace From
        CIDR Block
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.276293024Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to block all Egress traffic from a specified namespace to a
      CIDR block of IP addresses.   By default, if no policies exist in a namespace,
      then all ingress and egress traffic is allowed to and from pods in that namespace.  '
    digest: 45f3da9e0aa72e7b59093b3cdc9c770809ba0328aff176dd1f935cb6b0173010
    home: https://github.com/kubewarden/rego-policies-library
    name: network-block-all-ingress-traffic-to-namespace-from-cidr-block
    sources:
    - ghcr.io/kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.0/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.0.tgz
    version: 1.0.0
  ocirepository-cosign-verification:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-cosign-verification
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:29:12.22340855Z"
    description: OCIRepository resources must provide Cosign verification and reference
      a specific key.
    digest: 50a6aa1cebf538c3c8c491d641a9966406e3ca8e786c81777acefa9082fda80a
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-cosign-verification:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-cosign-verification-1.0.3/ocirepository-cosign-verification-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-cosign-verification
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:07:26.055177041Z"
    description: OCIRepository resources must provide Cosign verification and reference
      a specific key.
    digest: 332c47286e55691c4220f735ea66df30261658bf416d54433feaa89d724e6efe
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-cosign-verification:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-cosign-verification-1.0.2/ocirepository-cosign-verification-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-cosign-verification
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:08.102027358Z"
    description: OCIRepository resources must provide Cosign verification and reference
      a specific key.
    digest: d38e4d3160a663cc9f2689143d5921aeda66d3f6581a21d21647a2544b5faa1a
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-cosign-verification:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-cosign-verification-1.0.1/ocirepository-cosign-verification-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-cosign-verification
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:58.086767948Z"
    description: OCIRepository resources must provide Cosign verification and reference
      a specific key.
    digest: 3bf927f3b28673063518e83442dfb33e2fa6b42f763308e54a3ab9607b2cfe6d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-cosign-verification:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-cosign-verification-1.0.0/ocirepository-cosign-verification-1.0.0.tgz
    version: 1.0.0
  ocirepository-ignore-suffixes:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-ignore-suffixes
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:57.542284093Z"
    description: OCIRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit..
    digest: c98e5b9c277342f06fb092c98fb96ee4f59d6609bfb614d095ca498301c59e53
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    - oci
    - suffixes
    name: ocirepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-ignore-suffixes:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-ignore-suffixes-1.0.3/ocirepository-ignore-suffixes-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-ignore-suffixes
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:06:18.521323909Z"
    description: OCIRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit..
    digest: 14a40eb267537c54495242d42c3c6205d301318cc10f9f529bb1e9a4c6274b02
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    - oci
    - suffixes
    name: ocirepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-ignore-suffixes:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-ignore-suffixes-1.0.2/ocirepository-ignore-suffixes-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-ignore-suffixes
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:08.238806778Z"
    description: OCIRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit..
    digest: d02904ab94091d1baf7878806b0c30e1e5a9fa603f24de4fe7f962b3c1742af4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    - oci
    - suffixes
    name: ocirepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-ignore-suffixes:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-ignore-suffixes-1.0.1/ocirepository-ignore-suffixes-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-ignore-suffixes
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.503615297Z"
    description: OCIRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit..
    digest: ea8766377aeafbb810001a8ddbb38266e79d1c8cdb8ef7ca0af7d0ffc2c5f739
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    - oci
    - suffixes
    name: ocirepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-ignore-suffixes:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-ignore-suffixes-1.0.0/ocirepository-ignore-suffixes-1.0.0.tgz
    version: 1.0.0
  ocirepository-layer-selector:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Layer Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-layer-selector
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:57.702574876Z"
    description: OCIRepository layer selector must only reference predefined media/operation
      type.
    digest: db46080054be0c35551121ea2a2137e7b7fa674b777538943399d8ec828e7b9d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-layer-selector
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-layer-selector:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-layer-selector-1.0.3/ocirepository-layer-selector-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Layer Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-layer-selector
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:05:20.869601525Z"
    description: OCIRepository layer selector must only reference predefined media/operation
      type.
    digest: 35e65f5e9c4bbf7f184f0c21f0094f4bb3627a15a23d14afb68929bac1a5efc4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-layer-selector
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-layer-selector:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-layer-selector-1.0.2/ocirepository-layer-selector-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Layer Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-layer-selector
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:49.625055439Z"
    description: OCIRepository layer selector must only reference predefined media/operation
      type.
    digest: 7ba4d3380dc9918447057b8187ff7f847bd512908843323058ae6f15d453c0d3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-layer-selector
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-layer-selector:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-layer-selector-1.0.1/ocirepository-layer-selector-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Layer Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-layer-selector
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:58.205674204Z"
    description: OCIRepository layer selector must only reference predefined media/operation
      type.
    digest: 7615ba4cc6741feca5ad070864c2b61eace6f648cb5a79f842fec08ccf4ba5de
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-layer-selector
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-layer-selector:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-layer-selector-1.0.0/ocirepository-layer-selector-1.0.0.tgz
    version: 1.0.0
  ocirepository-not-latest:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Not Latest Tag
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-not-latest
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:57.899956108Z"
    description: OCIRepository resources must not use 'latest' as a tag reference.
    digest: 8451861f9b4848b54e263f26417dc6cc51536085177717efd26cc197046e4b6b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-not-latest
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-not-latest:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-not-latest-1.0.3/ocirepository-not-latest-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Not Latest Tag
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-not-latest
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:04:26.342149952Z"
    description: OCIRepository resources must not use 'latest' as a tag reference.
    digest: ded397a0111f0ad5d1b9923e1d9dc99da4fcaeb6110bb6f0baa19b165b3f9cb1
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-not-latest
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-not-latest:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-not-latest-1.0.2/ocirepository-not-latest-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Not Latest Tag
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-not-latest
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:28.579278903Z"
    description: OCIRepository resources must not use 'latest' as a tag reference.
    digest: 766bd20f023415ad787c4152634cb128efb28c325ba660676a7abb5d18480a75
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-not-latest
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-not-latest:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-not-latest-1.0.1/ocirepository-not-latest-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Not Latest Tag
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-not-latest
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.636275532Z"
    description: OCIRepository resources must not use 'latest' as a tag reference.
    digest: 1540a063276c0d041209c49ed52a17066d13911672d03ecfda09e29ceefb46b4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-not-latest
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-not-latest:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-not-latest-1.0.0/ocirepository-not-latest-1.0.0.tgz
    version: 1.0.0
  ocirepository-organization-domains:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-organization-domains
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:58.03235298Z"
    description: OCIRepository resources must only be from allowed organization domains.
    digest: d47ddd50e50b86e68f7be62ebe84483bc6758c7ce25cae2c32dc280702b7db03
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-organization-domains:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-organization-domains-1.0.3/ocirepository-organization-domains-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-organization-domains
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:03:03.930275547Z"
    description: OCIRepository resources must only be from allowed organization domains.
    digest: b26be6bf4226603ea1d93a4aa89b0953d6df8889c8016a17e6302336f27f4644
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-organization-domains:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-organization-domains-1.0.2/ocirepository-organization-domains-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-organization-domains
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:30.127799637Z"
    description: OCIRepository resources must only be from allowed organization domains.
    digest: b6e8f359d3b0fcb4bba71879dd0b97afcde5d15293a46b87f5683f495552a3e4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-organization-domains:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-organization-domains-1.0.1/ocirepository-organization-domains-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-organization-domains
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:58.328279721Z"
    description: OCIRepository resources must only be from allowed organization domains.
    digest: 074be5f11763162f8c56035ad543e2506f107713c5231d993866cc9d0c129d92
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-organization-domains:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-organization-domains-1.0.0/ocirepository-organization-domains-1.0.0.tgz
    version: 1.0.0
  ocirepository-patch-annotation:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Patch Annotation
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-patch-annotation
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:58.196263983Z"
    description: OCIRepository resources must have a patch annotation that matches
      the provider.
    digest: ad802a90b8341795c73e3f21f186f7f2ca74cc20719a8465fef685146ee5cb46
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-patch-annotation
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-patch-annotation:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-patch-annotation-1.0.3/ocirepository-patch-annotation-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Patch Annotation
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-patch-annotation
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:02:08.685089522Z"
    description: OCIRepository resources must have a patch annotation that matches
      the provider.
    digest: 6a445352f0b1ade04d3fac6f0bd3aa000347976c82e302e622806772b0ad0519
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-patch-annotation
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-patch-annotation:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-patch-annotation-1.0.2/ocirepository-patch-annotation-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Patch Annotation
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-patch-annotation
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:28.695279614Z"
    description: OCIRepository resources must have a patch annotation that matches
      the provider.
    digest: e1238073e8221b5dd27519db1d06b452cb518e6fe8e4b826b0765fc397d69d83
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-patch-annotation
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-patch-annotation:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-patch-annotation-1.0.1/ocirepository-patch-annotation-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Patch Annotation
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-patch-annotation
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.741158922Z"
    description: OCIRepository resources must have a patch annotation that matches
      the provider.
    digest: d67119fc340f8fceb01ec4b392b4d72aa6d64b756b2b86f3c06aa65b553c15ea
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-patch-annotation
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-patch-annotation:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/ocirepository-patch-annotation-1.0.0/ocirepository-patch-annotation-1.0.0.tgz
    version: 1.0.0
  persistent-volume-access-modes:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Access Modes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-access-modes
      kubewarden/resources: PersistentVolume
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumes
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:18.860425827Z"
    description: 'A PersistentVolume can be mounted on a host in any way supported
      by the resource provider. As shown in the table below, providers will have different
      capabilities and each PV''s access modes are set to the specific modes supported
      by that particular volume. For example, NFS can support multiple read/write
      clients, but a specific NFS PV might be exported on the server as read-only.
      Each PV gets its own set of access modes describing that specific PV''s capabilities.  The
      access modes are:  * ReadWriteOnce * ReadOnlyMany * ReadWriteMany * ReadWriteOncePod '
    digest: 7dee561d9c35977abbbbfa67c1e1ee4f088b0a9415bfb1530f46d061413c413e
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-access-modes
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-access-modes-1.0.3/persistent-volume-access-modes-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Access Modes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-access-modes
      kubewarden/resources: PersistentVolume
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumes
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:50:12.994699979Z"
    description: 'A PersistentVolume can be mounted on a host in any way supported
      by the resource provider. As shown in the table below, providers will have different
      capabilities and each PV''s access modes are set to the specific modes supported
      by that particular volume. For example, NFS can support multiple read/write
      clients, but a specific NFS PV might be exported on the server as read-only.
      Each PV gets its own set of access modes describing that specific PV''s capabilities.  The
      access modes are:  * ReadWriteOnce * ReadOnlyMany * ReadWriteMany * ReadWriteOncePod '
    digest: 3456aac356cb0f28b93b8e05a20d790de97ec911533d6cc470048ce6ab315a93
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-access-modes
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-access-modes-1.0.2/persistent-volume-access-modes-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Access Modes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-access-modes
      kubewarden/resources: PersistentVolume
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumes
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:58:36.300140535Z"
    description: 'A PersistentVolume can be mounted on a host in any way supported
      by the resource provider. As shown in the table below, providers will have different
      capabilities and each PV''s access modes are set to the specific modes supported
      by that particular volume. For example, NFS can support multiple read/write
      clients, but a specific NFS PV might be exported on the server as read-only.
      Each PV gets its own set of access modes describing that specific PV''s capabilities.  The
      access modes are:  * ReadWriteOnce * ReadOnlyMany * ReadWriteMany * ReadWriteOncePod '
    digest: e25a53e794b9f267fda424b6ffd1ba8712761fa4c106d828fad756cd714f05ca
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-access-modes
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-access-modes-1.0.1/persistent-volume-access-modes-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Access Modes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-access-modes
      kubewarden/resources: PersistentVolume
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumes
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.395024719Z"
    description: 'A PersistentVolume can be mounted on a host in any way supported
      by the resource provider. As shown in the table below, providers will have different
      capabilities and each PV''s access modes are set to the specific modes supported
      by that particular volume. For example, NFS can support multiple read/write
      clients, but a specific NFS PV might be exported on the server as read-only.
      Each PV gets its own set of access modes describing that specific PV''s capabilities.  The
      access modes are:  * ReadWriteOnce * ReadOnlyMany * ReadWriteMany * ReadWriteOncePod '
    digest: cb5e4e3d33f5dc180af13f4391c030b2db027ff4ba0f10e4e990cf5037163061
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-access-modes
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-access-modes-1.0.0/persistent-volume-access-modes-1.0.0.tgz
    version: 1.0.0
  persistent-volume-claim-snapshot:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Claim Snapshot
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-claim-snapshot
      kubewarden/resources: VolumeSnapshot
      kubewarden/rules: |
        - apiGroups:
          - snapshot.storage.k8s.io
          apiVersions:
          - v1
          resources:
          - volumesnapshots
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:27:57.368825894Z"
    description: 'This Policy checks for a PVC Snapshot.  '
    digest: f5582e0a2d5870bf17f1db9f834ef38d79b1edc975070ba027bad86c79e2b777
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-claim-snapshot
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-claim-snapshot:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-claim-snapshot-1.0.3/persistent-volume-claim-snapshot-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Claim Snapshot
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-claim-snapshot
      kubewarden/resources: VolumeSnapshot
      kubewarden/rules: |
        - apiGroups:
          - snapshot.storage.k8s.io
          apiVersions:
          - v1
          resources:
          - volumesnapshots
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:49:05.679382952Z"
    description: 'This Policy checks for a PVC Snapshot.  '
    digest: 7b880204117d9ec106e138d7176c4e983df51f90fc039caab5dfb1ad5c9a86bc
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-claim-snapshot
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-claim-snapshot:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-claim-snapshot-1.0.2/persistent-volume-claim-snapshot-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Claim Snapshot
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-claim-snapshot
      kubewarden/resources: VolumeSnapshot
      kubewarden/rules: |
        - apiGroups:
          - snapshot.storage.k8s.io
          apiVersions:
          - v1
          resources:
          - volumesnapshots
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:49.761258705Z"
    description: 'This Policy checks for a PVC Snapshot.  '
    digest: a9c7f28820c81f906c412ebc4a3e7b539bbefd25cc672fa7034ac16ab4b3c00a
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-claim-snapshot
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-claim-snapshot:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-claim-snapshot-1.0.1/persistent-volume-claim-snapshot-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Claim Snapshot
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-claim-snapshot
      kubewarden/resources: VolumeSnapshot
      kubewarden/rules: |
        - apiGroups:
          - snapshot.storage.k8s.io
          apiVersions:
          - v1
          resources:
          - volumesnapshots
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:01.057229017Z"
    description: 'This Policy checks for a PVC Snapshot.  '
    digest: 61392bf065a405a25c5cc0dd18c2b78d10788ba8acceb3d73c62b5f13faa362b
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-claim-snapshot
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-claim-snapshot:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistent-volume-claim-snapshot-1.0.0/persistent-volume-claim-snapshot-1.0.0.tgz
    version: 1.0.0
  persistentvolumeclaim-storageclass-policy:
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:31:17.105966883Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: 6035a7586c1b6ce8a367829dc6dbcb9f724fcc17493332b58be512240824664c
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-1.0.4/persistentvolumeclaim-storageclass-policy-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:13:50.911571795Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: d0a1c97c0a93f46da7b9d758cbba93831668767a621c8b394bfa1e9d3794faf8
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-1.0.3/persistentvolumeclaim-storageclass-policy-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:37:33.010221582Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: 1f5c95b08da239eb66ed46db4f06903e0eee1bc61b099bcc148ae4575fdc974c
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-1.0.2/persistentvolumeclaim-storageclass-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:05.096551003Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: ee8cfb393d0181b69ffec995e06a4a8c5f34d9ba5806732d4d6970e0b773b3b5
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-1.0.0/persistentvolumeclaim-storageclass-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-03-18T13:57:00.465078126Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: d8cc6a279d3b39b7879a0ded5df21c914a3146def99a08dcb454f2733ee7be42
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v0.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-0.1.1/persistentvolumeclaim-storageclass-policy-0.1.1.tgz
    version: 0.1.1
  pod-ndots:
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T13:58:09.06724624Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: 69224b0b23d8a5726c3c0d0ae311bfc7fcb9496657db3ac9eab4e71be4bf0236
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-ndots-1.0.4/pod-ndots-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T10:15:03.700615992Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: cb94cf9b256c046886138fbc0c3d1c52b944f431b3b336684d0de85d8cd56eb7
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-ndots-1.0.3/pod-ndots-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:22:23.892055056Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: ee2f8afe6a59ba2716dea2ec9d17d8f2261d5be96ca3697fb910362b16bea547
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-ndots-1.0.2/pod-ndots-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:33.832697007Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: 2e52b98be5431a13b674a6d3e4555494f69dcd614041ab18c8f1ed73859e5549
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-ndots-1.0.0/pod-ndots-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-03-18T13:57:00.659523723Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: e0751242966ef4f3ffa4838393a6d30e68edae7dc72c27050ac38253709110fd
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v0.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-ndots-0.1.1/pod-ndots-0.1.1.tgz
    version: 0.1.1
  pod-privileged-policy:
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:27:51.58881453Z"
    description: Limit the ability to create privileged containers
    digest: cdfe452c5b5d02b1b2a5aa5c090dbcb3691ab5b433b0acb78442b7080b00c00b
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-privileged-policy-1.0.4/pod-privileged-policy-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:15:01.907643669Z"
    description: Limit the ability to create privileged containers
    digest: 566d708d1ed7f43f526226c66280970ed413553de9d6943f08020ce4e277f809
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-privileged-policy-1.0.3/pod-privileged-policy-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:35:12.310995823Z"
    description: Limit the ability to create privileged containers
    digest: 6ff940cd5da30dfa87e8af748e32d369b45cad4a59167d5e894a8660bd31989f
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-privileged-policy-1.0.2/pod-privileged-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:28:04.905437983Z"
    description: Limit the ability to create privileged containers
    digest: f8e0ed48a124b1642b4918ab4271163626c32fa8f1c3aee8cb8c369e1f5ad7be
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-privileged-policy-1.0.0/pod-privileged-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.4
    apiVersion: v1
    appVersion: 0.3.4
    created: "2025-04-09T15:59:14.754474395Z"
    description: Limit the ability to create privileged containers
    digest: 53dca74d6dbbecee5bc25d916fdcf34611c0b615082719f97909666c342306cd
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v0.3.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-privileged-policy-0.3.4/pod-privileged-policy-0.3.4.tgz
    version: 0.3.4
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.3
    apiVersion: v1
    appVersion: 0.3.3
    created: "2025-03-18T13:57:00.82723218Z"
    description: Limit the ability to create privileged containers
    digest: 28c4961b6973f21deec099a0cc1ed333a743f0009cadd89a3edb326e7aa3cab9
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v0.3.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-privileged-policy-0.3.3/pod-privileged-policy-0.3.3.tgz
    version: 0.3.3
  pod-runtime:
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:29:34.784107291Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: 2060ec9f48d4191d82a978d5cc91cd628033dea15a9d9f46a4b62f99b926b05b
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-runtime-1.0.4/pod-runtime-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:18:15.247547408Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: f138bd59add4ba14007c8013a58d36f37808cb5f6155739993356904afd0c764
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-runtime-1.0.3/pod-runtime-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:52:00.448654371Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: 39849dd1eb42e0b09b9a8710ddc3316380bdebd67c18dfc28c2280fac78891d2
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-runtime-1.0.2/pod-runtime-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:34.016083097Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: 6a0a8da06848ffc65802fcf7d06ab7e425e8289eff2a845e5e6e4465fea6e579
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-runtime-1.0.0/pod-runtime-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.2
    apiVersion: v1
    appVersion: 0.2.2
    created: "2025-03-18T13:57:01.034468925Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: b0fda1a3b9715f46e63a7b8a422532f6504a6f2c652cdd5515bb5afeb31ed1bd
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v0.2.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/pod-runtime-0.2.2/pod-runtime-0.2.2.tgz
    version: 0.2.2
  priority-class-policy:
  - annotations:
      artifacthub.io/repository: priority-class-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Priority class policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/priority-class-policy
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-14T17:27:46.097611963Z"
    description: Validates Pod's priority class
    digest: bee094d542ef31ba02146f562813a4466550c8d2eacdba3f15dae725b682c707
    home: https://github.com/kubewarden/priority-class-policy
    keywords:
    - pod
    - priority-class
    name: priority-class-policy
    sources:
    - ghcr.io/kubewarden/policies/priority-class-policy:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/priority-class-policy-1.0.4/priority-class-policy-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: priority-class-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Priority class policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/priority-class-policy
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-06-18T13:17:37.087652103Z"
    description: Validates Pod's priority class
    digest: 5ad1956b9cffa510886e06dd17a6a7f206ba313e929e005ab14086bc0e22a4f1
    home: https://github.com/kubewarden/priority-class-policy
    keywords:
    - pod
    - priority-class
    name: priority-class-policy
    sources:
    - ghcr.io/kubewarden/policies/priority-class-policy:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/priority-class-policy-1.0.3/priority-class-policy-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: priority-class-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Priority class policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/priority-class-policy
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T08:00:07.783486727Z"
    description: Validates Pod's priority class
    digest: 4cf7937faa65aecfb3ac28abf7025ef790f29600fc724e158c9f423bcec476f4
    home: https://github.com/kubewarden/priority-class-policy
    keywords:
    - pod
    - priority-class
    name: priority-class-policy
    sources:
    - ghcr.io/kubewarden/policies/priority-class-policy:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/priority-class-policy-1.0.0/priority-class-policy-1.0.0.tgz
    version: 1.0.0
  psa-label-enforcer:
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.5
    apiVersion: v1
    appVersion: 1.0.5
    created: "2025-08-13T14:23:35.010157815Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: 126d58348c84abc8efd054c116c1559e3a4f1df92eae83cbc385f6a1bc8a179d
    home: https://github.com/kubewarden/psa-label-enforcer-policy
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v1.0.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psa-label-enforcer-1.0.5/psa-label-enforcer-1.0.5.tgz
    version: 1.0.5
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-14T17:25:35.209657631Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: 260922e8a423a2c3c14d85f8606fd2d0dacb1aa5cbe9bd080070d72a956ffa83
    home: https://github.com/kubewarden/psa-label-enforcer
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psa-label-enforcer-1.0.4/psa-label-enforcer-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-06-13T18:27:58.01178997Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: e36e87ae3eff093ce1eb18c6684f0bbe19224d4ae0588e0eb685f4ced37a4e83
    home: https://github.com/kubewarden/psa-label-enforcer
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psa-label-enforcer-1.0.3/psa-label-enforcer-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:28:49.487359559Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: 83974301bdaca3b19f36eae1fd28fc3b684f95d34869800a739a6b4fed76a435
    home: https://github.com/kubewarden/psa-label-enforcer
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psa-label-enforcer-1.0.0/psa-label-enforcer-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.3
    apiVersion: v1
    appVersion: 0.1.3
    created: "2025-03-18T13:57:01.304254367Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: b98ae80d3f3612792720f1fc68765c01d081b838dd8391c4ad4fa89946e5cef9
    home: https://github.com/kubewarden/psa-label-enforcer
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v0.1.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psa-label-enforcer-0.1.3/psa-label-enforcer-0.1.3.tgz
    version: 0.1.3
  psp-apparmor:
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:01:33.460813328Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: 26dee6373c058096ed57481d48a0f75d8b86c6448c20fa6625b1042a2e7f2744
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psp-apparmor-1.0.4/psp-apparmor-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:33:47.237095509Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: 14362788c3df882f8487342ed4604adf711879ed62523fee3080fa83e568e5d8
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psp-apparmor-1.0.3/psp-apparmor-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:20:45.055532878Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: 4082a24c3e5af7d69e5041b69121b746864d960162302635528268c52ed4aefc
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psp-apparmor-1.0.2/psp-apparmor-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:47.627041364Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: b620d6f710c6e9c789a4d4605d1421da73306cab6743b210530688c66534a433
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psp-apparmor-1.0.0/psp-apparmor-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.13
    apiVersion: v1
    appVersion: 0.1.13
    created: "2025-03-18T13:57:01.47445663Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: 5e2603d62e4f7b0f9a11e003140cf1c39a70a1e52a93f60c2a0bdbbde069b9ee
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v0.1.13
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/psp-apparmor-0.1.13/psp-apparmor-0.1.13.tgz
    version: 0.1.13
  rbac-prohibit-list-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit List On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-list-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:27:57.555115553Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''list'' verb on ''secrets'' resource. '
    digest: 22a4aeeeeac6f2b077104b1ae28456982ab9f1829f61d4d06cf71a37a3a5da97
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-list-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-list-secrets:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-list-secrets-1.0.3/rbac-prohibit-list-secrets-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit List On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-list-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:48:04.13728621Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''list'' verb on ''secrets'' resource. '
    digest: 9ccecfd5faac542362e01cfee82d5d3ed0a9a9a189db6982e9ce9794caf0aa49
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-list-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-list-secrets:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-list-secrets-1.0.2/rbac-prohibit-list-secrets-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit List On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-list-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:09.739911476Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''list'' verb on ''secrets'' resource. '
    digest: 29952433c434cbca9741a63a2eca4131250787c3b39afbb4b085c0890a6f3809
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-list-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-list-secrets:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-list-secrets-1.0.1/rbac-prohibit-list-secrets-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit List On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-list-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:01.273156873Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''list'' verb on ''secrets'' resource. '
    digest: 39328e78742325064c4a5eec0b67e8d230cb580ff474e6def7ffcbcc3d3edf2f
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-list-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-list-secrets:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-list-secrets-1.0.0/rbac-prohibit-list-secrets-1.0.0.tgz
    version: 1.0.0
  rbac-prohibit-watch-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Watch On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-watch-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:27:57.74209362Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''watch'' verb on ''secrets'' resource. '
    digest: b06b4104494f82ccb448a3df0918dc5306808fb6f3a0fec3282c71c62724f5fb
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-watch-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-watch-secrets:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-watch-secrets-1.0.3/rbac-prohibit-watch-secrets-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Watch On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-watch-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:47:01.653795746Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''watch'' verb on ''secrets'' resource. '
    digest: 459949abee16bfeee881b1e684f0b3d5819798a99b56aaf350ccd164da342116
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-watch-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-watch-secrets:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-watch-secrets-1.0.2/rbac-prohibit-watch-secrets-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Watch On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-watch-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:28.821949765Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''watch'' verb on ''secrets'' resource. '
    digest: 771762352f74eb1305b1280811dabdf44b4e423e6d696cc3839112e06d279223
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-watch-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-watch-secrets:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-watch-secrets-1.0.1/rbac-prohibit-watch-secrets-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Watch On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-watch-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.510107703Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''watch'' verb on ''secrets'' resource. '
    digest: 8bdb02231c4849741bf256fbc9e23d1588dcd27c534b87267fd3c297c2f8ec03
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-watch-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-watch-secrets:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-watch-secrets-1.0.0/rbac-prohibit-watch-secrets-1.0.0.tgz
    version: 1.0.0
  rbac-prohibit-wildcard-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcard On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcard-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:27:39.247559749Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''wildcard'' verb on ''secrets'' resource. '
    digest: 029e0f81f72696c0948e0bb5005fac8a23889e0d8cda203eebc04cfdb9af0209
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcard-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcard-secrets:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcard-secrets-1.0.3/rbac-prohibit-wildcard-secrets-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcard On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcard-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:31:33.016174769Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''wildcard'' verb on ''secrets'' resource. '
    digest: de0c9e21e5779cd7143d3a90fc2c3a8995dac66e09807f386597862660f820f5
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcard-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcard-secrets:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcard-secrets-1.0.2/rbac-prohibit-wildcard-secrets-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcard On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcard-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T07:00:19.428436407Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''wildcard'' verb on ''secrets'' resource. '
    digest: 5aa9bb896556734d7c758e35cf2c6c04bc6e43d315e0e33055072ba601b623cd
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcard-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcard-secrets:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcard-secrets-1.0.1/rbac-prohibit-wildcard-secrets-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcard On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcard-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:01.470242743Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''wildcard'' verb on ''secrets'' resource. '
    digest: 076f1cb161cba7aa4ae4cefb23f6bb9be3bbe6f11ad64d4016fce397d1f94d80
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcard-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcard-secrets:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcard-secrets-1.0.0/rbac-prohibit-wildcard-secrets-1.0.0.tgz
    version: 1.0.0
  rbac-prohibit-wildcards-policyrule-resources:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Resources
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-03T13:37:52.047293704Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: f573161a084aee8af067ef9e7e7ff6c8f718bf8c42ca469ad2ab2f2efe282008
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-resources
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-resources-1.0.4/rbac-prohibit-wildcards-policyrule-resources-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Resources
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:27:57.975965375Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: 7c4eb054c818bed656e9019e8605aef805858d66918e2fdb0013f6109ef813e4
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-resources
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-resources-1.0.3/rbac-prohibit-wildcards-policyrule-resources-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Resources
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:30:20.360889368Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: eac4b4e0d2faefdb1419295565aae792d628b5cb65bfa6f80fa968bff6d9a145
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-resources
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-resources-1.0.2/rbac-prohibit-wildcards-policyrule-resources-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Resources
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:28.944448464Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: c3163229d2835c23c6dcaf6267156f289725cfca21ff3f0ca9df99b6a6eba9ab
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-resources
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-resources-1.0.1/rbac-prohibit-wildcards-policyrule-resources-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Resources
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.60860209Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: 0dddff03145febd665baf2701f8f19c7f6b243bb3e77a66bf4d8de1801dcc833
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-resources
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-resources-1.0.0/rbac-prohibit-wildcards-policyrule-resources-1.0.0.tgz
    version: 1.0.0
  rbac-prohibit-wildcards-policyrule-verbs:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Verbs
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-03T13:37:39.763243531Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: c642b736d87c4047c10c9f11df6436c562c57a625938ecf34bc694506a474d57
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-verbs
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-verbs-1.0.4/rbac-prohibit-wildcards-policyrule-verbs-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Verbs
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:27:39.460777848Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: e72b230babb7f0e24e0867595e11807f489e8c892f0625255d324a7c006b14e9
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-verbs
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-verbs-1.0.3/rbac-prohibit-wildcards-policyrule-verbs-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Verbs
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:30:04.654226735Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: b638059f98decbae948919808dd2da4833bdb8143200de79045d6cfbea44705f
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-verbs
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-verbs-1.0.2/rbac-prohibit-wildcards-policyrule-verbs-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Verbs
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:54:50.216745271Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: 462caa07a0967f03b81614147be5c297e98762883704a39a39934f12e29f8785
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-verbs
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-verbs-1.0.1/rbac-prohibit-wildcards-policyrule-verbs-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Verbs
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:23.730674322Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: 24eac4b1205ee46ba26bf44f8285d266413ab59fffd2d30c3afa385ecfc05e80
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-verbs
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-verbs-1.0.0/rbac-prohibit-wildcards-policyrule-verbs-1.0.0.tgz
    version: 1.0.0
  readonly-root-filesystem-psp:
  - annotations:
      artifacthub.io/repository: readonly-root-filesystem-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Readonly Root Filesystem PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/readonly-root-filesystem-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T13:57:46.804324213Z"
    description: A Kubewarden policy that enforces root filesystem to be readonly
    digest: ada65c639bda2e7cd44b7cec6d6b46c91279af052679bea99589c3d6b9e7e1f5
    home: https://github.com/kubewarden/readonly-root-filesystem-psp-policy
    keywords:
    - psp
    - container
    - filesystem
    - volume
    name: readonly-root-filesystem-psp
    sources:
    - ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/readonly-root-filesystem-psp-1.0.4/readonly-root-filesystem-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: readonly-root-filesystem-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Readonly Root Filesystem PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/readonly-root-filesystem-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:28:59.186107995Z"
    description: A Kubewarden policy that enforces root filesystem to be readonly
    digest: ea23db21bb423f038de423d8cca009668e7160db7805cd65ef5119dce49083e6
    home: https://github.com/kubewarden/readonly-root-filesystem-psp-policy
    keywords:
    - psp
    - container
    - filesystem
    - volume
    name: readonly-root-filesystem-psp
    sources:
    - ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/readonly-root-filesystem-psp-1.0.3/readonly-root-filesystem-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: readonly-root-filesystem-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Readonly Root Filesystem PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/readonly-root-filesystem-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-09T10:10:45.281541035Z"
    description: A Kubewarden policy that enforces root filesystem to be readonly
    digest: 7bf7f0de7714af656842b8b3acfb0e041da8177fd0ce32e17891397423b7d065
    home: https://github.com/kubewarden/readonly-root-filesystem-psp-policy
    keywords:
    - psp
    - container
    - filesystem
    - volume
    name: readonly-root-filesystem-psp
    sources:
    - ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/readonly-root-filesystem-psp-1.0.2/readonly-root-filesystem-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: readonly-root-filesystem-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Readonly Root Filesystem PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/readonly-root-filesystem-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:28:34.24162353Z"
    description: A Kubewarden policy that enforces root filesystem to be readonly
    digest: 2a204ff02df8a1b6ec07182ea204019d66895d270f4414181ef0eb33baf8f3bd
    home: https://github.com/kubewarden/readonly-root-filesystem-psp-policy
    keywords:
    - psp
    - container
    - filesystem
    - volume
    name: readonly-root-filesystem-psp
    sources:
    - ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/readonly-root-filesystem-psp-1.0.0/readonly-root-filesystem-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: readonly-root-filesystem-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Readonly Root Filesystem PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/readonly-root-filesystem-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.6
    apiVersion: v1
    appVersion: 0.1.6
    created: "2025-03-18T13:57:01.652548868Z"
    description: A Kubewarden policy that enforces root filesystem to be readonly
    digest: 7faa4dae9c0578c18f19edf7206a83fde402fb57e89182d42c47b056477b59df
    home: https://github.com/kubewarden/readonly-root-filesystem-psp-policy
    keywords:
    - psp
    - container
    - filesystem
    - volume
    name: readonly-root-filesystem-psp
    sources:
    - ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v0.1.6
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/readonly-root-filesystem-psp-0.1.6/readonly-root-filesystem-psp-0.1.6.tgz
    version: 0.1.6
  resource-quota-setting-is-missing:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Quota Setting Is Missing
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-quota-setting-is-missing
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:19.045706693Z"
    description: 'When creating resource quotas per namespace, ensure CPU and Memory
      requests and limits are set. '
    digest: b01cc1c77fb5d3edc60804aff5d679c3637ab9263e56fcec53ed309e00ae1644
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: resource-quota-setting-is-missing
    sources:
    - ghcr.io/kubewarden/policies/resource-quota-setting-is-missing:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-quota-setting-is-missing-1.0.3/resource-quota-setting-is-missing-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Quota Setting Is Missing
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-quota-setting-is-missing
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:54:25.91816888Z"
    description: 'When creating resource quotas per namespace, ensure CPU and Memory
      requests and limits are set. '
    digest: 73a82450e16ebe4427359c4388ef916bf306bb6e408db3a5a5f6741c95524bb9
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: resource-quota-setting-is-missing
    sources:
    - ghcr.io/kubewarden/policies/resource-quota-setting-is-missing:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-quota-setting-is-missing-1.0.2/resource-quota-setting-is-missing-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Quota Setting Is Missing
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-quota-setting-is-missing
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:09.858907947Z"
    description: 'When creating resource quotas per namespace, ensure CPU and Memory
      requests and limits are set. '
    digest: 57392bfb24a485b435421215dedef2beba7f4ba282793e61a3a35d9553e52fe4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: resource-quota-setting-is-missing
    sources:
    - ghcr.io/kubewarden/policies/resource-quota-setting-is-missing:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-quota-setting-is-missing-1.0.1/resource-quota-setting-is-missing-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Quota Setting Is Missing
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-quota-setting-is-missing
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:01.663429461Z"
    description: 'When creating resource quotas per namespace, ensure CPU and Memory
      requests and limits are set. '
    digest: c29b1a14b7b8523193fe278f99f641df3c59624dc82db5dfd6c906d3265fef7c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: resource-quota-setting-is-missing
    sources:
    - ghcr.io/kubewarden/policies/resource-quota-setting-is-missing:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-quota-setting-is-missing-1.0.0/resource-quota-setting-is-missing-1.0.0.tgz
    version: 1.0.0
  resource-reconcile-interval:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-03T13:38:44.726810252Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: 6aa73231c0a4ec6c3c3cdaa111c38c57dacc35a934ce70f8eba659a76530f41b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-reconcile-interval-1.0.4/resource-reconcile-interval-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:40.595414442Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: 853f674cb8736bc9e69e68dff63e4c1c253f7d3121cd40ff3d1e7ae98b2e314a
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-reconcile-interval-1.0.3/resource-reconcile-interval-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T08:00:56.739291088Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: 92f86f27bc21bd6dcb31ee05f4f7642ad33f30ba839104d447924b3c0fa50688
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-reconcile-interval-1.0.2/resource-reconcile-interval-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:55:49.86184926Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: b3aa99ede942931b8be7a5ab04c1aa74dce70f0477e89d3a6f6f069a4b24c383
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-reconcile-interval-1.0.1/resource-reconcile-interval-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.842232624Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: e720554c57277258ec70fa0246fe70a5211e9fb0f7ddecf952d5663f84c8053b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-reconcile-interval-1.0.0/resource-reconcile-interval-1.0.0.tgz
    version: 1.0.0
  resource-suspend-waiver:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Suspend Waiver
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-suspend-waiver
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-04-16T14:28:40.785994082Z"
    description: Resource cannot be suspended unless it's on the waiver list.
    digest: 96feed78a3287de4a4a8d93f2457bca55873558ad09b61f6d8e0b135a4e9f44d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-suspend-waiver
    sources:
    - ghcr.io/kubewarden/policies/resource-suspend-waiver:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-suspend-waiver-1.0.3/resource-suspend-waiver-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Suspend Waiver
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-suspend-waiver
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-14T07:59:48.16081407Z"
    description: Resource cannot be suspended unless it's on the waiver list.
    digest: 75564bcd5e880305853ddf8ba5d8848e99fad09c497ef56e24690baff5e432f9
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-suspend-waiver
    sources:
    - ghcr.io/kubewarden/policies/resource-suspend-waiver:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-suspend-waiver-1.0.2/resource-suspend-waiver-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Suspend Waiver
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-suspend-waiver
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-01T06:56:27.103289511Z"
    description: Resource cannot be suspended unless it's on the waiver list.
    digest: 10876f9c70bb1a78699779dd426dc589c5fc0f7ea738e8318da34f793ef927fc
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-suspend-waiver
    sources:
    - ghcr.io/kubewarden/policies/resource-suspend-waiver:v1.0.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-suspend-waiver-1.0.1/resource-suspend-waiver-1.0.1.tgz
    version: 1.0.1
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Suspend Waiver
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-suspend-waiver
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-03-19T07:16:40.974672552Z"
    description: Resource cannot be suspended unless it's on the waiver list.
    digest: 22fbaa3c161c9b46c6e991b93ee64fcf4e9bfd1654b0bd0df0ccfb370ab4f939
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-suspend-waiver
    sources:
    - ghcr.io/kubewarden/policies/resource-suspend-waiver:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/resource-suspend-waiver-1.0.0/resource-suspend-waiver-1.0.0.tgz
    version: 1.0.0
  safe-annotations:
  - annotations:
      artifacthub.io/repository: safe-annotations
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Annotations
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-annotations
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:18.721443648Z"
    description: A policy that validates Kubernetes' resource annotations
    digest: db90eeee8b9d2fed733ae54106c9090ff1becf66c8210eae3acb901f31230d7c
    home: https://github.com/kubewarden/safe-annotations-policy
    keywords:
    - annotations
    name: safe-annotations
    sources:
    - ghcr.io/kubewarden/policies/safe-annotations:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-annotations-1.0.0/safe-annotations-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: safe-annotations
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Annotations
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-annotations
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.10
    apiVersion: v1
    appVersion: 0.2.10
    created: "2025-03-18T13:57:01.892197423Z"
    description: A policy that validates Kubernetes' resource annotations
    digest: 7f5f4843c85c724599f2b5c773629f5f07624d55492f6818ca58a6587ac09993
    home: https://github.com/kubewarden/safe-annotations-policy
    keywords:
    - annotations
    name: safe-annotations
    sources:
    - ghcr.io/kubewarden/policies/safe-annotations:v0.2.10
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-annotations-0.2.10/safe-annotations-0.2.10.tgz
    version: 0.2.10
  safe-labels:
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:25:58.395534829Z"
    description: A policy that validates Kubernetes' resource labels
    digest: 09ea7b476c309d8b6690b907d0d59788a06e41bbb00b8a1e0f9081fd2a96973a
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-labels-1.0.4/safe-labels-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:20:16.065497335Z"
    description: A policy that validates Kubernetes' resource labels
    digest: 1c1f9ae3e52be3974cf4fea91c732dad500de0cdce11d5bdfe72e5b4153fbda5
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-labels-1.0.3/safe-labels-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:25:38.195231023Z"
    description: A policy that validates Kubernetes' resource labels
    digest: 09b70b33c7ce0ac72409cdca01be30f10b853854a3addb298455ad8150c6bd2a
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-labels-1.0.2/safe-labels-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:18.83105121Z"
    description: A policy that validates Kubernetes' resource labels
    digest: 9b4da8c4f6d9e7c7d72a9b83a657429bc78335044a201b14e8523024512881c0
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-labels-1.0.0/safe-labels-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.14
    apiVersion: v1
    appVersion: 0.1.14
    created: "2025-03-18T13:57:02.107692228Z"
    description: A policy that validates Kubernetes' resource labels
    digest: f3e69ca4633939413b2e29f0d62e56792ab9847fe124cd7812e1bf64bd61c7b1
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v0.1.14
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/safe-labels-0.1.14/safe-labels-0.1.14.tgz
    version: 0.1.14
  seccomp-psp:
  - annotations:
      artifacthub.io/repository: seccomp-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Seccomp PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/seccomp-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:31:09.108843514Z"
    description: Pod Security Policy that controls usage of Seccomp profile
    digest: 8db6155617f111d688e96428e3e5d30b66afe95e84768ac8d15ffc857c06facd
    home: https://github.com/kubewarden/seccomp-psp-policy
    keywords:
    - psp
    - seccomp
    name: seccomp-psp
    sources:
    - ghcr.io/kubewarden/policies/seccomp-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/seccomp-psp-1.0.3/seccomp-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: seccomp-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Seccomp PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/seccomp-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:18:55.061386607Z"
    description: Pod Security Policy that controls usage of Seccomp profile
    digest: 7dd11043608febf12ca28389b944fb0eb749b155a6d2a2fab9e28a5a2d4b01e6
    home: https://github.com/kubewarden/seccomp-psp-policy
    keywords:
    - psp
    - seccomp
    name: seccomp-psp
    sources:
    - ghcr.io/kubewarden/policies/seccomp-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/seccomp-psp-1.0.2/seccomp-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: seccomp-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Seccomp PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/seccomp-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:05.259759999Z"
    description: Pod Security Policy that controls usage of Seccomp profile
    digest: 2cf3158f6e3459ba4ecfc6a4bd1c97d2f3f3a38e31222b56588bbbe8ebd1b2fd
    home: https://github.com/kubewarden/seccomp-psp-policy
    keywords:
    - psp
    - seccomp
    name: seccomp-psp
    sources:
    - ghcr.io/kubewarden/policies/seccomp-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/seccomp-psp-1.0.0/seccomp-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: seccomp-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Seccomp PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/seccomp-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.4
    apiVersion: v1
    appVersion: 0.1.4
    created: "2025-03-18T13:57:02.305847901Z"
    description: Pod Security Policy that controls usage of Seccomp profile
    digest: ea78f4c4aded7bbdb71fb530c791d1a2088fb972a099e5b62f3f739eccf8605b
    home: https://github.com/kubewarden/seccomp-psp-policy
    keywords:
    - psp
    - seccomp
    name: seccomp-psp
    sources:
    - ghcr.io/kubewarden/policies/seccomp-psp:v0.1.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/seccomp-psp-0.1.4/seccomp-psp-0.1.4.tgz
    version: 0.1.4
  selinux-psp:
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:24:50.147899693Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: f90784581d1aaf19df6dd12814185ebec507ef100b7a9e69d51a256ffff5158b
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/selinux-psp-1.0.4/selinux-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:22:07.882101015Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: de83a357b222e04c749950d600af63600a2375e4b66b8043738c286633fc5ebe
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/selinux-psp-1.0.3/selinux-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:24:37.242420739Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: af1a7c1f9ee81949a4a0b584cf703e8468adcd2e441425b444a69b95843b061d
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/selinux-psp-1.0.2/selinux-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:28:49.648661041Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: 272b026e0cc28d0f6d0d35df2ec7d5672789a585620e0816005b0c0e7b3ffb36
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/selinux-psp-1.0.0/selinux-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.12
    apiVersion: v1
    appVersion: 0.1.12
    created: "2025-03-18T13:57:02.480067502Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: 4bce965e8a637fb2b8b1fe6d7a6198aebb23d76fe1ea7c88fd776039dd134d97
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v0.1.12
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/selinux-psp-0.1.12/selinux-psp-0.1.12.tgz
    version: 0.1.12
  share-pid-namespace-policy:
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:30:55.064051108Z"
    description: Policy validates pods sharing processes PID namespace
    digest: cd2e7d307c2521e5d1705444c015d4557d8699f69f824567be05b4afb90fcda9
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/share-pid-namespace-policy-1.0.4/share-pid-namespace-policy-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:19:18.849353213Z"
    description: Policy validates pods sharing processes PID namespace
    digest: 85ba6df33bcc258800c21e979107e77b977c0c5ee9c2efd74d3c7382d916a228
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/share-pid-namespace-policy-1.0.3/share-pid-namespace-policy-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:38:33.001224691Z"
    description: Policy validates pods sharing processes PID namespace
    digest: a1b0aafa76f5bd499f4dcd6d50f2f977188a8bb86c219afd8ad46564243d58da
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/share-pid-namespace-policy-1.0.2/share-pid-namespace-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:28:49.834315868Z"
    description: Policy validates pods sharing processes PID namespace
    digest: 85f914b14bd38584889837756cdd8099fdfd56a3a8437b4e92c95c25d83540d5
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/share-pid-namespace-policy-1.0.0/share-pid-namespace-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-03-18T13:57:02.723220172Z"
    description: Policy validates pods sharing processes PID namespace
    digest: f81d40f8bd580963078e0af195c8e744627888eef4a8978a15f3a9e43dc9f8f7
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v0.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/share-pid-namespace-policy-0.1.1/share-pid-namespace-policy-0.1.1.tgz
    version: 0.1.1
  sysctl-psp:
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.5
    apiVersion: v1
    appVersion: 1.0.5
    created: "2025-08-13T14:28:47.822546305Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: ecd5cdfa945b6d6992b31eb6f7ff52f9886f3d000505fe79918ee3f97a01f4f1
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v1.0.5
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/sysctl-psp-1.0.5/sysctl-psp-1.0.5.tgz
    version: 1.0.5
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-14T17:18:45.380954874Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: 115e665e68fc8ae27df69ea071860d8636ec17313fc70179fc3a09b0be7247a9
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/sysctl-psp-1.0.4/sysctl-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-06-13T18:43:56.713791029Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: e430526f527e8f60096403b5c756a08f031e767ec1a0eb386ae7e9feb65ad65b
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/sysctl-psp-1.0.3/sysctl-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-06T09:41:05.640100652Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: e9dcc91e8a32096f13104376239b674115cd8167456f7939d7cb0fc3dabbceb6
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/sysctl-psp-1.0.2/sysctl-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:05.407859038Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: 9c3f7b87db0a429d2a7500255cc82584ab55337660b1593bd1c02b0a78732feb
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/sysctl-psp-1.0.0/sysctl-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.12
    apiVersion: v1
    appVersion: 0.1.12
    created: "2025-03-18T13:57:02.90490754Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: 500c1e5eb79fe73f406e626871b6db95a9ff00062e4175fbe4645269c79f278d
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v0.1.12
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/sysctl-psp-0.1.12/sysctl-psp-0.1.12.tgz
    version: 0.1.12
  trusted-repos:
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:25:13.466348346Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: 9b527c8e4a0cf8ee8b805da51435b10952494fddec4b13abb0a30aabbaba43e4
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/trusted-repos-1.0.4/trusted-repos-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:32:29.899659295Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: d65dee9a9ce78320653824d8f27f5dfe5ed3da40b9bb79f6b07b8a48b93b8a44
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/trusted-repos-1.0.3/trusted-repos-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:25:50.562378328Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: 93e2f392da51a1005c9d521090eb2f9fe68dbd72cecc93a2898c1d5382472840
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/trusted-repos-1.0.2/trusted-repos-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:28:34.343810144Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: 4ad86afb6f91bea0c540c0f532d587ee334f72e7ca87e3548f19e31826828d9b
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/trusted-repos-1.0.0/trusted-repos-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.0
    apiVersion: v1
    appVersion: 0.2.0
    created: "2025-03-18T13:57:03.093596136Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: 735f2cd6fa3f81b2dc3a8adc307c90ba9a556abeb52e1023ca531302286c97b3
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v0.2.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/trusted-repos-0.2.0/trusted-repos-0.2.0.tgz
    version: 0.2.0
  unique-service-selector-policy:
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:31:41.944463625Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: b6e030c06a1640167f73c40d05e5bb0943dc8b955f459f3838bae4fb7d349bb0
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/unique-service-selector-policy-1.0.4/unique-service-selector-policy-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:17:41.039086337Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: 90697690740c0d1aea848e3e44fa6803a40483592f25d804c6bdb079db2e8854
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/unique-service-selector-policy-1.0.3/unique-service-selector-policy-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-16T12:48:34.516463406Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: 381648fcbfde84e441b03d654285e65cbc63be7997ba9307634c464557b0c41a
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/unique-service-selector-policy-1.0.2/unique-service-selector-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:05.530045132Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: b23f16c4b2ab909b6261fc5aea2f93bfda6c4be672c5d9ff90de33f450df280c
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/unique-service-selector-policy-1.0.0/unique-service-selector-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.0
    apiVersion: v1
    appVersion: 0.1.0
    created: "2025-03-18T13:57:03.379088371Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: 04f647ba33753cfd6771aa7297f1e8c18f2674fb0a0b30a253ed58b80be32739
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v0.1.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/unique-service-selector-policy-0.1.0/unique-service-selector-policy-0.1.0.tgz
    version: 0.1.0
  user-group-psp:
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:30:27.426940565Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: 40af5412c6d0a1e12414550df8101f610d27c713c711dd65c63b42936511a5de
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/user-group-psp-1.0.4/user-group-psp-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-30T13:10:31.76100646Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: f553db9b2cc1fc8514da4db017d1d5e3842fd1f82e8b1679078ab108028be23d
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/user-group-psp-1.0.3/user-group-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-18T13:18:19.91822578Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: a7379ebb4e2dfc1a64eddaf670f99aac80bf5ef84add1e5f7a4dcefea58a4cef
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/user-group-psp-1.0.2/user-group-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:28:34.49553694Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: d54dc70b5f4926b5d0af805d387076666a1a3b4eeb70bed6bde4864e82ae00c6
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/user-group-psp-1.0.0/user-group-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.6.3
    apiVersion: v1
    appVersion: 0.6.3
    created: "2025-03-18T13:57:03.555856157Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: 3d1c6b8120d9af9d82c1652b212cde74b8915d80aeec0015de74d27ad618619b
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v0.6.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/user-group-psp-0.6.3/user-group-psp-0.6.3.tgz
    version: 0.6.3
  verify-image-signatures:
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-08-13T14:29:56.829245177Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: 087addf7bfbb90b8d4c0144fae714d1422b022594b30196e5062697bc3a6b1ac
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v1.0.4
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/verify-image-signatures-1.0.4/verify-image-signatures-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:29:31.844112452Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: d446a2ff1f28bdaa7fd5ca75ccc7e1216b70af3e98653a45c2ba15f4dd764bb7
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/verify-image-signatures-1.0.3/verify-image-signatures-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:54:47.475462438Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: 3be8254e01a69926b255d957152f87b7f988f28a86ee25f84c523684652d8e38
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/verify-image-signatures-1.0.2/verify-image-signatures-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:30:47.762370955Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: f3245ba93efdb8799615595bceeb290c037730865dc5185bdea5911961665e41
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/verify-image-signatures-1.0.0/verify-image-signatures-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.2
    apiVersion: v1
    appVersion: 0.3.2
    created: "2025-04-09T16:03:05.36101155Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: b2c1f536580c8ecc88e0cdbdd17a29587425626a433840ae1ffa627bc30b7d6e
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v0.3.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/verify-image-signatures-0.3.2/verify-image-signatures-0.3.2.tgz
    version: 0.3.2
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.0
    apiVersion: v1
    appVersion: 0.3.0
    created: "2025-03-18T13:57:03.733667758Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: dab42863ab480de32343f8fbee02bf0923a221b0fa2bbb548d15c3f2eae10bc6
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v0.3.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/verify-image-signatures-0.3.0/verify-image-signatures-0.3.0.tgz
    version: 0.3.0
  volumemounts:
  - annotations:
      artifacthub.io/repository: volumemounts-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: volumeMounts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumemounts
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:33:09.982208134Z"
    description: Policy that inspects containers, init containers, and ephemeral containers,
      and restricts their usage of volumes by  checking the `volume` name being used
      in `volumeMounts[*].name`
    digest: 21592f446856d6c051f68a60633aa0f25b84783190b3c41200f33ba20dbbca2d
    home: https://github.com/kubewarden/volumemounts-policy
    keywords:
    - container
    - volumeMounts
    - volume
    - pod
    - workload resources
    name: volumemounts
    sources:
    - ghcr.io/kubewarden/policies/volumemounts:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumemounts-1.0.3/volumemounts-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: volumemounts-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: volumeMounts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumemounts
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-09T10:10:31.489136961Z"
    description: Policy that inspects containers, init containers, and ephemeral containers,
      and restricts their usage of volumes by  checking the `volume` name being used
      in `volumeMounts[*].name`
    digest: f9f4a622f04b48112fac97b4c9736c35293b6bb6b12a4aafc69ee10cd059ddfe
    home: https://github.com/kubewarden/volumemounts-policy
    keywords:
    - container
    - volumeMounts
    - volume
    - pod
    - workload resources
    name: volumemounts
    sources:
    - ghcr.io/kubewarden/policies/volumemounts:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumemounts-1.0.2/volumemounts-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: volumemounts-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: volumeMounts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumemounts
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:18.979931113Z"
    description: Policy that inspects containers, init containers, and ephemeral containers,
      and restricts their usage of volumes by  checking the `volume` name being used
      in `volumeMounts[*].name`
    digest: 4ff716b5bde9a9565fcb94cd90d14a500d7327d558a40e48ce965847e2581b8d
    home: https://github.com/kubewarden/volumemounts-policy
    keywords:
    - container
    - volumeMounts
    - volume
    - pod
    - workload resources
    name: volumemounts
    sources:
    - ghcr.io/kubewarden/policies/volumemounts:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumemounts-1.0.0/volumemounts-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: volumemounts-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: volumeMounts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumemounts
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-03-18T13:57:03.894802894Z"
    description: Policy that inspects containers, init containers, and ephemeral containers,
      and restricts their usage of volumes by  checking the `volume` name being used
      in `volumeMounts[*].name`
    digest: 50cb34a891b2603f2fb30c333672d4499f0131618c62a248909d79da74665fa9
    home: https://github.com/kubewarden/volumemounts-policy
    keywords:
    - container
    - volumeMounts
    - volume
    - pod
    - workload resources
    name: volumemounts
    sources:
    - ghcr.io/kubewarden/policies/volumemounts:v0.1.7
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumemounts-0.1.7/volumemounts-0.1.7.tgz
    version: 0.1.7
  volumes-psp:
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.1.1
    apiVersion: v1
    appVersion: 1.1.1
    created: "2025-08-13T14:23:58.724829726Z"
    description: Pod Security Policy that controls usage of volumes
    digest: 5a7ed783a3ac64c1f58bd7c2f6ebe38a7030fffac31b1b851e3ac9a84ac70246
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v1.1.1
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumes-psp-1.1.1/volumes-psp-1.1.1.tgz
    version: 1.1.1
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.1.0
    apiVersion: v1
    appVersion: 1.1.0
    created: "2025-07-25T13:55:44.569470972Z"
    description: Pod Security Policy that controls usage of volumes
    digest: a07d84a0c9c005a9a711eb59ed0cda54bfaf952777ad03f4e8459ffa5d4d2f9f
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v1.1.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumes-psp-1.1.0/volumes-psp-1.1.0.tgz
    version: 1.1.0
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-14T17:22:35.99451904Z"
    description: Pod Security Policy that controls usage of volumes
    digest: 508e58226c21d10b4115574360c32bc4dcc5a502907473f6f4bbc0d05c64a2a5
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v1.0.3
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumes-psp-1.0.3/volumes-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-06-13T18:21:23.54458799Z"
    description: Pod Security Policy that controls usage of volumes
    digest: b0b1cf226c18beed6297d77f50bb4fda5a3f53039cf3e974b8e0537b25055c2f
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v1.0.2
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumes-psp-1.0.2/volumes-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-04-16T10:29:19.082454062Z"
    description: Pod Security Policy that controls usage of volumes
    digest: e1d331dbc06dd5a3d4a1fb9d755cba9547b01de48f6e8a33d44b3a0f6d28468b
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v1.0.0
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumes-psp-1.0.0/volumes-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-03-18T13:57:04.064062593Z"
    description: Pod Security Policy that controls usage of volumes
    digest: 707747f39a83e2f39ab12fcb257d4b039b5089dface4a7e4773ab3896f195dc0
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v0.1.11
    urls:
    - https://github.com/kubewarden/policy-catalog/releases/download/volumes-psp-0.1.11/volumes-psp-0.1.11.tgz
    version: 0.1.11
generated: "2025-08-13T14:31:41.945744019Z"
